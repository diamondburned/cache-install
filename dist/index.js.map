{
  "version": 3,
  "sources": ["../node_modules/@actions/core/src/utils.ts", "../node_modules/@actions/core/src/command.ts", "../node_modules/@actions/core/node_modules/uuid/dist/rng.js", "../node_modules/@actions/core/node_modules/uuid/dist/regex.js", "../node_modules/@actions/core/node_modules/uuid/dist/validate.js", "../node_modules/@actions/core/node_modules/uuid/dist/stringify.js", "../node_modules/@actions/core/node_modules/uuid/dist/v1.js", "../node_modules/@actions/core/node_modules/uuid/dist/parse.js", "../node_modules/@actions/core/node_modules/uuid/dist/v35.js", "../node_modules/@actions/core/node_modules/uuid/dist/md5.js", "../node_modules/@actions/core/node_modules/uuid/dist/v3.js", "../node_modules/@actions/core/node_modules/uuid/dist/v4.js", "../node_modules/@actions/core/node_modules/uuid/dist/sha1.js", "../node_modules/@actions/core/node_modules/uuid/dist/v5.js", "../node_modules/@actions/core/node_modules/uuid/dist/nil.js", "../node_modules/@actions/core/node_modules/uuid/dist/version.js", "../node_modules/@actions/core/node_modules/uuid/dist/index.js", "../node_modules/@actions/core/src/file-command.ts", "../node_modules/@actions/http-client/src/proxy.ts", "../node_modules/tunnel/lib/tunnel.js", "../node_modules/tunnel/index.js", "../node_modules/@actions/http-client/src/index.ts", "../node_modules/@actions/http-client/src/auth.ts", "../node_modules/@actions/core/src/oidc-utils.ts", "../node_modules/@actions/core/src/summary.ts", "../node_modules/@actions/core/src/path-utils.ts", "../node_modules/@actions/core/src/core.ts", "../node_modules/@actions/io/src/io-util.ts", "../node_modules/@actions/io/src/io.ts", "../node_modules/@actions/exec/src/toolrunner.ts", "../node_modules/@actions/exec/src/exec.ts", "../node_modules/@actions/glob/src/internal-glob-options-helper.ts", "../node_modules/@actions/glob/src/internal-path-helper.ts", "../node_modules/@actions/glob/src/internal-match-kind.ts", "../node_modules/@actions/glob/src/internal-pattern-helper.ts", "../node_modules/concat-map/index.js", "../node_modules/balanced-match/index.js", "../node_modules/brace-expansion/index.js", "../node_modules/minimatch/minimatch.js", "../node_modules/@actions/glob/src/internal-path.ts", "../node_modules/@actions/glob/src/internal-pattern.ts", "../node_modules/@actions/glob/src/internal-search-state.ts", "../node_modules/@actions/glob/src/internal-globber.ts", "../node_modules/@actions/glob/src/glob.ts", "../node_modules/semver/semver.js", "../node_modules/uuid/lib/rng.js", "../node_modules/uuid/lib/bytesToUuid.js", "../node_modules/uuid/v1.js", "../node_modules/uuid/v4.js", "../node_modules/uuid/index.js", "../node_modules/@actions/cache/src/internal/constants.ts", "../node_modules/@actions/cache/src/internal/cacheUtils.ts", "../node_modules/@actions/cache/node_modules/@actions/http-client/proxy.js", "../node_modules/@actions/cache/node_modules/@actions/http-client/index.js", "../node_modules/@actions/cache/node_modules/@actions/http-client/auth.js", "../node_modules/@azure/core-http/node_modules/uuid/dist/rng.js", "../node_modules/@azure/core-http/node_modules/uuid/dist/regex.js", "../node_modules/@azure/core-http/node_modules/uuid/dist/validate.js", "../node_modules/@azure/core-http/node_modules/uuid/dist/stringify.js", "../node_modules/@azure/core-http/node_modules/uuid/dist/v1.js", "../node_modules/@azure/core-http/node_modules/uuid/dist/parse.js", "../node_modules/@azure/core-http/node_modules/uuid/dist/v35.js", "../node_modules/@azure/core-http/node_modules/uuid/dist/md5.js", "../node_modules/@azure/core-http/node_modules/uuid/dist/v3.js", "../node_modules/@azure/core-http/node_modules/uuid/dist/v4.js", "../node_modules/@azure/core-http/node_modules/uuid/dist/sha1.js", "../node_modules/@azure/core-http/node_modules/uuid/dist/v5.js", "../node_modules/@azure/core-http/node_modules/uuid/dist/nil.js", "../node_modules/@azure/core-http/node_modules/uuid/dist/version.js", "../node_modules/@azure/core-http/node_modules/uuid/dist/index.js", "../node_modules/@azure/core-http/node_modules/tslib/tslib.js", "../node_modules/psl/index.js", "../node_modules/@azure/core-http/node_modules/tough-cookie/lib/pubsuffix-psl.js", "../node_modules/@azure/core-http/node_modules/tough-cookie/lib/store.js", "../node_modules/universalify/index.js", "../node_modules/@azure/core-http/node_modules/tough-cookie/lib/permuteDomain.js", "../node_modules/@azure/core-http/node_modules/tough-cookie/lib/pathMatch.js", "../node_modules/@azure/core-http/node_modules/tough-cookie/lib/memstore.js", "../node_modules/@azure/core-http/node_modules/tough-cookie/lib/version.js", "../node_modules/@azure/core-http/node_modules/tough-cookie/lib/cookie.js", "../node_modules/webidl-conversions/lib/index.js", "../node_modules/whatwg-url/lib/utils.js", "../node_modules/tr46/index.js", "../node_modules/whatwg-url/lib/url-state-machine.js", "../node_modules/whatwg-url/lib/URL-impl.js", "../node_modules/whatwg-url/lib/URL.js", "../node_modules/whatwg-url/lib/public-api.js", "../node_modules/node-fetch/lib/index.js", "../node_modules/tslib/tslib.js", "../node_modules/@azure/abort-controller/src/AbortSignal.ts", "../node_modules/@azure/abort-controller/src/AbortController.ts", "../node_modules/delayed-stream/lib/delayed_stream.js", "../node_modules/combined-stream/lib/combined_stream.js", "../node_modules/mime-db/index.js", "../node_modules/mime-types/index.js", "../node_modules/asynckit/lib/defer.js", "../node_modules/asynckit/lib/async.js", "../node_modules/asynckit/lib/abort.js", "../node_modules/asynckit/lib/iterate.js", "../node_modules/asynckit/lib/state.js", "../node_modules/asynckit/lib/terminator.js", "../node_modules/asynckit/parallel.js", "../node_modules/asynckit/serialOrdered.js", "../node_modules/asynckit/serial.js", "../node_modules/asynckit/index.js", "../node_modules/@azure/core-http/node_modules/form-data/lib/populate.js", "../node_modules/@azure/core-http/node_modules/form-data/lib/form_data.js", "../node_modules/@azure/core-auth/src/azureKeyCredential.ts", "../node_modules/@azure/core-auth/src/tokenCredential.ts", "../node_modules/@azure/logger/src/log.ts", "../node_modules/@azure/logger/src/debug.ts", "../node_modules/@azure/logger/src/logger.ts", "../node_modules/xml2js/lib/defaults.js", "../node_modules/xmlbuilder/lib/Utility.js", "../node_modules/xmlbuilder/lib/XMLDOMImplementation.js", "../node_modules/xmlbuilder/lib/XMLDOMErrorHandler.js", "../node_modules/xmlbuilder/lib/XMLDOMStringList.js", "../node_modules/xmlbuilder/lib/XMLDOMConfiguration.js", "../node_modules/xmlbuilder/lib/NodeType.js", "../node_modules/xmlbuilder/lib/XMLAttribute.js", "../node_modules/xmlbuilder/lib/XMLNamedNodeMap.js", "../node_modules/xmlbuilder/lib/XMLElement.js", "../node_modules/xmlbuilder/lib/XMLCharacterData.js", "../node_modules/xmlbuilder/lib/XMLCData.js", "../node_modules/xmlbuilder/lib/XMLComment.js", "../node_modules/xmlbuilder/lib/XMLDeclaration.js", "../node_modules/xmlbuilder/lib/XMLDTDAttList.js", "../node_modules/xmlbuilder/lib/XMLDTDEntity.js", "../node_modules/xmlbuilder/lib/XMLDTDElement.js", "../node_modules/xmlbuilder/lib/XMLDTDNotation.js", "../node_modules/xmlbuilder/lib/XMLDocType.js", "../node_modules/xmlbuilder/lib/XMLRaw.js", "../node_modules/xmlbuilder/lib/XMLText.js", "../node_modules/xmlbuilder/lib/XMLProcessingInstruction.js", "../node_modules/xmlbuilder/lib/XMLDummy.js", "../node_modules/xmlbuilder/lib/XMLNodeList.js", "../node_modules/xmlbuilder/lib/DocumentPosition.js", "../node_modules/xmlbuilder/lib/XMLNode.js", "../node_modules/xmlbuilder/lib/XMLStringifier.js", "../node_modules/xmlbuilder/lib/WriterState.js", "../node_modules/xmlbuilder/lib/XMLWriterBase.js", "../node_modules/xmlbuilder/lib/XMLStringWriter.js", "../node_modules/xmlbuilder/lib/XMLDocument.js", "../node_modules/xmlbuilder/lib/XMLDocumentCB.js", "../node_modules/xmlbuilder/lib/XMLStreamWriter.js", "../node_modules/xmlbuilder/lib/index.js", "../node_modules/xml2js/lib/builder.js", "../node_modules/sax/lib/sax.js", "../node_modules/xml2js/lib/bom.js", "../node_modules/xml2js/lib/processors.js", "../node_modules/xml2js/lib/parser.js", "../node_modules/xml2js/lib/xml2js.js", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/build/src/common/Time.js", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/src/context/propagation/getter.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/src/context/propagation/NoopHttpTextPropagator.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/src/context/propagation/setter.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/src/correlation_context/EntryValue.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/src/metrics/Metric.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/src/metrics/NoopMeter.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/src/metrics/NoopMeterProvider.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/build/src/trace/attributes.js", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/src/trace/trace_flags.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/src/trace/NoopSpan.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/src/trace/NoopTracer.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/src/trace/NoopTracerProvider.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/src/trace/SamplingResult.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/src/trace/span_kind.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/src/trace/status.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/build/src/trace/trace_state.js", "../node_modules/@azure/core-http/node_modules/@opentelemetry/context-base/src/context.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/context-base/src/NoopContextManager.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/context-base/src/index.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/src/platform/node/globalThis.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/src/platform/node/index.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/src/platform/index.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/src/api/global-utils.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/src/api/context.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/src/api/trace.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/src/api/metrics.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/src/api/propagation.ts", "../node_modules/@azure/core-http/node_modules/@opentelemetry/api/src/index.ts", "../node_modules/@azure/core-http/node_modules/@azure/core-tracing/src/tracers/noop/noOpSpan.ts", "../node_modules/@azure/core-http/node_modules/@azure/core-tracing/src/tracers/noop/noOpTracer.ts", "../node_modules/@azure/core-http/node_modules/@azure/core-tracing/src/utils/global.ts", "../node_modules/@azure/core-http/node_modules/@azure/core-tracing/src/utils/cache.ts", "../node_modules/@azure/core-http/node_modules/@azure/core-tracing/src/tracerProxy.ts", "../node_modules/@azure/core-http/node_modules/@azure/core-tracing/src/tracers/opencensus/openCensusTraceStateWrapper.ts", "../node_modules/@azure/core-http/node_modules/@azure/core-tracing/src/tracers/opencensus/openCensusSpanWrapper.ts", "../node_modules/@azure/core-http/node_modules/@azure/core-tracing/src/tracers/opencensus/openCensusTracerWrapper.ts", "../node_modules/@azure/core-http/node_modules/@azure/core-tracing/src/tracers/test/testSpan.ts", "../node_modules/@azure/core-http/node_modules/@azure/core-tracing/src/tracers/test/testTracer.ts", "../node_modules/@azure/core-http/node_modules/@azure/core-tracing/src/utils/traceParentHeader.ts", "../node_modules/@azure/core-http/dist/index.js", "../node_modules/@opentelemetry/api/build/src/context/propagation/getter.js", "../node_modules/@opentelemetry/api/build/src/context/propagation/NoopHttpTextPropagator.js", "../node_modules/@opentelemetry/api/build/src/context/propagation/setter.js", "../node_modules/@opentelemetry/api/build/src/correlation_context/EntryValue.js", "../node_modules/@opentelemetry/api/build/src/metrics/Metric.js", "../node_modules/@opentelemetry/api/build/src/metrics/NoopMeter.js", "../node_modules/@opentelemetry/api/build/src/metrics/NoopMeterProvider.js", "../node_modules/@opentelemetry/api/build/src/trace/trace_flags.js", "../node_modules/@opentelemetry/api/build/src/trace/NoopSpan.js", "../node_modules/@opentelemetry/api/build/src/trace/NoopTracer.js", "../node_modules/@opentelemetry/api/build/src/trace/NoopTracerProvider.js", "../node_modules/@opentelemetry/api/build/src/trace/span_kind.js", "../node_modules/@opentelemetry/api/build/src/trace/status.js", "../node_modules/@opentelemetry/context-base/build/src/context.js", "../node_modules/@opentelemetry/context-base/build/src/NoopContextManager.js", "../node_modules/@opentelemetry/context-base/build/src/index.js", "../node_modules/@opentelemetry/api/build/src/api/context.js", "../node_modules/@opentelemetry/api/build/src/api/trace.js", "../node_modules/@opentelemetry/api/build/src/api/metrics.js", "../node_modules/@opentelemetry/api/build/src/api/propagation.js", "../node_modules/@opentelemetry/api/build/src/index.js", "../node_modules/@azure/core-tracing/src/tracers/noop/noOpSpan.ts", "../node_modules/@azure/core-tracing/src/tracers/noop/noOpTracer.ts", "../node_modules/@azure/core-tracing/src/utils/global.ts", "../node_modules/@azure/core-tracing/src/utils/cache.ts", "../node_modules/@azure/core-tracing/src/tracerProxy.ts", "../node_modules/@azure/core-tracing/src/tracers/opencensus/openCensusTraceStateWrapper.ts", "../node_modules/@azure/core-tracing/src/tracers/opencensus/openCensusSpanWrapper.ts", "../node_modules/@azure/core-tracing/src/tracers/opencensus/openCensusTracerWrapper.ts", "../node_modules/@azure/core-tracing/src/tracers/test/testSpan.ts", "../node_modules/@azure/core-tracing/src/tracers/test/testTracer.ts", "../node_modules/@azure/core-tracing/src/utils/traceParentHeader.ts", "../node_modules/@azure/core-lro/src/poller.ts", "../node_modules/@azure/core-asynciterator-polyfill/dist-esm/index.js", "../node_modules/@azure/core-paging/dist-esm/index.js", "../node_modules/@azure/storage-blob/src/generated/src/models/mappers.ts", "../node_modules/@azure/storage-blob/src/generated/src/models/serviceMappers.ts", "../node_modules/@azure/storage-blob/src/generated/src/models/parameters.ts", "../node_modules/@azure/storage-blob/src/generated/src/operations/service.ts", "../node_modules/@azure/storage-blob/src/generated/src/models/containerMappers.ts", "../node_modules/@azure/storage-blob/src/generated/src/operations/container.ts", "../node_modules/@azure/storage-blob/src/generated/src/models/blobMappers.ts", "../node_modules/@azure/storage-blob/src/generated/src/operations/blob.ts", "../node_modules/@azure/storage-blob/src/generated/src/models/pageBlobMappers.ts", "../node_modules/@azure/storage-blob/src/generated/src/operations/pageBlob.ts", "../node_modules/@azure/storage-blob/src/generated/src/models/appendBlobMappers.ts", "../node_modules/@azure/storage-blob/src/generated/src/operations/appendBlob.ts", "../node_modules/@azure/storage-blob/src/generated/src/models/blockBlobMappers.ts", "../node_modules/@azure/storage-blob/src/generated/src/operations/blockBlob.ts", "../node_modules/@azure/storage-blob/src/log.ts", "../node_modules/@azure/storage-blob/src/utils/constants.ts", "../node_modules/@azure/storage-blob/src/utils/utils.common.ts", "../node_modules/@azure/storage-blob/src/policies/StorageBrowserPolicy.ts", "../node_modules/@azure/storage-blob/src/StorageBrowserPolicyFactory.ts", "../node_modules/@azure/storage-blob/src/policies/StorageRetryPolicy.ts", "../node_modules/@azure/storage-blob/src/StorageRetryPolicyFactory.ts", "../node_modules/@azure/storage-blob/src/policies/TelemetryPolicy.ts", "../node_modules/@azure/storage-blob/src/TelemetryPolicyFactory.ts", "../node_modules/@azure/storage-blob/src/utils/cache.ts", "../node_modules/@azure/storage-blob/src/Pipeline.ts", "../node_modules/@azure/storage-blob/src/utils/RetriableReadableStream.ts", "../node_modules/@azure/storage-blob/src/BlobDownloadResponse.ts", "../node_modules/@azure/storage-blob/src/Range.ts", "../node_modules/@azure/storage-blob/src/models.ts", "../node_modules/@azure/storage-blob/src/utils/utils.node.ts", "../node_modules/@azure/storage-blob/src/policies/CredentialPolicy.ts", "../node_modules/@azure/storage-blob/src/policies/StorageSharedKeyCredentialPolicy.ts", "../node_modules/@azure/storage-blob/src/credentials/Credential.ts", "../node_modules/@azure/storage-blob/src/credentials/StorageSharedKeyCredential.ts", "../node_modules/@azure/storage-blob/src/policies/AnonymousCredentialPolicy.ts", "../node_modules/@azure/storage-blob/src/credentials/AnonymousCredential.ts", "../node_modules/@azure/storage-blob/src/utils/Batch.ts", "../node_modules/@azure/storage-blob/src/utils/tracing.ts", "../node_modules/@azure/storage-blob/src/generated/src/storageClientContext.ts", "../node_modules/@azure/storage-blob/src/StorageClient.ts", "../node_modules/@azure/storage-blob/src/utils/BufferScheduler.ts", "../node_modules/@azure/storage-blob/src/PageBlobRangeResponse.ts", "../node_modules/@azure/storage-blob/src/pollers/BlobStartCopyFromUrlPoller.ts", "../node_modules/@azure/storage-blob/src/Clients.ts", "../node_modules/@azure/storage-blob/src/BatchUtils.ts", "../node_modules/@azure/storage-blob/src/BatchResponseParser.ts", "../node_modules/@azure/storage-blob/src/utils/Mutex.ts", "../node_modules/@azure/storage-blob/src/BlobBatch.ts", "../node_modules/@azure/storage-blob/src/BlobBatchClient.ts", "../node_modules/@azure/storage-blob/src/BlobServiceClient.ts", "../node_modules/@azure/storage-blob/src/AccountSASPermissions.ts", "../node_modules/@azure/storage-blob/src/AccountSASResourceTypes.ts", "../node_modules/@azure/storage-blob/src/AccountSASServices.ts", "../node_modules/@azure/storage-blob/src/SasIPRange.ts", "../node_modules/@azure/storage-blob/src/SASQueryParameters.ts", "../node_modules/@azure/storage-blob/src/AccountSASSignatureValues.ts", "../node_modules/@azure/storage-blob/src/BlobSASPermissions.ts", "../node_modules/@azure/storage-blob/src/ContainerSASPermissions.ts", "../node_modules/@azure/storage-blob/src/credentials/UserDelegationKeyCredential.ts", "../node_modules/@azure/storage-blob/src/BlobSASSignatureValues.ts", "../node_modules/@actions/cache/src/internal/requestUtils.ts", "../node_modules/@actions/cache/src/internal/downloadUtils.ts", "../node_modules/@actions/cache/src/options.ts", "../node_modules/@actions/cache/src/internal/cacheHttpClient.ts", "../node_modules/@actions/cache/src/internal/tar.ts", "../node_modules/@actions/cache/src/cache.ts", "../src/main.js"],
  "sourcesContent": [null, null, "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\n\nfunction rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    _crypto.default.randomFillSync(rnds8Pool);\n\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regex = _interopRequireDefault(require(\"./regex.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.default)(b);\n}\n\nvar _default = v1;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.URL = exports.DNS = void 0;\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction _default(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0, _stringify.default)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('md5').update(bytes).digest();\n}\n\nvar _default = md5;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _stringify.default)(rnds);\n}\n\nvar _default = v4;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('sha1').update(bytes).digest();\n}\n\nvar _default = sha1;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = '00000000-0000-0000-0000-000000000000';\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nvar _default = version;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function () {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function () {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function () {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function () {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function () {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function () {\n    return _version.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function () {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parse.default;\n  }\n});\n\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\n\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\n\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\n\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\n\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\n\nvar _version = _interopRequireDefault(require(\"./version.js\"));\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }", null, null, "'use strict';\n\nvar net = require('net');\nvar tls = require('tls');\nvar http = require('http');\nvar https = require('https');\nvar events = require('events');\nvar assert = require('assert');\nvar util = require('util');\n\n\nexports.httpOverHttp = httpOverHttp;\nexports.httpsOverHttp = httpsOverHttp;\nexports.httpOverHttps = httpOverHttps;\nexports.httpsOverHttps = httpsOverHttps;\n\n\nfunction httpOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  return agent;\n}\n\nfunction httpsOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\nfunction httpOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  return agent;\n}\n\nfunction httpsOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\n\nfunction TunnelingAgent(options) {\n  var self = this;\n  self.options = options || {};\n  self.proxyOptions = self.options.proxy || {};\n  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;\n  self.requests = [];\n  self.sockets = [];\n\n  self.on('free', function onFree(socket, host, port, localAddress) {\n    var options = toOptions(host, port, localAddress);\n    for (var i = 0, len = self.requests.length; i < len; ++i) {\n      var pending = self.requests[i];\n      if (pending.host === options.host && pending.port === options.port) {\n        // Detect the request to connect same origin server,\n        // reuse the connection.\n        self.requests.splice(i, 1);\n        pending.request.onSocket(socket);\n        return;\n      }\n    }\n    socket.destroy();\n    self.removeSocket(socket);\n  });\n}\nutil.inherits(TunnelingAgent, events.EventEmitter);\n\nTunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {\n  var self = this;\n  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));\n\n  if (self.sockets.length >= this.maxSockets) {\n    // We are over limit so we'll add it to the queue.\n    self.requests.push(options);\n    return;\n  }\n\n  // If we are under maxSockets create a new one.\n  self.createSocket(options, function(socket) {\n    socket.on('free', onFree);\n    socket.on('close', onCloseOrRemove);\n    socket.on('agentRemove', onCloseOrRemove);\n    req.onSocket(socket);\n\n    function onFree() {\n      self.emit('free', socket, options);\n    }\n\n    function onCloseOrRemove(err) {\n      self.removeSocket(socket);\n      socket.removeListener('free', onFree);\n      socket.removeListener('close', onCloseOrRemove);\n      socket.removeListener('agentRemove', onCloseOrRemove);\n    }\n  });\n};\n\nTunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\n  var self = this;\n  var placeholder = {};\n  self.sockets.push(placeholder);\n\n  var connectOptions = mergeOptions({}, self.proxyOptions, {\n    method: 'CONNECT',\n    path: options.host + ':' + options.port,\n    agent: false,\n    headers: {\n      host: options.host + ':' + options.port\n    }\n  });\n  if (options.localAddress) {\n    connectOptions.localAddress = options.localAddress;\n  }\n  if (connectOptions.proxyAuth) {\n    connectOptions.headers = connectOptions.headers || {};\n    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +\n        new Buffer(connectOptions.proxyAuth).toString('base64');\n  }\n\n  debug('making CONNECT request');\n  var connectReq = self.request(connectOptions);\n  connectReq.useChunkedEncodingByDefault = false; // for v0.6\n  connectReq.once('response', onResponse); // for v0.6\n  connectReq.once('upgrade', onUpgrade);   // for v0.6\n  connectReq.once('connect', onConnect);   // for v0.7 or later\n  connectReq.once('error', onError);\n  connectReq.end();\n\n  function onResponse(res) {\n    // Very hacky. This is necessary to avoid http-parser leaks.\n    res.upgrade = true;\n  }\n\n  function onUpgrade(res, socket, head) {\n    // Hacky.\n    process.nextTick(function() {\n      onConnect(res, socket, head);\n    });\n  }\n\n  function onConnect(res, socket, head) {\n    connectReq.removeAllListeners();\n    socket.removeAllListeners();\n\n    if (res.statusCode !== 200) {\n      debug('tunneling socket could not be established, statusCode=%d',\n        res.statusCode);\n      socket.destroy();\n      var error = new Error('tunneling socket could not be established, ' +\n        'statusCode=' + res.statusCode);\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    if (head.length > 0) {\n      debug('got illegal response body from proxy');\n      socket.destroy();\n      var error = new Error('got illegal response body from proxy');\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    debug('tunneling connection has established');\n    self.sockets[self.sockets.indexOf(placeholder)] = socket;\n    return cb(socket);\n  }\n\n  function onError(cause) {\n    connectReq.removeAllListeners();\n\n    debug('tunneling socket could not be established, cause=%s\\n',\n          cause.message, cause.stack);\n    var error = new Error('tunneling socket could not be established, ' +\n                          'cause=' + cause.message);\n    error.code = 'ECONNRESET';\n    options.request.emit('error', error);\n    self.removeSocket(placeholder);\n  }\n};\n\nTunnelingAgent.prototype.removeSocket = function removeSocket(socket) {\n  var pos = this.sockets.indexOf(socket)\n  if (pos === -1) {\n    return;\n  }\n  this.sockets.splice(pos, 1);\n\n  var pending = this.requests.shift();\n  if (pending) {\n    // If we have pending requests and a socket gets closed a new one\n    // needs to be created to take over in the pool for the one that closed.\n    this.createSocket(pending, function(socket) {\n      pending.request.onSocket(socket);\n    });\n  }\n};\n\nfunction createSecureSocket(options, cb) {\n  var self = this;\n  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {\n    var hostHeader = options.request.getHeader('host');\n    var tlsOptions = mergeOptions({}, self.options, {\n      socket: socket,\n      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host\n    });\n\n    // 0 is dummy port for v0.6\n    var secureSocket = tls.connect(0, tlsOptions);\n    self.sockets[self.sockets.indexOf(socket)] = secureSocket;\n    cb(secureSocket);\n  });\n}\n\n\nfunction toOptions(host, port, localAddress) {\n  if (typeof host === 'string') { // since v0.10\n    return {\n      host: host,\n      port: port,\n      localAddress: localAddress\n    };\n  }\n  return host; // for v0.11 or later\n}\n\nfunction mergeOptions(target) {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var overrides = arguments[i];\n    if (typeof overrides === 'object') {\n      var keys = Object.keys(overrides);\n      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {\n        var k = keys[j];\n        if (overrides[k] !== undefined) {\n          target[k] = overrides[k];\n        }\n      }\n    }\n  }\n  return target;\n}\n\n\nvar debug;\nif (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {\n  debug = function() {\n    var args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] === 'string') {\n      args[0] = 'TUNNEL: ' + args[0];\n    } else {\n      args.unshift('TUNNEL:');\n    }\n    console.error.apply(console, args);\n  }\n} else {\n  debug = function() {};\n}\nexports.debug = debug; // for test\n", "module.exports = require('./lib/tunnel');\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, "module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n", "'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n", "var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n", "module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = (function () { try { return require('path') } catch (e) {}}()) || {\n  sep: '/'\n}\nminimatch.sep = path.sep\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  b = b || {}\n  var t = {}\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n  m.Minimatch.defaults = function defaults (options) {\n    return orig.defaults(ext(def, options)).Minimatch\n  }\n\n  m.filter = function filter (pattern, options) {\n    return orig.filter(pattern, ext(def, options))\n  }\n\n  m.defaults = function defaults (options) {\n    return orig.defaults(ext(def, options))\n  }\n\n  m.makeRe = function makeRe (pattern, options) {\n    return orig.makeRe(pattern, ext(def, options))\n  }\n\n  m.braceExpand = function braceExpand (pattern, options) {\n    return orig.braceExpand(pattern, ext(def, options))\n  }\n\n  m.match = function (list, pattern, options) {\n    return orig.match(list, pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  assertValidPattern(pattern)\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  assertValidPattern(pattern)\n\n  if (!options) options = {}\n\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (!options.allowWindowsEscape && path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n  this.partial = !!options.partial\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = function debug() { console.error.apply(console, arguments) }\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\nvar MAX_PATTERN_LENGTH = 1024 * 64\nvar assertValidPattern = function (pattern) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  assertValidPattern(pattern)\n\n  var options = this.options\n\n  // shortcuts\n  if (pattern === '**') {\n    if (!options.noglobstar)\n      return GLOBSTAR\n    else\n      pattern = '*'\n  }\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      /* istanbul ignore next */\n      case '/': {\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n      }\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        // split where the last [ was, make sure we don't have\n        // an invalid re. if so, re-walk the contents of the\n        // would-be class to re-translate any characters that\n        // were passed through as-is\n        // TODO: It would probably be faster to determine this\n        // without a try/catch and a new RegExp, but it's tricky\n        // to do safely.  For now, this is safe and works.\n        var cs = pattern.substring(classStart + 1, i)\n        try {\n          RegExp('[' + cs + ']')\n        } catch (er) {\n          // not a valid class!\n          var sp = this.parse(cs, SUBPARSE)\n          re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n          hasMagic = hasMagic || sp[1]\n          inClass = false\n          continue\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '[': case '.': case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) /* istanbul ignore next - should be impossible */ {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) /* istanbul ignore next - should be impossible */ {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = function match (f, partial) {\n  if (typeof partial === 'undefined') partial = this.partial\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    /* istanbul ignore if */\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      /* istanbul ignore if */\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      hit = f === p\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else /* istanbul ignore else */ if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    return (fi === fl - 1) && (file[fi] === '')\n  }\n\n  // should be unreachable.\n  /* istanbul ignore next */\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n", null, null, null, null, null, "exports = module.exports = SemVer\n\nvar debug\n/* istanbul ignore next */\nif (typeof process === 'object' &&\n    process.env &&\n    process.env.NODE_DEBUG &&\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0)\n    args.unshift('SEMVER')\n    console.log.apply(console, args)\n  }\n} else {\n  debug = function () {}\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0'\n\nvar MAX_LENGTH = 256\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16\n\n// The actual regexps go on exports.re\nvar re = exports.re = []\nvar src = exports.src = []\nvar t = exports.tokens = {}\nvar R = 0\n\nfunction tok (n) {\n  t[n] = R++\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ntok('NUMERICIDENTIFIER')\nsrc[t.NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\ntok('NUMERICIDENTIFIERLOOSE')\nsrc[t.NUMERICIDENTIFIERLOOSE] = '[0-9]+'\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ntok('NONNUMERICIDENTIFIER')\nsrc[t.NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ntok('MAINVERSION')\nsrc[t.MAINVERSION] = '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')'\n\ntok('MAINVERSIONLOOSE')\nsrc[t.MAINVERSIONLOOSE] = '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')'\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ntok('PRERELEASEIDENTIFIER')\nsrc[t.PRERELEASEIDENTIFIER] = '(?:' + src[t.NUMERICIDENTIFIER] +\n                            '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\ntok('PRERELEASEIDENTIFIERLOOSE')\nsrc[t.PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[t.NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ntok('PRERELEASE')\nsrc[t.PRERELEASE] = '(?:-(' + src[t.PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[t.PRERELEASEIDENTIFIER] + ')*))'\n\ntok('PRERELEASELOOSE')\nsrc[t.PRERELEASELOOSE] = '(?:-?(' + src[t.PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[t.PRERELEASEIDENTIFIERLOOSE] + ')*))'\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ntok('BUILDIDENTIFIER')\nsrc[t.BUILDIDENTIFIER] = '[0-9A-Za-z-]+'\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ntok('BUILD')\nsrc[t.BUILD] = '(?:\\\\+(' + src[t.BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[t.BUILDIDENTIFIER] + ')*))'\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ntok('FULL')\ntok('FULLPLAIN')\nsrc[t.FULLPLAIN] = 'v?' + src[t.MAINVERSION] +\n                  src[t.PRERELEASE] + '?' +\n                  src[t.BUILD] + '?'\n\nsrc[t.FULL] = '^' + src[t.FULLPLAIN] + '$'\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ntok('LOOSEPLAIN')\nsrc[t.LOOSEPLAIN] = '[v=\\\\s]*' + src[t.MAINVERSIONLOOSE] +\n                  src[t.PRERELEASELOOSE] + '?' +\n                  src[t.BUILD] + '?'\n\ntok('LOOSE')\nsrc[t.LOOSE] = '^' + src[t.LOOSEPLAIN] + '$'\n\ntok('GTLT')\nsrc[t.GTLT] = '((?:<|>)?=?)'\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ntok('XRANGEIDENTIFIERLOOSE')\nsrc[t.XRANGEIDENTIFIERLOOSE] = src[t.NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\ntok('XRANGEIDENTIFIER')\nsrc[t.XRANGEIDENTIFIER] = src[t.NUMERICIDENTIFIER] + '|x|X|\\\\*'\n\ntok('XRANGEPLAIN')\nsrc[t.XRANGEPLAIN] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[t.PRERELEASE] + ')?' +\n                   src[t.BUILD] + '?' +\n                   ')?)?'\n\ntok('XRANGEPLAINLOOSE')\nsrc[t.XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[t.PRERELEASELOOSE] + ')?' +\n                        src[t.BUILD] + '?' +\n                        ')?)?'\n\ntok('XRANGE')\nsrc[t.XRANGE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAIN] + '$'\ntok('XRANGELOOSE')\nsrc[t.XRANGELOOSE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ntok('COERCE')\nsrc[t.COERCE] = '(^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])'\ntok('COERCERTL')\nre[t.COERCERTL] = new RegExp(src[t.COERCE], 'g')\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ntok('LONETILDE')\nsrc[t.LONETILDE] = '(?:~>?)'\n\ntok('TILDETRIM')\nsrc[t.TILDETRIM] = '(\\\\s*)' + src[t.LONETILDE] + '\\\\s+'\nre[t.TILDETRIM] = new RegExp(src[t.TILDETRIM], 'g')\nvar tildeTrimReplace = '$1~'\n\ntok('TILDE')\nsrc[t.TILDE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAIN] + '$'\ntok('TILDELOOSE')\nsrc[t.TILDELOOSE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ntok('LONECARET')\nsrc[t.LONECARET] = '(?:\\\\^)'\n\ntok('CARETTRIM')\nsrc[t.CARETTRIM] = '(\\\\s*)' + src[t.LONECARET] + '\\\\s+'\nre[t.CARETTRIM] = new RegExp(src[t.CARETTRIM], 'g')\nvar caretTrimReplace = '$1^'\n\ntok('CARET')\nsrc[t.CARET] = '^' + src[t.LONECARET] + src[t.XRANGEPLAIN] + '$'\ntok('CARETLOOSE')\nsrc[t.CARETLOOSE] = '^' + src[t.LONECARET] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ntok('COMPARATORLOOSE')\nsrc[t.COMPARATORLOOSE] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.LOOSEPLAIN] + ')$|^$'\ntok('COMPARATOR')\nsrc[t.COMPARATOR] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.FULLPLAIN] + ')$|^$'\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ntok('COMPARATORTRIM')\nsrc[t.COMPARATORTRIM] = '(\\\\s*)' + src[t.GTLT] +\n                      '\\\\s*(' + src[t.LOOSEPLAIN] + '|' + src[t.XRANGEPLAIN] + ')'\n\n// this one has to use the /g flag\nre[t.COMPARATORTRIM] = new RegExp(src[t.COMPARATORTRIM], 'g')\nvar comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ntok('HYPHENRANGE')\nsrc[t.HYPHENRANGE] = '^\\\\s*(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s*$'\n\ntok('HYPHENRANGELOOSE')\nsrc[t.HYPHENRANGELOOSE] = '^\\\\s*(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$'\n\n// Star ranges basically just allow anything at all.\ntok('STAR')\nsrc[t.STAR] = '(<|>)?=?\\\\s*\\\\*'\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i])\n  if (!re[i]) {\n    re[i] = new RegExp(src[i])\n  }\n}\n\nexports.parse = parse\nfunction parse (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  var r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nexports.valid = valid\nfunction valid (version, options) {\n  var v = parse(version, options)\n  return v ? v.version : null\n}\n\nexports.clean = clean\nfunction clean (version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\n\nexports.SemVer = SemVer\n\nfunction SemVer (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version\n    } else {\n      version = version.version\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options)\n  }\n\n  debug('SemVer', version, options)\n  this.options = options\n  this.loose = !!options.loose\n\n  var m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  this.raw = version\n\n  // these are actually numbers\n  this.major = +m[1]\n  this.minor = +m[2]\n  this.patch = +m[3]\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version')\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version')\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version')\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = []\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num\n        }\n      }\n      return id\n    })\n  }\n\n  this.build = m[5] ? m[5].split('.') : []\n  this.format()\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.')\n  }\n  return this.version\n}\n\nSemVer.prototype.toString = function () {\n  return this.version\n}\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other)\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return this.compareMain(other) || this.comparePre(other)\n}\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch)\n}\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0\n  }\n\n  var i = 0\n  do {\n    var a = this.prerelease[i]\n    var b = other.prerelease[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\nSemVer.prototype.compareBuild = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  var i = 0\n  do {\n    var a = this.build[i]\n    var b = other.build[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor = 0\n      this.major++\n      this.inc('pre', identifier)\n      break\n    case 'preminor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor++\n      this.inc('pre', identifier)\n      break\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0\n      this.inc('patch', identifier)\n      this.inc('pre', identifier)\n      break\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier)\n      }\n      this.inc('pre', identifier)\n      break\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0) {\n        this.major++\n      }\n      this.minor = 0\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++\n      }\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++\n      }\n      this.prerelease = []\n      break\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0]\n      } else {\n        var i = this.prerelease.length\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++\n            i = -2\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0)\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0]\n          }\n        } else {\n          this.prerelease = [identifier, 0]\n        }\n      }\n      break\n\n    default:\n      throw new Error('invalid increment argument: ' + release)\n  }\n  this.format()\n  this.raw = this.version\n  return this\n}\n\nexports.inc = inc\nfunction inc (version, release, loose, identifier) {\n  if (typeof (loose) === 'string') {\n    identifier = loose\n    loose = undefined\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\n\nexports.diff = diff\nfunction diff (version1, version2) {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    var v1 = parse(version1)\n    var v2 = parse(version2)\n    var prefix = ''\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre'\n      var defaultResult = 'prerelease'\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers\n\nvar numeric = /^[0-9]+$/\nfunction compareIdentifiers (a, b) {\n  var anum = numeric.test(a)\n  var bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers\nfunction rcompareIdentifiers (a, b) {\n  return compareIdentifiers(b, a)\n}\n\nexports.major = major\nfunction major (a, loose) {\n  return new SemVer(a, loose).major\n}\n\nexports.minor = minor\nfunction minor (a, loose) {\n  return new SemVer(a, loose).minor\n}\n\nexports.patch = patch\nfunction patch (a, loose) {\n  return new SemVer(a, loose).patch\n}\n\nexports.compare = compare\nfunction compare (a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\n}\n\nexports.compareLoose = compareLoose\nfunction compareLoose (a, b) {\n  return compare(a, b, true)\n}\n\nexports.compareBuild = compareBuild\nfunction compareBuild (a, b, loose) {\n  var versionA = new SemVer(a, loose)\n  var versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\n\nexports.rcompare = rcompare\nfunction rcompare (a, b, loose) {\n  return compare(b, a, loose)\n}\n\nexports.sort = sort\nfunction sort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(a, b, loose)\n  })\n}\n\nexports.rsort = rsort\nfunction rsort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(b, a, loose)\n  })\n}\n\nexports.gt = gt\nfunction gt (a, b, loose) {\n  return compare(a, b, loose) > 0\n}\n\nexports.lt = lt\nfunction lt (a, b, loose) {\n  return compare(a, b, loose) < 0\n}\n\nexports.eq = eq\nfunction eq (a, b, loose) {\n  return compare(a, b, loose) === 0\n}\n\nexports.neq = neq\nfunction neq (a, b, loose) {\n  return compare(a, b, loose) !== 0\n}\n\nexports.gte = gte\nfunction gte (a, b, loose) {\n  return compare(a, b, loose) >= 0\n}\n\nexports.lte = lte\nfunction lte (a, b, loose) {\n  return compare(a, b, loose) <= 0\n}\n\nexports.cmp = cmp\nfunction cmp (a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError('Invalid operator: ' + op)\n  }\n}\n\nexports.Comparator = Comparator\nfunction Comparator (comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp\n    } else {\n      comp = comp.value\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options)\n  }\n\n  debug('comparator', comp, options)\n  this.options = options\n  this.loose = !!options.loose\n  this.parse(comp)\n\n  if (this.semver === ANY) {\n    this.value = ''\n  } else {\n    this.value = this.operator + this.semver.version\n  }\n\n  debug('comp', this)\n}\n\nvar ANY = {}\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n  var m = comp.match(r)\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp)\n  }\n\n  this.operator = m[1] !== undefined ? m[1] : ''\n  if (this.operator === '=') {\n    this.operator = ''\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose)\n  }\n}\n\nComparator.prototype.toString = function () {\n  return this.value\n}\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose)\n\n  if (this.semver === ANY || version === ANY) {\n    return true\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  return cmp(version, this.operator, this.semver, this.options)\n}\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required')\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  var rangeTmp\n\n  if (this.operator === '') {\n    if (this.value === '') {\n      return true\n    }\n    rangeTmp = new Range(comp.value, options)\n    return satisfies(this.value, rangeTmp, options)\n  } else if (comp.operator === '') {\n    if (comp.value === '') {\n      return true\n    }\n    rangeTmp = new Range(this.value, options)\n    return satisfies(comp.semver, rangeTmp, options)\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>')\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<')\n  var sameSemVer = this.semver.version === comp.semver.version\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=')\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'))\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'))\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\n}\n\nexports.Range = Range\nfunction Range (range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range\n    } else {\n      return new Range(range.raw, options)\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options)\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options)\n  }\n\n  this.options = options\n  this.loose = !!options.loose\n  this.includePrerelease = !!options.includePrerelease\n\n  // First, split based on boolean or ||\n  this.raw = range\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n    return this.parseRange(range.trim())\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length\n  })\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range)\n  }\n\n  this.format()\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim()\n  }).join('||').trim()\n  return this.range\n}\n\nRange.prototype.toString = function () {\n  return this.range\n}\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose\n  range = range.trim()\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n  range = range.replace(hr, hyphenReplace)\n  debug('hyphen replace', range)\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n  debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ')\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options)\n  }, this).join(' ').split(/\\s+/)\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe)\n    })\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options)\n  }, this)\n\n  return set\n}\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required')\n  }\n\n  return this.set.some(function (thisComparators) {\n    return (\n      isSatisfiable(thisComparators, options) &&\n      range.set.some(function (rangeComparators) {\n        return (\n          isSatisfiable(rangeComparators, options) &&\n          thisComparators.every(function (thisComparator) {\n            return rangeComparators.every(function (rangeComparator) {\n              return thisComparator.intersects(rangeComparator, options)\n            })\n          })\n        )\n      })\n    )\n  })\n}\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nfunction isSatisfiable (comparators, options) {\n  var result = true\n  var remainingComparators = comparators.slice()\n  var testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every(function (otherComparator) {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators\nfunction toComparators (range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value\n    }).join(' ').trim().split(' ')\n  })\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator (comp, options) {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nfunction isX (id) {\n  return !id || id.toLowerCase() === 'x' || id === '*'\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options)\n  }).join(' ')\n}\n\nfunction replaceTilde (comp, options) {\n  var r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options)\n  }).join(' ')\n}\n\nfunction replaceCaret (comp, options) {\n  debug('caret', comp, options)\n  var r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nfunction replaceXRanges (comp, options) {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nfunction replaceXRange (comp, options) {\n  comp = comp.trim()\n  var r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    var xM = isX(M)\n    var xm = xM || isX(m)\n    var xp = xm || isX(p)\n    var anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p + pr\n    } else if (xm) {\n      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0' + pr +\n        ' <' + M + '.' + (+m + 1) + '.0' + pr\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars (comp, options) {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0'\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0'\n  } else {\n    from = '>=' + from\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0'\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\n  } else {\n    to = '<=' + to\n  }\n\n  return (from + ' ' + to).trim()\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction testSet (set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n\nexports.satisfies = satisfies\nfunction satisfies (version, range, options) {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\n\nexports.maxSatisfying = maxSatisfying\nfunction maxSatisfying (versions, range, options) {\n  var max = null\n  var maxSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\n\nexports.minSatisfying = minSatisfying\nfunction minSatisfying (versions, range, options) {\n  var min = null\n  var minSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\n\nexports.minVersion = minVersion\nfunction minVersion (range, loose) {\n  range = new Range(range, loose)\n\n  var minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator)\n      }\n    })\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\n\nexports.validRange = validRange\nfunction validRange (range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr\nfunction ltr (version, range, options) {\n  return outside(version, range, '<', options)\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr\nfunction gtr (version, range, options) {\n  return outside(version, range, '>', options)\n}\n\nexports.outside = outside\nfunction outside (version, range, hilo, options) {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  var gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    var high = null\n    var low = null\n\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nexports.prerelease = prerelease\nfunction prerelease (version, options) {\n  var parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\n\nexports.intersects = intersects\nfunction intersects (r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce\nfunction coerce (version, options) {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  var match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    var next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n      (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n          next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(match[2] +\n    '.' + (match[3] || '0') +\n    '.' + (match[4] || '0'), options)\n}\n", "// Unique ID creation requires a high quality random # generator.  In node.js\n// this is pretty straight-forward - we use the crypto API.\n\nvar crypto = require('crypto');\n\nmodule.exports = function nodeRNG() {\n  return crypto.randomBytes(16);\n};\n", "/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n", "var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n", "var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n", "var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n", null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getProxyUrl(reqUrl) {\n    let usingSsl = reqUrl.protocol === 'https:';\n    let proxyUrl;\n    if (checkBypass(reqUrl)) {\n        return proxyUrl;\n    }\n    let proxyVar;\n    if (usingSsl) {\n        proxyVar = process.env['https_proxy'] || process.env['HTTPS_PROXY'];\n    }\n    else {\n        proxyVar = process.env['http_proxy'] || process.env['HTTP_PROXY'];\n    }\n    if (proxyVar) {\n        proxyUrl = new URL(proxyVar);\n    }\n    return proxyUrl;\n}\nexports.getProxyUrl = getProxyUrl;\nfunction checkBypass(reqUrl) {\n    if (!reqUrl.hostname) {\n        return false;\n    }\n    let noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';\n    if (!noProxy) {\n        return false;\n    }\n    // Determine the request port\n    let reqPort;\n    if (reqUrl.port) {\n        reqPort = Number(reqUrl.port);\n    }\n    else if (reqUrl.protocol === 'http:') {\n        reqPort = 80;\n    }\n    else if (reqUrl.protocol === 'https:') {\n        reqPort = 443;\n    }\n    // Format the request hostname and hostname with port\n    let upperReqHosts = [reqUrl.hostname.toUpperCase()];\n    if (typeof reqPort === 'number') {\n        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);\n    }\n    // Compare request host against noproxy\n    for (let upperNoProxyItem of noProxy\n        .split(',')\n        .map(x => x.trim().toUpperCase())\n        .filter(x => x)) {\n        if (upperReqHosts.some(x => x === upperNoProxyItem)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.checkBypass = checkBypass;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst http = require(\"http\");\nconst https = require(\"https\");\nconst pm = require(\"./proxy\");\nlet tunnel;\nvar HttpCodes;\n(function (HttpCodes) {\n    HttpCodes[HttpCodes[\"OK\"] = 200] = \"OK\";\n    HttpCodes[HttpCodes[\"MultipleChoices\"] = 300] = \"MultipleChoices\";\n    HttpCodes[HttpCodes[\"MovedPermanently\"] = 301] = \"MovedPermanently\";\n    HttpCodes[HttpCodes[\"ResourceMoved\"] = 302] = \"ResourceMoved\";\n    HttpCodes[HttpCodes[\"SeeOther\"] = 303] = \"SeeOther\";\n    HttpCodes[HttpCodes[\"NotModified\"] = 304] = \"NotModified\";\n    HttpCodes[HttpCodes[\"UseProxy\"] = 305] = \"UseProxy\";\n    HttpCodes[HttpCodes[\"SwitchProxy\"] = 306] = \"SwitchProxy\";\n    HttpCodes[HttpCodes[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n    HttpCodes[HttpCodes[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n    HttpCodes[HttpCodes[\"BadRequest\"] = 400] = \"BadRequest\";\n    HttpCodes[HttpCodes[\"Unauthorized\"] = 401] = \"Unauthorized\";\n    HttpCodes[HttpCodes[\"PaymentRequired\"] = 402] = \"PaymentRequired\";\n    HttpCodes[HttpCodes[\"Forbidden\"] = 403] = \"Forbidden\";\n    HttpCodes[HttpCodes[\"NotFound\"] = 404] = \"NotFound\";\n    HttpCodes[HttpCodes[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\n    HttpCodes[HttpCodes[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\n    HttpCodes[HttpCodes[\"ProxyAuthenticationRequired\"] = 407] = \"ProxyAuthenticationRequired\";\n    HttpCodes[HttpCodes[\"RequestTimeout\"] = 408] = \"RequestTimeout\";\n    HttpCodes[HttpCodes[\"Conflict\"] = 409] = \"Conflict\";\n    HttpCodes[HttpCodes[\"Gone\"] = 410] = \"Gone\";\n    HttpCodes[HttpCodes[\"TooManyRequests\"] = 429] = \"TooManyRequests\";\n    HttpCodes[HttpCodes[\"InternalServerError\"] = 500] = \"InternalServerError\";\n    HttpCodes[HttpCodes[\"NotImplemented\"] = 501] = \"NotImplemented\";\n    HttpCodes[HttpCodes[\"BadGateway\"] = 502] = \"BadGateway\";\n    HttpCodes[HttpCodes[\"ServiceUnavailable\"] = 503] = \"ServiceUnavailable\";\n    HttpCodes[HttpCodes[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\n})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));\nvar Headers;\n(function (Headers) {\n    Headers[\"Accept\"] = \"accept\";\n    Headers[\"ContentType\"] = \"content-type\";\n})(Headers = exports.Headers || (exports.Headers = {}));\nvar MediaTypes;\n(function (MediaTypes) {\n    MediaTypes[\"ApplicationJson\"] = \"application/json\";\n})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));\n/**\n * Returns the proxy URL, depending upon the supplied url and proxy environment variables.\n * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n */\nfunction getProxyUrl(serverUrl) {\n    let proxyUrl = pm.getProxyUrl(new URL(serverUrl));\n    return proxyUrl ? proxyUrl.href : '';\n}\nexports.getProxyUrl = getProxyUrl;\nconst HttpRedirectCodes = [\n    HttpCodes.MovedPermanently,\n    HttpCodes.ResourceMoved,\n    HttpCodes.SeeOther,\n    HttpCodes.TemporaryRedirect,\n    HttpCodes.PermanentRedirect\n];\nconst HttpResponseRetryCodes = [\n    HttpCodes.BadGateway,\n    HttpCodes.ServiceUnavailable,\n    HttpCodes.GatewayTimeout\n];\nconst RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];\nconst ExponentialBackoffCeiling = 10;\nconst ExponentialBackoffTimeSlice = 5;\nclass HttpClientError extends Error {\n    constructor(message, statusCode) {\n        super(message);\n        this.name = 'HttpClientError';\n        this.statusCode = statusCode;\n        Object.setPrototypeOf(this, HttpClientError.prototype);\n    }\n}\nexports.HttpClientError = HttpClientError;\nclass HttpClientResponse {\n    constructor(message) {\n        this.message = message;\n    }\n    readBody() {\n        return new Promise(async (resolve, reject) => {\n            let output = Buffer.alloc(0);\n            this.message.on('data', (chunk) => {\n                output = Buffer.concat([output, chunk]);\n            });\n            this.message.on('end', () => {\n                resolve(output.toString());\n            });\n        });\n    }\n}\nexports.HttpClientResponse = HttpClientResponse;\nfunction isHttps(requestUrl) {\n    let parsedUrl = new URL(requestUrl);\n    return parsedUrl.protocol === 'https:';\n}\nexports.isHttps = isHttps;\nclass HttpClient {\n    constructor(userAgent, handlers, requestOptions) {\n        this._ignoreSslError = false;\n        this._allowRedirects = true;\n        this._allowRedirectDowngrade = false;\n        this._maxRedirects = 50;\n        this._allowRetries = false;\n        this._maxRetries = 1;\n        this._keepAlive = false;\n        this._disposed = false;\n        this.userAgent = userAgent;\n        this.handlers = handlers || [];\n        this.requestOptions = requestOptions;\n        if (requestOptions) {\n            if (requestOptions.ignoreSslError != null) {\n                this._ignoreSslError = requestOptions.ignoreSslError;\n            }\n            this._socketTimeout = requestOptions.socketTimeout;\n            if (requestOptions.allowRedirects != null) {\n                this._allowRedirects = requestOptions.allowRedirects;\n            }\n            if (requestOptions.allowRedirectDowngrade != null) {\n                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;\n            }\n            if (requestOptions.maxRedirects != null) {\n                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);\n            }\n            if (requestOptions.keepAlive != null) {\n                this._keepAlive = requestOptions.keepAlive;\n            }\n            if (requestOptions.allowRetries != null) {\n                this._allowRetries = requestOptions.allowRetries;\n            }\n            if (requestOptions.maxRetries != null) {\n                this._maxRetries = requestOptions.maxRetries;\n            }\n        }\n    }\n    options(requestUrl, additionalHeaders) {\n        return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});\n    }\n    get(requestUrl, additionalHeaders) {\n        return this.request('GET', requestUrl, null, additionalHeaders || {});\n    }\n    del(requestUrl, additionalHeaders) {\n        return this.request('DELETE', requestUrl, null, additionalHeaders || {});\n    }\n    post(requestUrl, data, additionalHeaders) {\n        return this.request('POST', requestUrl, data, additionalHeaders || {});\n    }\n    patch(requestUrl, data, additionalHeaders) {\n        return this.request('PATCH', requestUrl, data, additionalHeaders || {});\n    }\n    put(requestUrl, data, additionalHeaders) {\n        return this.request('PUT', requestUrl, data, additionalHeaders || {});\n    }\n    head(requestUrl, additionalHeaders) {\n        return this.request('HEAD', requestUrl, null, additionalHeaders || {});\n    }\n    sendStream(verb, requestUrl, stream, additionalHeaders) {\n        return this.request(verb, requestUrl, stream, additionalHeaders);\n    }\n    /**\n     * Gets a typed object from an endpoint\n     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise\n     */\n    async getJson(requestUrl, additionalHeaders = {}) {\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        let res = await this.get(requestUrl, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async postJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.post(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async putJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.put(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async patchJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.patch(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    /**\n     * Makes a raw http request.\n     * All other methods such as get, post, patch, and request ultimately call this.\n     * Prefer get, del, post and patch\n     */\n    async request(verb, requestUrl, data, headers) {\n        if (this._disposed) {\n            throw new Error('Client has already been disposed.');\n        }\n        let parsedUrl = new URL(requestUrl);\n        let info = this._prepareRequest(verb, parsedUrl, headers);\n        // Only perform retries on reads since writes may not be idempotent.\n        let maxTries = this._allowRetries && RetryableHttpVerbs.indexOf(verb) != -1\n            ? this._maxRetries + 1\n            : 1;\n        let numTries = 0;\n        let response;\n        while (numTries < maxTries) {\n            response = await this.requestRaw(info, data);\n            // Check if it's an authentication challenge\n            if (response &&\n                response.message &&\n                response.message.statusCode === HttpCodes.Unauthorized) {\n                let authenticationHandler;\n                for (let i = 0; i < this.handlers.length; i++) {\n                    if (this.handlers[i].canHandleAuthentication(response)) {\n                        authenticationHandler = this.handlers[i];\n                        break;\n                    }\n                }\n                if (authenticationHandler) {\n                    return authenticationHandler.handleAuthentication(this, info, data);\n                }\n                else {\n                    // We have received an unauthorized response but have no handlers to handle it.\n                    // Let the response return to the caller.\n                    return response;\n                }\n            }\n            let redirectsRemaining = this._maxRedirects;\n            while (HttpRedirectCodes.indexOf(response.message.statusCode) != -1 &&\n                this._allowRedirects &&\n                redirectsRemaining > 0) {\n                const redirectUrl = response.message.headers['location'];\n                if (!redirectUrl) {\n                    // if there's no location to redirect to, we won't\n                    break;\n                }\n                let parsedRedirectUrl = new URL(redirectUrl);\n                if (parsedUrl.protocol == 'https:' &&\n                    parsedUrl.protocol != parsedRedirectUrl.protocol &&\n                    !this._allowRedirectDowngrade) {\n                    throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');\n                }\n                // we need to finish reading the response before reassigning response\n                // which will leak the open socket.\n                await response.readBody();\n                // strip authorization header if redirected to a different hostname\n                if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {\n                    for (let header in headers) {\n                        // header names are case insensitive\n                        if (header.toLowerCase() === 'authorization') {\n                            delete headers[header];\n                        }\n                    }\n                }\n                // let's make the request with the new redirectUrl\n                info = this._prepareRequest(verb, parsedRedirectUrl, headers);\n                response = await this.requestRaw(info, data);\n                redirectsRemaining--;\n            }\n            if (HttpResponseRetryCodes.indexOf(response.message.statusCode) == -1) {\n                // If not a retry code, return immediately instead of retrying\n                return response;\n            }\n            numTries += 1;\n            if (numTries < maxTries) {\n                await response.readBody();\n                await this._performExponentialBackoff(numTries);\n            }\n        }\n        return response;\n    }\n    /**\n     * Needs to be called if keepAlive is set to true in request options.\n     */\n    dispose() {\n        if (this._agent) {\n            this._agent.destroy();\n        }\n        this._disposed = true;\n    }\n    /**\n     * Raw request.\n     * @param info\n     * @param data\n     */\n    requestRaw(info, data) {\n        return new Promise((resolve, reject) => {\n            let callbackForResult = function (err, res) {\n                if (err) {\n                    reject(err);\n                }\n                resolve(res);\n            };\n            this.requestRawWithCallback(info, data, callbackForResult);\n        });\n    }\n    /**\n     * Raw request with callback.\n     * @param info\n     * @param data\n     * @param onResult\n     */\n    requestRawWithCallback(info, data, onResult) {\n        let socket;\n        if (typeof data === 'string') {\n            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');\n        }\n        let callbackCalled = false;\n        let handleResult = (err, res) => {\n            if (!callbackCalled) {\n                callbackCalled = true;\n                onResult(err, res);\n            }\n        };\n        let req = info.httpModule.request(info.options, (msg) => {\n            let res = new HttpClientResponse(msg);\n            handleResult(null, res);\n        });\n        req.on('socket', sock => {\n            socket = sock;\n        });\n        // If we ever get disconnected, we want the socket to timeout eventually\n        req.setTimeout(this._socketTimeout || 3 * 60000, () => {\n            if (socket) {\n                socket.end();\n            }\n            handleResult(new Error('Request timeout: ' + info.options.path), null);\n        });\n        req.on('error', function (err) {\n            // err has statusCode property\n            // res should have headers\n            handleResult(err, null);\n        });\n        if (data && typeof data === 'string') {\n            req.write(data, 'utf8');\n        }\n        if (data && typeof data !== 'string') {\n            data.on('close', function () {\n                req.end();\n            });\n            data.pipe(req);\n        }\n        else {\n            req.end();\n        }\n    }\n    /**\n     * Gets an http agent. This function is useful when you need an http agent that handles\n     * routing through a proxy server - depending upon the url and proxy environment variables.\n     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n     */\n    getAgent(serverUrl) {\n        let parsedUrl = new URL(serverUrl);\n        return this._getAgent(parsedUrl);\n    }\n    _prepareRequest(method, requestUrl, headers) {\n        const info = {};\n        info.parsedUrl = requestUrl;\n        const usingSsl = info.parsedUrl.protocol === 'https:';\n        info.httpModule = usingSsl ? https : http;\n        const defaultPort = usingSsl ? 443 : 80;\n        info.options = {};\n        info.options.host = info.parsedUrl.hostname;\n        info.options.port = info.parsedUrl.port\n            ? parseInt(info.parsedUrl.port)\n            : defaultPort;\n        info.options.path =\n            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');\n        info.options.method = method;\n        info.options.headers = this._mergeHeaders(headers);\n        if (this.userAgent != null) {\n            info.options.headers['user-agent'] = this.userAgent;\n        }\n        info.options.agent = this._getAgent(info.parsedUrl);\n        // gives handlers an opportunity to participate\n        if (this.handlers) {\n            this.handlers.forEach(handler => {\n                handler.prepareRequest(info.options);\n            });\n        }\n        return info;\n    }\n    _mergeHeaders(headers) {\n        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n        if (this.requestOptions && this.requestOptions.headers) {\n            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers));\n        }\n        return lowercaseKeys(headers || {});\n    }\n    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {\n        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n        let clientHeader;\n        if (this.requestOptions && this.requestOptions.headers) {\n            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];\n        }\n        return additionalHeaders[header] || clientHeader || _default;\n    }\n    _getAgent(parsedUrl) {\n        let agent;\n        let proxyUrl = pm.getProxyUrl(parsedUrl);\n        let useProxy = proxyUrl && proxyUrl.hostname;\n        if (this._keepAlive && useProxy) {\n            agent = this._proxyAgent;\n        }\n        if (this._keepAlive && !useProxy) {\n            agent = this._agent;\n        }\n        // if agent is already assigned use that agent.\n        if (!!agent) {\n            return agent;\n        }\n        const usingSsl = parsedUrl.protocol === 'https:';\n        let maxSockets = 100;\n        if (!!this.requestOptions) {\n            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;\n        }\n        if (useProxy) {\n            // If using proxy, need tunnel\n            if (!tunnel) {\n                tunnel = require('tunnel');\n            }\n            const agentOptions = {\n                maxSockets: maxSockets,\n                keepAlive: this._keepAlive,\n                proxy: {\n                    proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`,\n                    host: proxyUrl.hostname,\n                    port: proxyUrl.port\n                }\n            };\n            let tunnelAgent;\n            const overHttps = proxyUrl.protocol === 'https:';\n            if (usingSsl) {\n                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;\n            }\n            else {\n                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;\n            }\n            agent = tunnelAgent(agentOptions);\n            this._proxyAgent = agent;\n        }\n        // if reusing agent across request and tunneling agent isn't assigned create a new agent\n        if (this._keepAlive && !agent) {\n            const options = { keepAlive: this._keepAlive, maxSockets: maxSockets };\n            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);\n            this._agent = agent;\n        }\n        // if not using private agent and tunnel agent isn't setup then use global agent\n        if (!agent) {\n            agent = usingSsl ? https.globalAgent : http.globalAgent;\n        }\n        if (usingSsl && this._ignoreSslError) {\n            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process\n            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options\n            // we have to cast it to any and change it directly\n            agent.options = Object.assign(agent.options || {}, {\n                rejectUnauthorized: false\n            });\n        }\n        return agent;\n    }\n    _performExponentialBackoff(retryNumber) {\n        retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);\n        const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);\n        return new Promise(resolve => setTimeout(() => resolve(), ms));\n    }\n    static dateTimeDeserializer(key, value) {\n        if (typeof value === 'string') {\n            let a = new Date(value);\n            if (!isNaN(a.valueOf())) {\n                return a;\n            }\n        }\n        return value;\n    }\n    async _processResponse(res, options) {\n        return new Promise(async (resolve, reject) => {\n            const statusCode = res.message.statusCode;\n            const response = {\n                statusCode: statusCode,\n                result: null,\n                headers: {}\n            };\n            // not found leads to null obj returned\n            if (statusCode == HttpCodes.NotFound) {\n                resolve(response);\n            }\n            let obj;\n            let contents;\n            // get the result from the body\n            try {\n                contents = await res.readBody();\n                if (contents && contents.length > 0) {\n                    if (options && options.deserializeDates) {\n                        obj = JSON.parse(contents, HttpClient.dateTimeDeserializer);\n                    }\n                    else {\n                        obj = JSON.parse(contents);\n                    }\n                    response.result = obj;\n                }\n                response.headers = res.message.headers;\n            }\n            catch (err) {\n                // Invalid resource (contents not json);  leaving result obj null\n            }\n            // note that 3xx redirects are handled by the http layer.\n            if (statusCode > 299) {\n                let msg;\n                // if exception/error in body, attempt to get better error\n                if (obj && obj.message) {\n                    msg = obj.message;\n                }\n                else if (contents && contents.length > 0) {\n                    // it may be the case that the exception is in the body message as string\n                    msg = contents;\n                }\n                else {\n                    msg = 'Failed request: (' + statusCode + ')';\n                }\n                let err = new HttpClientError(msg, statusCode);\n                err.result = response.result;\n                reject(err);\n            }\n            else {\n                resolve(response);\n            }\n        });\n    }\n}\nexports.HttpClient = HttpClient;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass BasicCredentialHandler {\n    constructor(username, password) {\n        this.username = username;\n        this.password = password;\n    }\n    prepareRequest(options) {\n        options.headers['Authorization'] =\n            'Basic ' +\n                Buffer.from(this.username + ':' + this.password).toString('base64');\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication(response) {\n        return false;\n    }\n    handleAuthentication(httpClient, requestInfo, objs) {\n        return null;\n    }\n}\nexports.BasicCredentialHandler = BasicCredentialHandler;\nclass BearerCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        options.headers['Authorization'] = 'Bearer ' + this.token;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication(response) {\n        return false;\n    }\n    handleAuthentication(httpClient, requestInfo, objs) {\n        return null;\n    }\n}\nexports.BearerCredentialHandler = BearerCredentialHandler;\nclass PersonalAccessTokenCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        options.headers['Authorization'] =\n            'Basic ' + Buffer.from('PAT:' + this.token).toString('base64');\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication(response) {\n        return false;\n    }\n    handleAuthentication(httpClient, requestInfo, objs) {\n        return null;\n    }\n}\nexports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst rnds8 = new Uint8Array(16);\n\nfunction rng() {\n  return _crypto.default.randomFillSync(rnds8);\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regex = _interopRequireDefault(require(\"./regex.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.default)(b);\n}\n\nvar _default = v1;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.URL = exports.DNS = void 0;\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction _default(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0, _stringify.default)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('md5').update(bytes).digest();\n}\n\nvar _default = md5;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _stringify.default)(rnds);\n}\n\nvar _default = v4;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('sha1').update(bytes).digest();\n}\n\nvar _default = sha1;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = '00000000-0000-0000-0000-000000000000';\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nvar _default = version;\nexports.default = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function () {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function () {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function () {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function () {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function () {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function () {\n    return _version.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function () {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parse.default;\n  }\n});\n\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\n\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\n\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\n\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\n\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\n\nvar _version = _interopRequireDefault(require(\"./version.js\"));\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function(m, o) {\r\n        for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n    };\r\n\r\n    __createBinding = Object.create ? (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n    }) : (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    });\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    var __setModuleDefault = Object.create ? (function(o, v) {\r\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n    }) : function(o, v) {\r\n        o[\"default\"] = v;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n        __setModuleDefault(result, mod);\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, privateMap) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to get private field on non-instance\");\r\n        }\r\n        return privateMap.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, privateMap, value) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to set private field on non-instance\");\r\n        }\r\n        privateMap.set(receiver, value);\r\n        return value;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n});\r\n", "/*eslint no-var:0, prefer-arrow-callback: 0, object-shorthand: 0 */\n'use strict';\n\n\nvar Punycode = require('punycode');\n\n\nvar internals = {};\n\n\n//\n// Read rules from file.\n//\ninternals.rules = require('./data/rules.json').map(function (rule) {\n\n  return {\n    rule: rule,\n    suffix: rule.replace(/^(\\*\\.|\\!)/, ''),\n    punySuffix: -1,\n    wildcard: rule.charAt(0) === '*',\n    exception: rule.charAt(0) === '!'\n  };\n});\n\n\n//\n// Check is given string ends with `suffix`.\n//\ninternals.endsWith = function (str, suffix) {\n\n  return str.indexOf(suffix, str.length - suffix.length) !== -1;\n};\n\n\n//\n// Find rule for a given domain.\n//\ninternals.findRule = function (domain) {\n\n  var punyDomain = Punycode.toASCII(domain);\n  return internals.rules.reduce(function (memo, rule) {\n\n    if (rule.punySuffix === -1){\n      rule.punySuffix = Punycode.toASCII(rule.suffix);\n    }\n    if (!internals.endsWith(punyDomain, '.' + rule.punySuffix) && punyDomain !== rule.punySuffix) {\n      return memo;\n    }\n    // This has been commented out as it never seems to run. This is because\n    // sub tlds always appear after their parents and we never find a shorter\n    // match.\n    //if (memo) {\n    //  var memoSuffix = Punycode.toASCII(memo.suffix);\n    //  if (memoSuffix.length >= punySuffix.length) {\n    //    return memo;\n    //  }\n    //}\n    return rule;\n  }, null);\n};\n\n\n//\n// Error codes and messages.\n//\nexports.errorCodes = {\n  DOMAIN_TOO_SHORT: 'Domain name too short.',\n  DOMAIN_TOO_LONG: 'Domain name too long. It should be no more than 255 chars.',\n  LABEL_STARTS_WITH_DASH: 'Domain name label can not start with a dash.',\n  LABEL_ENDS_WITH_DASH: 'Domain name label can not end with a dash.',\n  LABEL_TOO_LONG: 'Domain name label should be at most 63 chars long.',\n  LABEL_TOO_SHORT: 'Domain name label should be at least 1 character long.',\n  LABEL_INVALID_CHARS: 'Domain name label can only contain alphanumeric characters or dashes.'\n};\n\n\n//\n// Validate domain name and throw if not valid.\n//\n// From wikipedia:\n//\n// Hostnames are composed of series of labels concatenated with dots, as are all\n// domain names. Each label must be between 1 and 63 characters long, and the\n// entire hostname (including the delimiting dots) has a maximum of 255 chars.\n//\n// Allowed chars:\n//\n// * `a-z`\n// * `0-9`\n// * `-` but not as a starting or ending character\n// * `.` as a separator for the textual portions of a domain name\n//\n// * http://en.wikipedia.org/wiki/Domain_name\n// * http://en.wikipedia.org/wiki/Hostname\n//\ninternals.validate = function (input) {\n\n  // Before we can validate we need to take care of IDNs with unicode chars.\n  var ascii = Punycode.toASCII(input);\n\n  if (ascii.length < 1) {\n    return 'DOMAIN_TOO_SHORT';\n  }\n  if (ascii.length > 255) {\n    return 'DOMAIN_TOO_LONG';\n  }\n\n  // Check each part's length and allowed chars.\n  var labels = ascii.split('.');\n  var label;\n\n  for (var i = 0; i < labels.length; ++i) {\n    label = labels[i];\n    if (!label.length) {\n      return 'LABEL_TOO_SHORT';\n    }\n    if (label.length > 63) {\n      return 'LABEL_TOO_LONG';\n    }\n    if (label.charAt(0) === '-') {\n      return 'LABEL_STARTS_WITH_DASH';\n    }\n    if (label.charAt(label.length - 1) === '-') {\n      return 'LABEL_ENDS_WITH_DASH';\n    }\n    if (!/^[a-z0-9\\-]+$/.test(label)) {\n      return 'LABEL_INVALID_CHARS';\n    }\n  }\n};\n\n\n//\n// Public API\n//\n\n\n//\n// Parse domain.\n//\nexports.parse = function (input) {\n\n  if (typeof input !== 'string') {\n    throw new TypeError('Domain name must be a string.');\n  }\n\n  // Force domain to lowercase.\n  var domain = input.slice(0).toLowerCase();\n\n  // Handle FQDN.\n  // TODO: Simply remove trailing dot?\n  if (domain.charAt(domain.length - 1) === '.') {\n    domain = domain.slice(0, domain.length - 1);\n  }\n\n  // Validate and sanitise input.\n  var error = internals.validate(domain);\n  if (error) {\n    return {\n      input: input,\n      error: {\n        message: exports.errorCodes[error],\n        code: error\n      }\n    };\n  }\n\n  var parsed = {\n    input: input,\n    tld: null,\n    sld: null,\n    domain: null,\n    subdomain: null,\n    listed: false\n  };\n\n  var domainParts = domain.split('.');\n\n  // Non-Internet TLD\n  if (domainParts[domainParts.length - 1] === 'local') {\n    return parsed;\n  }\n\n  var handlePunycode = function () {\n\n    if (!/xn--/.test(domain)) {\n      return parsed;\n    }\n    if (parsed.domain) {\n      parsed.domain = Punycode.toASCII(parsed.domain);\n    }\n    if (parsed.subdomain) {\n      parsed.subdomain = Punycode.toASCII(parsed.subdomain);\n    }\n    return parsed;\n  };\n\n  var rule = internals.findRule(domain);\n\n  // Unlisted tld.\n  if (!rule) {\n    if (domainParts.length < 2) {\n      return parsed;\n    }\n    parsed.tld = domainParts.pop();\n    parsed.sld = domainParts.pop();\n    parsed.domain = [parsed.sld, parsed.tld].join('.');\n    if (domainParts.length) {\n      parsed.subdomain = domainParts.pop();\n    }\n    return handlePunycode();\n  }\n\n  // At this point we know the public suffix is listed.\n  parsed.listed = true;\n\n  var tldParts = rule.suffix.split('.');\n  var privateParts = domainParts.slice(0, domainParts.length - tldParts.length);\n\n  if (rule.exception) {\n    privateParts.push(tldParts.shift());\n  }\n\n  parsed.tld = tldParts.join('.');\n\n  if (!privateParts.length) {\n    return handlePunycode();\n  }\n\n  if (rule.wildcard) {\n    tldParts.unshift(privateParts.pop());\n    parsed.tld = tldParts.join('.');\n  }\n\n  if (!privateParts.length) {\n    return handlePunycode();\n  }\n\n  parsed.sld = privateParts.pop();\n  parsed.domain = [parsed.sld,  parsed.tld].join('.');\n\n  if (privateParts.length) {\n    parsed.subdomain = privateParts.join('.');\n  }\n\n  return handlePunycode();\n};\n\n\n//\n// Get domain.\n//\nexports.get = function (domain) {\n\n  if (!domain) {\n    return null;\n  }\n  return exports.parse(domain).domain || null;\n};\n\n\n//\n// Check whether domain belongs to a known public suffix.\n//\nexports.isValid = function (domain) {\n\n  var parsed = exports.parse(domain);\n  return Boolean(parsed.domain && parsed.listed);\n};\n", "/*!\n * Copyright (c) 2018, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\"use strict\";\nconst psl = require(\"psl\");\n\nfunction getPublicSuffix(domain) {\n  return psl.get(domain);\n}\n\nexports.getPublicSuffix = getPublicSuffix;\n", "/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\"use strict\";\n/*jshint unused:false */\n\nclass Store {\n  constructor() {\n    this.synchronous = false;\n  }\n\n  findCookie(domain, path, key, cb) {\n    throw new Error(\"findCookie is not implemented\");\n  }\n\n  findCookies(domain, path, allowSpecialUseDomain, cb) {\n    throw new Error(\"findCookies is not implemented\");\n  }\n\n  putCookie(cookie, cb) {\n    throw new Error(\"putCookie is not implemented\");\n  }\n\n  updateCookie(oldCookie, newCookie, cb) {\n    // recommended default implementation:\n    // return this.putCookie(newCookie, cb);\n    throw new Error(\"updateCookie is not implemented\");\n  }\n\n  removeCookie(domain, path, key, cb) {\n    throw new Error(\"removeCookie is not implemented\");\n  }\n\n  removeCookies(domain, path, cb) {\n    throw new Error(\"removeCookies is not implemented\");\n  }\n\n  removeAllCookies(cb) {\n    throw new Error(\"removeAllCookies is not implemented\");\n  }\n\n  getAllCookies(cb) {\n    throw new Error(\n      \"getAllCookies is not implemented (therefore jar cannot be serialized)\"\n    );\n  }\n}\n\nexports.Store = Store;\n", "'use strict'\n\nexports.fromCallback = function (fn) {\n  return Object.defineProperty(function () {\n    if (typeof arguments[arguments.length - 1] === 'function') fn.apply(this, arguments)\n    else {\n      return new Promise((resolve, reject) => {\n        arguments[arguments.length] = (err, res) => {\n          if (err) return reject(err)\n          resolve(res)\n        }\n        arguments.length++\n        fn.apply(this, arguments)\n      })\n    }\n  }, 'name', { value: fn.name })\n}\n\nexports.fromPromise = function (fn) {\n  return Object.defineProperty(function () {\n    const cb = arguments[arguments.length - 1]\n    if (typeof cb !== 'function') return fn.apply(this, arguments)\n    else fn.apply(this, arguments).then(r => cb(null, r), cb)\n  }, 'name', { value: fn.name })\n}\n", "/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\"use strict\";\nconst pubsuffix = require(\"./pubsuffix-psl\");\n\n// Gives the permutation of all possible domainMatch()es of a given domain. The\n// array is in shortest-to-longest order.  Handy for indexing.\nconst SPECIAL_USE_DOMAINS = [\"local\"]; // RFC 6761\nfunction permuteDomain(domain, allowSpecialUseDomain) {\n  let pubSuf = null;\n  if (allowSpecialUseDomain) {\n    const domainParts = domain.split(\".\");\n    if (SPECIAL_USE_DOMAINS.includes(domainParts[domainParts.length - 1])) {\n      pubSuf = `${domainParts[domainParts.length - 2]}.${\n        domainParts[domainParts.length - 1]\n      }`;\n    } else {\n      pubSuf = pubsuffix.getPublicSuffix(domain);\n    }\n  } else {\n    pubSuf = pubsuffix.getPublicSuffix(domain);\n  }\n\n  if (!pubSuf) {\n    return null;\n  }\n  if (pubSuf == domain) {\n    return [domain];\n  }\n\n  const prefix = domain.slice(0, -(pubSuf.length + 1)); // \".example.com\"\n  const parts = prefix.split(\".\").reverse();\n  let cur = pubSuf;\n  const permutations = [cur];\n  while (parts.length) {\n    cur = `${parts.shift()}.${cur}`;\n    permutations.push(cur);\n  }\n  return permutations;\n}\n\nexports.permuteDomain = permuteDomain;\n", "/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\"use strict\";\n/*\n * \"A request-path path-matches a given cookie-path if at least one of the\n * following conditions holds:\"\n */\nfunction pathMatch(reqPath, cookiePath) {\n  // \"o  The cookie-path and the request-path are identical.\"\n  if (cookiePath === reqPath) {\n    return true;\n  }\n\n  const idx = reqPath.indexOf(cookiePath);\n  if (idx === 0) {\n    // \"o  The cookie-path is a prefix of the request-path, and the last\n    // character of the cookie-path is %x2F (\"/\").\"\n    if (cookiePath.substr(-1) === \"/\") {\n      return true;\n    }\n\n    // \" o  The cookie-path is a prefix of the request-path, and the first\n    // character of the request-path that is not included in the cookie- path\n    // is a %x2F (\"/\") character.\"\n    if (reqPath.substr(cookiePath.length, 1) === \"/\") {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexports.pathMatch = pathMatch;\n", "/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\"use strict\";\nconst { fromCallback } = require(\"universalify\");\nconst Store = require(\"./store\").Store;\nconst permuteDomain = require(\"./permuteDomain\").permuteDomain;\nconst pathMatch = require(\"./pathMatch\").pathMatch;\nconst util = require(\"util\");\n\nclass MemoryCookieStore extends Store {\n  constructor() {\n    super();\n    this.synchronous = true;\n    this.idx = {};\n    if (util.inspect.custom) {\n      this[util.inspect.custom] = this.inspect;\n    }\n  }\n\n  inspect() {\n    return `{ idx: ${util.inspect(this.idx, false, 2)} }`;\n  }\n\n  findCookie(domain, path, key, cb) {\n    if (!this.idx[domain]) {\n      return cb(null, undefined);\n    }\n    if (!this.idx[domain][path]) {\n      return cb(null, undefined);\n    }\n    return cb(null, this.idx[domain][path][key] || null);\n  }\n  findCookies(domain, path, allowSpecialUseDomain, cb) {\n    const results = [];\n    if (typeof allowSpecialUseDomain === \"function\") {\n      cb = allowSpecialUseDomain;\n      allowSpecialUseDomain = false;\n    }\n    if (!domain) {\n      return cb(null, []);\n    }\n\n    let pathMatcher;\n    if (!path) {\n      // null means \"all paths\"\n      pathMatcher = function matchAll(domainIndex) {\n        for (const curPath in domainIndex) {\n          const pathIndex = domainIndex[curPath];\n          for (const key in pathIndex) {\n            results.push(pathIndex[key]);\n          }\n        }\n      };\n    } else {\n      pathMatcher = function matchRFC(domainIndex) {\n        //NOTE: we should use path-match algorithm from S5.1.4 here\n        //(see : https://github.com/ChromiumWebApps/chromium/blob/b3d3b4da8bb94c1b2e061600df106d590fda3620/net/cookies/canonical_cookie.cc#L299)\n        Object.keys(domainIndex).forEach(cookiePath => {\n          if (pathMatch(path, cookiePath)) {\n            const pathIndex = domainIndex[cookiePath];\n            for (const key in pathIndex) {\n              results.push(pathIndex[key]);\n            }\n          }\n        });\n      };\n    }\n\n    const domains = permuteDomain(domain, allowSpecialUseDomain) || [domain];\n    const idx = this.idx;\n    domains.forEach(curDomain => {\n      const domainIndex = idx[curDomain];\n      if (!domainIndex) {\n        return;\n      }\n      pathMatcher(domainIndex);\n    });\n\n    cb(null, results);\n  }\n\n  putCookie(cookie, cb) {\n    if (!this.idx[cookie.domain]) {\n      this.idx[cookie.domain] = {};\n    }\n    if (!this.idx[cookie.domain][cookie.path]) {\n      this.idx[cookie.domain][cookie.path] = {};\n    }\n    this.idx[cookie.domain][cookie.path][cookie.key] = cookie;\n    cb(null);\n  }\n  updateCookie(oldCookie, newCookie, cb) {\n    // updateCookie() may avoid updating cookies that are identical.  For example,\n    // lastAccessed may not be important to some stores and an equality\n    // comparison could exclude that field.\n    this.putCookie(newCookie, cb);\n  }\n  removeCookie(domain, path, key, cb) {\n    if (\n      this.idx[domain] &&\n      this.idx[domain][path] &&\n      this.idx[domain][path][key]\n    ) {\n      delete this.idx[domain][path][key];\n    }\n    cb(null);\n  }\n  removeCookies(domain, path, cb) {\n    if (this.idx[domain]) {\n      if (path) {\n        delete this.idx[domain][path];\n      } else {\n        delete this.idx[domain];\n      }\n    }\n    return cb(null);\n  }\n  removeAllCookies(cb) {\n    this.idx = {};\n    return cb(null);\n  }\n  getAllCookies(cb) {\n    const cookies = [];\n    const idx = this.idx;\n\n    const domains = Object.keys(idx);\n    domains.forEach(domain => {\n      const paths = Object.keys(idx[domain]);\n      paths.forEach(path => {\n        const keys = Object.keys(idx[domain][path]);\n        keys.forEach(key => {\n          if (key !== null) {\n            cookies.push(idx[domain][path][key]);\n          }\n        });\n      });\n    });\n\n    // Sort by creationIndex so deserializing retains the creation order.\n    // When implementing your own store, this SHOULD retain the order too\n    cookies.sort((a, b) => {\n      return (a.creationIndex || 0) - (b.creationIndex || 0);\n    });\n\n    cb(null, cookies);\n  }\n}\n\n[\n  \"findCookie\",\n  \"findCookies\",\n  \"putCookie\",\n  \"updateCookie\",\n  \"removeCookie\",\n  \"removeCookies\",\n  \"removeAllCookies\",\n  \"getAllCookies\"\n].forEach(name => {\n  MemoryCookieStore[name] = fromCallback(MemoryCookieStore.prototype[name]);\n});\n\nexports.MemoryCookieStore = MemoryCookieStore;\n", "// generated by genversion\nmodule.exports = '4.0.0'\n", "/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\"use strict\";\nconst punycode = require(\"punycode\");\nconst urlParse = require(\"url\").parse;\nconst util = require(\"util\");\nconst pubsuffix = require(\"./pubsuffix-psl\");\nconst Store = require(\"./store\").Store;\nconst MemoryCookieStore = require(\"./memstore\").MemoryCookieStore;\nconst pathMatch = require(\"./pathMatch\").pathMatch;\nconst VERSION = require(\"./version\");\nconst { fromCallback } = require(\"universalify\");\n\n// From RFC6265 S4.1.1\n// note that it excludes \\x3B \";\"\nconst COOKIE_OCTETS = /^[\\x21\\x23-\\x2B\\x2D-\\x3A\\x3C-\\x5B\\x5D-\\x7E]+$/;\n\nconst CONTROL_CHARS = /[\\x00-\\x1F]/;\n\n// From Chromium // '\\r', '\\n' and '\\0' should be treated as a terminator in\n// the \"relaxed\" mode, see:\n// https://github.com/ChromiumWebApps/chromium/blob/b3d3b4da8bb94c1b2e061600df106d590fda3620/net/cookies/parsed_cookie.cc#L60\nconst TERMINATORS = [\"\\n\", \"\\r\", \"\\0\"];\n\n// RFC6265 S4.1.1 defines path value as 'any CHAR except CTLs or \";\"'\n// Note ';' is \\x3B\nconst PATH_VALUE = /[\\x20-\\x3A\\x3C-\\x7E]+/;\n\n// date-time parsing constants (RFC6265 S5.1.1)\n\nconst DATE_DELIM = /[\\x09\\x20-\\x2F\\x3B-\\x40\\x5B-\\x60\\x7B-\\x7E]/;\n\nconst MONTH_TO_NUM = {\n  jan: 0,\n  feb: 1,\n  mar: 2,\n  apr: 3,\n  may: 4,\n  jun: 5,\n  jul: 6,\n  aug: 7,\n  sep: 8,\n  oct: 9,\n  nov: 10,\n  dec: 11\n};\n\nconst MAX_TIME = 2147483647000; // 31-bit max\nconst MIN_TIME = 0; // 31-bit min\nconst SAME_SITE_CONTEXT_VAL_ERR =\n  'Invalid sameSiteContext option for getCookies(); expected one of \"strict\", \"lax\", or \"none\"';\n\nfunction checkSameSiteContext(value) {\n  const context = String(value).toLowerCase();\n  if (context === \"none\" || context === \"lax\" || context === \"strict\") {\n    return context;\n  } else {\n    return null;\n  }\n}\n\nconst PrefixSecurityEnum = Object.freeze({\n  SILENT: \"silent\",\n  STRICT: \"strict\",\n  DISABLED: \"unsafe-disabled\"\n});\n\n// Dumped from ip-regex@4.0.0, with the following changes:\n// * all capturing groups converted to non-capturing -- \"(?:)\"\n// * support for IPv6 Scoped Literal (\"%eth1\") removed\n// * lowercase hexadecimal only\nvar IP_REGEX_LOWERCASE =/(?:^(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}$)|(?:^(?:(?:[a-f\\d]{1,4}:){7}(?:[a-f\\d]{1,4}|:)|(?:[a-f\\d]{1,4}:){6}(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|:[a-f\\d]{1,4}|:)|(?:[a-f\\d]{1,4}:){5}(?::(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,2}|:)|(?:[a-f\\d]{1,4}:){4}(?:(?::[a-f\\d]{1,4}){0,1}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,3}|:)|(?:[a-f\\d]{1,4}:){3}(?:(?::[a-f\\d]{1,4}){0,2}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,4}|:)|(?:[a-f\\d]{1,4}:){2}(?:(?::[a-f\\d]{1,4}){0,3}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,5}|:)|(?:[a-f\\d]{1,4}:){1}(?:(?::[a-f\\d]{1,4}){0,4}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,6}|:)|(?::(?:(?::[a-f\\d]{1,4}){0,5}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,7}|:)))$)/;\n\n/*\n * Parses a Natural number (i.e., non-negative integer) with either the\n *    <min>*<max>DIGIT ( non-digit *OCTET )\n * or\n *    <min>*<max>DIGIT\n * grammar (RFC6265 S5.1.1).\n *\n * The \"trailingOK\" boolean controls if the grammar accepts a\n * \"( non-digit *OCTET )\" trailer.\n */\nfunction parseDigits(token, minDigits, maxDigits, trailingOK) {\n  let count = 0;\n  while (count < token.length) {\n    const c = token.charCodeAt(count);\n    // \"non-digit = %x00-2F / %x3A-FF\"\n    if (c <= 0x2f || c >= 0x3a) {\n      break;\n    }\n    count++;\n  }\n\n  // constrain to a minimum and maximum number of digits.\n  if (count < minDigits || count > maxDigits) {\n    return null;\n  }\n\n  if (!trailingOK && count != token.length) {\n    return null;\n  }\n\n  return parseInt(token.substr(0, count), 10);\n}\n\nfunction parseTime(token) {\n  const parts = token.split(\":\");\n  const result = [0, 0, 0];\n\n  /* RF6256 S5.1.1:\n   *      time            = hms-time ( non-digit *OCTET )\n   *      hms-time        = time-field \":\" time-field \":\" time-field\n   *      time-field      = 1*2DIGIT\n   */\n\n  if (parts.length !== 3) {\n    return null;\n  }\n\n  for (let i = 0; i < 3; i++) {\n    // \"time-field\" must be strictly \"1*2DIGIT\", HOWEVER, \"hms-time\" can be\n    // followed by \"( non-digit *OCTET )\" so therefore the last time-field can\n    // have a trailer\n    const trailingOK = i == 2;\n    const num = parseDigits(parts[i], 1, 2, trailingOK);\n    if (num === null) {\n      return null;\n    }\n    result[i] = num;\n  }\n\n  return result;\n}\n\nfunction parseMonth(token) {\n  token = String(token)\n    .substr(0, 3)\n    .toLowerCase();\n  const num = MONTH_TO_NUM[token];\n  return num >= 0 ? num : null;\n}\n\n/*\n * RFC6265 S5.1.1 date parser (see RFC for full grammar)\n */\nfunction parseDate(str) {\n  if (!str) {\n    return;\n  }\n\n  /* RFC6265 S5.1.1:\n   * 2. Process each date-token sequentially in the order the date-tokens\n   * appear in the cookie-date\n   */\n  const tokens = str.split(DATE_DELIM);\n  if (!tokens) {\n    return;\n  }\n\n  let hour = null;\n  let minute = null;\n  let second = null;\n  let dayOfMonth = null;\n  let month = null;\n  let year = null;\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i].trim();\n    if (!token.length) {\n      continue;\n    }\n\n    let result;\n\n    /* 2.1. If the found-time flag is not set and the token matches the time\n     * production, set the found-time flag and set the hour- value,\n     * minute-value, and second-value to the numbers denoted by the digits in\n     * the date-token, respectively.  Skip the remaining sub-steps and continue\n     * to the next date-token.\n     */\n    if (second === null) {\n      result = parseTime(token);\n      if (result) {\n        hour = result[0];\n        minute = result[1];\n        second = result[2];\n        continue;\n      }\n    }\n\n    /* 2.2. If the found-day-of-month flag is not set and the date-token matches\n     * the day-of-month production, set the found-day-of- month flag and set\n     * the day-of-month-value to the number denoted by the date-token.  Skip\n     * the remaining sub-steps and continue to the next date-token.\n     */\n    if (dayOfMonth === null) {\n      // \"day-of-month = 1*2DIGIT ( non-digit *OCTET )\"\n      result = parseDigits(token, 1, 2, true);\n      if (result !== null) {\n        dayOfMonth = result;\n        continue;\n      }\n    }\n\n    /* 2.3. If the found-month flag is not set and the date-token matches the\n     * month production, set the found-month flag and set the month-value to\n     * the month denoted by the date-token.  Skip the remaining sub-steps and\n     * continue to the next date-token.\n     */\n    if (month === null) {\n      result = parseMonth(token);\n      if (result !== null) {\n        month = result;\n        continue;\n      }\n    }\n\n    /* 2.4. If the found-year flag is not set and the date-token matches the\n     * year production, set the found-year flag and set the year-value to the\n     * number denoted by the date-token.  Skip the remaining sub-steps and\n     * continue to the next date-token.\n     */\n    if (year === null) {\n      // \"year = 2*4DIGIT ( non-digit *OCTET )\"\n      result = parseDigits(token, 2, 4, true);\n      if (result !== null) {\n        year = result;\n        /* From S5.1.1:\n         * 3.  If the year-value is greater than or equal to 70 and less\n         * than or equal to 99, increment the year-value by 1900.\n         * 4.  If the year-value is greater than or equal to 0 and less\n         * than or equal to 69, increment the year-value by 2000.\n         */\n        if (year >= 70 && year <= 99) {\n          year += 1900;\n        } else if (year >= 0 && year <= 69) {\n          year += 2000;\n        }\n      }\n    }\n  }\n\n  /* RFC 6265 S5.1.1\n   * \"5. Abort these steps and fail to parse the cookie-date if:\n   *     *  at least one of the found-day-of-month, found-month, found-\n   *        year, or found-time flags is not set,\n   *     *  the day-of-month-value is less than 1 or greater than 31,\n   *     *  the year-value is less than 1601,\n   *     *  the hour-value is greater than 23,\n   *     *  the minute-value is greater than 59, or\n   *     *  the second-value is greater than 59.\n   *     (Note that leap seconds cannot be represented in this syntax.)\"\n   *\n   * So, in order as above:\n   */\n  if (\n    dayOfMonth === null ||\n    month === null ||\n    year === null ||\n    second === null ||\n    dayOfMonth < 1 ||\n    dayOfMonth > 31 ||\n    year < 1601 ||\n    hour > 23 ||\n    minute > 59 ||\n    second > 59\n  ) {\n    return;\n  }\n\n  return new Date(Date.UTC(year, month, dayOfMonth, hour, minute, second));\n}\n\nfunction formatDate(date) {\n  return date.toUTCString();\n}\n\n// S5.1.2 Canonicalized Host Names\nfunction canonicalDomain(str) {\n  if (str == null) {\n    return null;\n  }\n  str = str.trim().replace(/^\\./, \"\"); // S4.1.2.3 & S5.2.3: ignore leading .\n\n  // convert to IDN if any non-ASCII characters\n  if (punycode && /[^\\u0001-\\u007f]/.test(str)) {\n    str = punycode.toASCII(str);\n  }\n\n  return str.toLowerCase();\n}\n\n// S5.1.3 Domain Matching\nfunction domainMatch(str, domStr, canonicalize) {\n  if (str == null || domStr == null) {\n    return null;\n  }\n  if (canonicalize !== false) {\n    str = canonicalDomain(str);\n    domStr = canonicalDomain(domStr);\n  }\n\n  /*\n   * S5.1.3:\n   * \"A string domain-matches a given domain string if at least one of the\n   * following conditions hold:\"\n   *\n   * \" o The domain string and the string are identical. (Note that both the\n   * domain string and the string will have been canonicalized to lower case at\n   * this point)\"\n   */\n  if (str == domStr) {\n    return true;\n  }\n\n  /* \" o All of the following [three] conditions hold:\" */\n\n  /* \"* The domain string is a suffix of the string\" */\n  const idx = str.indexOf(domStr);\n  if (idx <= 0) {\n    return false; // it's a non-match (-1) or prefix (0)\n  }\n\n  // next, check it's a proper suffix\n  // e.g., \"a.b.c\".indexOf(\"b.c\") === 2\n  // 5 === 3+2\n  if (str.length !== domStr.length + idx) {\n    return false; // it's not a suffix\n  }\n\n  /* \"  * The last character of the string that is not included in the\n   * domain string is a %x2E (\".\") character.\" */\n  if (str.substr(idx-1,1) !== '.') {\n    return false; // doesn't align on \".\"\n  }\n\n  /* \"  * The string is a host name (i.e., not an IP address).\" */\n  if (IP_REGEX_LOWERCASE.test(str)) {\n    return false; // it's an IP address\n  }\n\n  return true;\n}\n\n// RFC6265 S5.1.4 Paths and Path-Match\n\n/*\n * \"The user agent MUST use an algorithm equivalent to the following algorithm\n * to compute the default-path of a cookie:\"\n *\n * Assumption: the path (and not query part or absolute uri) is passed in.\n */\nfunction defaultPath(path) {\n  // \"2. If the uri-path is empty or if the first character of the uri-path is not\n  // a %x2F (\"/\") character, output %x2F (\"/\") and skip the remaining steps.\n  if (!path || path.substr(0, 1) !== \"/\") {\n    return \"/\";\n  }\n\n  // \"3. If the uri-path contains no more than one %x2F (\"/\") character, output\n  // %x2F (\"/\") and skip the remaining step.\"\n  if (path === \"/\") {\n    return path;\n  }\n\n  const rightSlash = path.lastIndexOf(\"/\");\n  if (rightSlash === 0) {\n    return \"/\";\n  }\n\n  // \"4. Output the characters of the uri-path from the first character up to,\n  // but not including, the right-most %x2F (\"/\").\"\n  return path.slice(0, rightSlash);\n}\n\nfunction trimTerminator(str) {\n  for (let t = 0; t < TERMINATORS.length; t++) {\n    const terminatorIdx = str.indexOf(TERMINATORS[t]);\n    if (terminatorIdx !== -1) {\n      str = str.substr(0, terminatorIdx);\n    }\n  }\n\n  return str;\n}\n\nfunction parseCookiePair(cookiePair, looseMode) {\n  cookiePair = trimTerminator(cookiePair);\n\n  let firstEq = cookiePair.indexOf(\"=\");\n  if (looseMode) {\n    if (firstEq === 0) {\n      // '=' is immediately at start\n      cookiePair = cookiePair.substr(1);\n      firstEq = cookiePair.indexOf(\"=\"); // might still need to split on '='\n    }\n  } else {\n    // non-loose mode\n    if (firstEq <= 0) {\n      // no '=' or is at start\n      return; // needs to have non-empty \"cookie-name\"\n    }\n  }\n\n  let cookieName, cookieValue;\n  if (firstEq <= 0) {\n    cookieName = \"\";\n    cookieValue = cookiePair.trim();\n  } else {\n    cookieName = cookiePair.substr(0, firstEq).trim();\n    cookieValue = cookiePair.substr(firstEq + 1).trim();\n  }\n\n  if (CONTROL_CHARS.test(cookieName) || CONTROL_CHARS.test(cookieValue)) {\n    return;\n  }\n\n  const c = new Cookie();\n  c.key = cookieName;\n  c.value = cookieValue;\n  return c;\n}\n\nfunction parse(str, options) {\n  if (!options || typeof options !== \"object\") {\n    options = {};\n  }\n  str = str.trim();\n\n  // We use a regex to parse the \"name-value-pair\" part of S5.2\n  const firstSemi = str.indexOf(\";\"); // S5.2 step 1\n  const cookiePair = firstSemi === -1 ? str : str.substr(0, firstSemi);\n  const c = parseCookiePair(cookiePair, !!options.loose);\n  if (!c) {\n    return;\n  }\n\n  if (firstSemi === -1) {\n    return c;\n  }\n\n  // S5.2.3 \"unparsed-attributes consist of the remainder of the set-cookie-string\n  // (including the %x3B (\";\") in question).\" plus later on in the same section\n  // \"discard the first \";\" and trim\".\n  const unparsed = str.slice(firstSemi + 1).trim();\n\n  // \"If the unparsed-attributes string is empty, skip the rest of these\n  // steps.\"\n  if (unparsed.length === 0) {\n    return c;\n  }\n\n  /*\n   * S5.2 says that when looping over the items \"[p]rocess the attribute-name\n   * and attribute-value according to the requirements in the following\n   * subsections\" for every item.  Plus, for many of the individual attributes\n   * in S5.3 it says to use the \"attribute-value of the last attribute in the\n   * cookie-attribute-list\".  Therefore, in this implementation, we overwrite\n   * the previous value.\n   */\n  const cookie_avs = unparsed.split(\";\");\n  while (cookie_avs.length) {\n    const av = cookie_avs.shift().trim();\n    if (av.length === 0) {\n      // happens if \";;\" appears\n      continue;\n    }\n    const av_sep = av.indexOf(\"=\");\n    let av_key, av_value;\n\n    if (av_sep === -1) {\n      av_key = av;\n      av_value = null;\n    } else {\n      av_key = av.substr(0, av_sep);\n      av_value = av.substr(av_sep + 1);\n    }\n\n    av_key = av_key.trim().toLowerCase();\n\n    if (av_value) {\n      av_value = av_value.trim();\n    }\n\n    switch (av_key) {\n      case \"expires\": // S5.2.1\n        if (av_value) {\n          const exp = parseDate(av_value);\n          // \"If the attribute-value failed to parse as a cookie date, ignore the\n          // cookie-av.\"\n          if (exp) {\n            // over and underflow not realistically a concern: V8's getTime() seems to\n            // store something larger than a 32-bit time_t (even with 32-bit node)\n            c.expires = exp;\n          }\n        }\n        break;\n\n      case \"max-age\": // S5.2.2\n        if (av_value) {\n          // \"If the first character of the attribute-value is not a DIGIT or a \"-\"\n          // character ...[or]... If the remainder of attribute-value contains a\n          // non-DIGIT character, ignore the cookie-av.\"\n          if (/^-?[0-9]+$/.test(av_value)) {\n            const delta = parseInt(av_value, 10);\n            // \"If delta-seconds is less than or equal to zero (0), let expiry-time\n            // be the earliest representable date and time.\"\n            c.setMaxAge(delta);\n          }\n        }\n        break;\n\n      case \"domain\": // S5.2.3\n        // \"If the attribute-value is empty, the behavior is undefined.  However,\n        // the user agent SHOULD ignore the cookie-av entirely.\"\n        if (av_value) {\n          // S5.2.3 \"Let cookie-domain be the attribute-value without the leading %x2E\n          // (\".\") character.\"\n          const domain = av_value.trim().replace(/^\\./, \"\");\n          if (domain) {\n            // \"Convert the cookie-domain to lower case.\"\n            c.domain = domain.toLowerCase();\n          }\n        }\n        break;\n\n      case \"path\": // S5.2.4\n        /*\n         * \"If the attribute-value is empty or if the first character of the\n         * attribute-value is not %x2F (\"/\"):\n         *   Let cookie-path be the default-path.\n         * Otherwise:\n         *   Let cookie-path be the attribute-value.\"\n         *\n         * We'll represent the default-path as null since it depends on the\n         * context of the parsing.\n         */\n        c.path = av_value && av_value[0] === \"/\" ? av_value : null;\n        break;\n\n      case \"secure\": // S5.2.5\n        /*\n         * \"If the attribute-name case-insensitively matches the string \"Secure\",\n         * the user agent MUST append an attribute to the cookie-attribute-list\n         * with an attribute-name of Secure and an empty attribute-value.\"\n         */\n        c.secure = true;\n        break;\n\n      case \"httponly\": // S5.2.6 -- effectively the same as 'secure'\n        c.httpOnly = true;\n        break;\n\n      case \"samesite\": // RFC6265bis-02 S5.3.7\n        const enforcement = av_value ? av_value.toLowerCase() : \"\";\n        switch (enforcement) {\n          case \"strict\":\n            c.sameSite = \"strict\";\n            break;\n          case \"lax\":\n            c.sameSite = \"lax\";\n            break;\n          default:\n            // RFC6265bis-02 S5.3.7 step 1:\n            // \"If cookie-av's attribute-value is not a case-insensitive match\n            //  for \"Strict\" or \"Lax\", ignore the \"cookie-av\".\"\n            // This effectively sets it to 'none' from the prototype.\n            break;\n        }\n        break;\n\n      default:\n        c.extensions = c.extensions || [];\n        c.extensions.push(av);\n        break;\n    }\n  }\n\n  return c;\n}\n\n/**\n *  If the cookie-name begins with a case-sensitive match for the\n *  string \"__Secure-\", abort these steps and ignore the cookie\n *  entirely unless the cookie's secure-only-flag is true.\n * @param cookie\n * @returns boolean\n */\nfunction isSecurePrefixConditionMet(cookie) {\n  return !cookie.key.startsWith(\"__Secure-\") || cookie.secure;\n}\n\n/**\n *  If the cookie-name begins with a case-sensitive match for the\n *  string \"__Host-\", abort these steps and ignore the cookie\n *  entirely unless the cookie meets all the following criteria:\n *    1.  The cookie's secure-only-flag is true.\n *    2.  The cookie's host-only-flag is true.\n *    3.  The cookie-attribute-list contains an attribute with an\n *        attribute-name of \"Path\", and the cookie's path is \"/\".\n * @param cookie\n * @returns boolean\n */\nfunction isHostPrefixConditionMet(cookie) {\n  return (\n    !cookie.key.startsWith(\"__Host-\") ||\n    (cookie.secure &&\n      cookie.hostOnly &&\n      cookie.path != null &&\n      cookie.path === \"/\")\n  );\n}\n\n// avoid the V8 deoptimization monster!\nfunction jsonParse(str) {\n  let obj;\n  try {\n    obj = JSON.parse(str);\n  } catch (e) {\n    return e;\n  }\n  return obj;\n}\n\nfunction fromJSON(str) {\n  if (!str) {\n    return null;\n  }\n\n  let obj;\n  if (typeof str === \"string\") {\n    obj = jsonParse(str);\n    if (obj instanceof Error) {\n      return null;\n    }\n  } else {\n    // assume it's an Object\n    obj = str;\n  }\n\n  const c = new Cookie();\n  for (let i = 0; i < Cookie.serializableProperties.length; i++) {\n    const prop = Cookie.serializableProperties[i];\n    if (obj[prop] === undefined || obj[prop] === cookieDefaults[prop]) {\n      continue; // leave as prototype default\n    }\n\n    if (prop === \"expires\" || prop === \"creation\" || prop === \"lastAccessed\") {\n      if (obj[prop] === null) {\n        c[prop] = null;\n      } else {\n        c[prop] = obj[prop] == \"Infinity\" ? \"Infinity\" : new Date(obj[prop]);\n      }\n    } else {\n      c[prop] = obj[prop];\n    }\n  }\n\n  return c;\n}\n\n/* Section 5.4 part 2:\n * \"*  Cookies with longer paths are listed before cookies with\n *     shorter paths.\n *\n *  *  Among cookies that have equal-length path fields, cookies with\n *     earlier creation-times are listed before cookies with later\n *     creation-times.\"\n */\n\nfunction cookieCompare(a, b) {\n  let cmp = 0;\n\n  // descending for length: b CMP a\n  const aPathLen = a.path ? a.path.length : 0;\n  const bPathLen = b.path ? b.path.length : 0;\n  cmp = bPathLen - aPathLen;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  // ascending for time: a CMP b\n  const aTime = a.creation ? a.creation.getTime() : MAX_TIME;\n  const bTime = b.creation ? b.creation.getTime() : MAX_TIME;\n  cmp = aTime - bTime;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  // break ties for the same millisecond (precision of JavaScript's clock)\n  cmp = a.creationIndex - b.creationIndex;\n\n  return cmp;\n}\n\n// Gives the permutation of all possible pathMatch()es of a given path. The\n// array is in longest-to-shortest order.  Handy for indexing.\nfunction permutePath(path) {\n  if (path === \"/\") {\n    return [\"/\"];\n  }\n  const permutations = [path];\n  while (path.length > 1) {\n    const lindex = path.lastIndexOf(\"/\");\n    if (lindex === 0) {\n      break;\n    }\n    path = path.substr(0, lindex);\n    permutations.push(path);\n  }\n  permutations.push(\"/\");\n  return permutations;\n}\n\nfunction getCookieContext(url) {\n  if (url instanceof Object) {\n    return url;\n  }\n  // NOTE: decodeURI will throw on malformed URIs (see GH-32).\n  // Therefore, we will just skip decoding for such URIs.\n  try {\n    url = decodeURI(url);\n  } catch (err) {\n    // Silently swallow error\n  }\n\n  return urlParse(url);\n}\n\nconst cookieDefaults = {\n  // the order in which the RFC has them:\n  key: \"\",\n  value: \"\",\n  expires: \"Infinity\",\n  maxAge: null,\n  domain: null,\n  path: null,\n  secure: false,\n  httpOnly: false,\n  extensions: null,\n  // set by the CookieJar:\n  hostOnly: null,\n  pathIsDefault: null,\n  creation: null,\n  lastAccessed: null,\n  sameSite: \"none\"\n};\n\nclass Cookie {\n  constructor(options = {}) {\n    if (util.inspect.custom) {\n      this[util.inspect.custom] = this.inspect;\n    }\n\n    Object.assign(this, cookieDefaults, options);\n    this.creation = this.creation || new Date();\n\n    // used to break creation ties in cookieCompare():\n    Object.defineProperty(this, \"creationIndex\", {\n      configurable: false,\n      enumerable: false, // important for assert.deepEqual checks\n      writable: true,\n      value: ++Cookie.cookiesCreated\n    });\n  }\n\n  inspect() {\n    const now = Date.now();\n    const hostOnly = this.hostOnly != null ? this.hostOnly : \"?\";\n    const createAge = this.creation\n      ? `${now - this.creation.getTime()}ms`\n      : \"?\";\n    const accessAge = this.lastAccessed\n      ? `${now - this.lastAccessed.getTime()}ms`\n      : \"?\";\n    return `Cookie=\"${this.toString()}; hostOnly=${hostOnly}; aAge=${accessAge}; cAge=${createAge}\"`;\n  }\n\n  toJSON() {\n    const obj = {};\n\n    for (const prop of Cookie.serializableProperties) {\n      if (this[prop] === cookieDefaults[prop]) {\n        continue; // leave as prototype default\n      }\n\n      if (\n        prop === \"expires\" ||\n        prop === \"creation\" ||\n        prop === \"lastAccessed\"\n      ) {\n        if (this[prop] === null) {\n          obj[prop] = null;\n        } else {\n          obj[prop] =\n            this[prop] == \"Infinity\" // intentionally not ===\n              ? \"Infinity\"\n              : this[prop].toISOString();\n        }\n      } else if (prop === \"maxAge\") {\n        if (this[prop] !== null) {\n          // again, intentionally not ===\n          obj[prop] =\n            this[prop] == Infinity || this[prop] == -Infinity\n              ? this[prop].toString()\n              : this[prop];\n        }\n      } else {\n        if (this[prop] !== cookieDefaults[prop]) {\n          obj[prop] = this[prop];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  clone() {\n    return fromJSON(this.toJSON());\n  }\n\n  validate() {\n    if (!COOKIE_OCTETS.test(this.value)) {\n      return false;\n    }\n    if (\n      this.expires != Infinity &&\n      !(this.expires instanceof Date) &&\n      !parseDate(this.expires)\n    ) {\n      return false;\n    }\n    if (this.maxAge != null && this.maxAge <= 0) {\n      return false; // \"Max-Age=\" non-zero-digit *DIGIT\n    }\n    if (this.path != null && !PATH_VALUE.test(this.path)) {\n      return false;\n    }\n\n    const cdomain = this.cdomain();\n    if (cdomain) {\n      if (cdomain.match(/\\.$/)) {\n        return false; // S4.1.2.3 suggests that this is bad. domainMatch() tests confirm this\n      }\n      const suffix = pubsuffix.getPublicSuffix(cdomain);\n      if (suffix == null) {\n        // it's a public suffix\n        return false;\n      }\n    }\n    return true;\n  }\n\n  setExpires(exp) {\n    if (exp instanceof Date) {\n      this.expires = exp;\n    } else {\n      this.expires = parseDate(exp) || \"Infinity\";\n    }\n  }\n\n  setMaxAge(age) {\n    if (age === Infinity || age === -Infinity) {\n      this.maxAge = age.toString(); // so JSON.stringify() works\n    } else {\n      this.maxAge = age;\n    }\n  }\n\n  cookieString() {\n    let val = this.value;\n    if (val == null) {\n      val = \"\";\n    }\n    if (this.key === \"\") {\n      return val;\n    }\n    return `${this.key}=${val}`;\n  }\n\n  // gives Set-Cookie header format\n  toString() {\n    let str = this.cookieString();\n\n    if (this.expires != Infinity) {\n      if (this.expires instanceof Date) {\n        str += `; Expires=${formatDate(this.expires)}`;\n      } else {\n        str += `; Expires=${this.expires}`;\n      }\n    }\n\n    if (this.maxAge != null && this.maxAge != Infinity) {\n      str += `; Max-Age=${this.maxAge}`;\n    }\n\n    if (this.domain && !this.hostOnly) {\n      str += `; Domain=${this.domain}`;\n    }\n    if (this.path) {\n      str += `; Path=${this.path}`;\n    }\n\n    if (this.secure) {\n      str += \"; Secure\";\n    }\n    if (this.httpOnly) {\n      str += \"; HttpOnly\";\n    }\n    if (this.sameSite && this.sameSite !== \"none\") {\n      const ssCanon = Cookie.sameSiteCanonical[this.sameSite.toLowerCase()];\n      str += `; SameSite=${ssCanon ? ssCanon : this.sameSite}`;\n    }\n    if (this.extensions) {\n      this.extensions.forEach(ext => {\n        str += `; ${ext}`;\n      });\n    }\n\n    return str;\n  }\n\n  // TTL() partially replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n  // elsewhere)\n  // S5.3 says to give the \"latest representable date\" for which we use Infinity\n  // For \"expired\" we use 0\n  TTL(now) {\n    /* RFC6265 S4.1.2.2 If a cookie has both the Max-Age and the Expires\n     * attribute, the Max-Age attribute has precedence and controls the\n     * expiration date of the cookie.\n     * (Concurs with S5.3 step 3)\n     */\n    if (this.maxAge != null) {\n      return this.maxAge <= 0 ? 0 : this.maxAge * 1000;\n    }\n\n    let expires = this.expires;\n    if (expires != Infinity) {\n      if (!(expires instanceof Date)) {\n        expires = parseDate(expires) || Infinity;\n      }\n\n      if (expires == Infinity) {\n        return Infinity;\n      }\n\n      return expires.getTime() - (now || Date.now());\n    }\n\n    return Infinity;\n  }\n\n  // expiryTime() replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n  // elsewhere)\n  expiryTime(now) {\n    if (this.maxAge != null) {\n      const relativeTo = now || this.creation || new Date();\n      const age = this.maxAge <= 0 ? -Infinity : this.maxAge * 1000;\n      return relativeTo.getTime() + age;\n    }\n\n    if (this.expires == Infinity) {\n      return Infinity;\n    }\n    return this.expires.getTime();\n  }\n\n  // expiryDate() replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n  // elsewhere), except it returns a Date\n  expiryDate(now) {\n    const millisec = this.expiryTime(now);\n    if (millisec == Infinity) {\n      return new Date(MAX_TIME);\n    } else if (millisec == -Infinity) {\n      return new Date(MIN_TIME);\n    } else {\n      return new Date(millisec);\n    }\n  }\n\n  // This replaces the \"persistent-flag\" parts of S5.3 step 3\n  isPersistent() {\n    return this.maxAge != null || this.expires != Infinity;\n  }\n\n  // Mostly S5.1.2 and S5.2.3:\n  canonicalizedDomain() {\n    if (this.domain == null) {\n      return null;\n    }\n    return canonicalDomain(this.domain);\n  }\n\n  cdomain() {\n    return this.canonicalizedDomain();\n  }\n}\n\nCookie.cookiesCreated = 0;\nCookie.parse = parse;\nCookie.fromJSON = fromJSON;\nCookie.serializableProperties = Object.keys(cookieDefaults);\nCookie.sameSiteLevel = {\n  strict: 3,\n  lax: 2,\n  none: 1\n};\n\nCookie.sameSiteCanonical = {\n  strict: \"Strict\",\n  lax: \"Lax\"\n};\n\nfunction getNormalizedPrefixSecurity(prefixSecurity) {\n  if (prefixSecurity != null) {\n    const normalizedPrefixSecurity = prefixSecurity.toLowerCase();\n    /* The three supported options */\n    switch (normalizedPrefixSecurity) {\n      case PrefixSecurityEnum.STRICT:\n      case PrefixSecurityEnum.SILENT:\n      case PrefixSecurityEnum.DISABLED:\n        return normalizedPrefixSecurity;\n    }\n  }\n  /* Default is SILENT */\n  return PrefixSecurityEnum.SILENT;\n}\n\nclass CookieJar {\n  constructor(store, options = { rejectPublicSuffixes: true }) {\n    if (typeof options === \"boolean\") {\n      options = { rejectPublicSuffixes: options };\n    }\n    this.rejectPublicSuffixes = options.rejectPublicSuffixes;\n    this.enableLooseMode = !!options.looseMode;\n    this.allowSpecialUseDomain = !!options.allowSpecialUseDomain;\n    this.store = store || new MemoryCookieStore();\n    this.prefixSecurity = getNormalizedPrefixSecurity(options.prefixSecurity);\n    this._cloneSync = syncWrap(\"clone\");\n    this._importCookiesSync = syncWrap(\"_importCookies\");\n    this.getCookiesSync = syncWrap(\"getCookies\");\n    this.getCookieStringSync = syncWrap(\"getCookieString\");\n    this.getSetCookieStringsSync = syncWrap(\"getSetCookieStrings\");\n    this.removeAllCookiesSync = syncWrap(\"removeAllCookies\");\n    this.setCookieSync = syncWrap(\"setCookie\");\n    this.serializeSync = syncWrap(\"serialize\");\n  }\n\n  setCookie(cookie, url, options, cb) {\n    let err;\n    const context = getCookieContext(url);\n    if (typeof options === \"function\") {\n      cb = options;\n      options = {};\n    }\n\n    const host = canonicalDomain(context.hostname);\n    const loose = options.loose || this.enableLooseMode;\n\n    let sameSiteContext = null;\n    if (options.sameSiteContext) {\n      sameSiteContext = checkSameSiteContext(options.sameSiteContext);\n      if (!sameSiteContext) {\n        return cb(new Error(SAME_SITE_CONTEXT_VAL_ERR));\n      }\n    }\n\n    // S5.3 step 1\n    if (typeof cookie === \"string\" || cookie instanceof String) {\n      cookie = Cookie.parse(cookie, { loose: loose });\n      if (!cookie) {\n        err = new Error(\"Cookie failed to parse\");\n        return cb(options.ignoreError ? null : err);\n      }\n    } else if (!(cookie instanceof Cookie)) {\n      // If you're seeing this error, and are passing in a Cookie object,\n      // it *might* be a Cookie object from another loaded version of tough-cookie.\n      err = new Error(\n        \"First argument to setCookie must be a Cookie object or string\"\n      );\n      return cb(options.ignoreError ? null : err);\n    }\n\n    // S5.3 step 2\n    const now = options.now || new Date(); // will assign later to save effort in the face of errors\n\n    // S5.3 step 3: NOOP; persistent-flag and expiry-time is handled by getCookie()\n\n    // S5.3 step 4: NOOP; domain is null by default\n\n    // S5.3 step 5: public suffixes\n    if (this.rejectPublicSuffixes && cookie.domain) {\n      const suffix = pubsuffix.getPublicSuffix(cookie.cdomain());\n      if (suffix == null) {\n        // e.g. \"com\"\n        err = new Error(\"Cookie has domain set to a public suffix\");\n        return cb(options.ignoreError ? null : err);\n      }\n    }\n\n    // S5.3 step 6:\n    if (cookie.domain) {\n      if (!domainMatch(host, cookie.cdomain(), false)) {\n        err = new Error(\n          `Cookie not in this host's domain. Cookie:${cookie.cdomain()} Request:${host}`\n        );\n        return cb(options.ignoreError ? null : err);\n      }\n\n      if (cookie.hostOnly == null) {\n        // don't reset if already set\n        cookie.hostOnly = false;\n      }\n    } else {\n      cookie.hostOnly = true;\n      cookie.domain = host;\n    }\n\n    //S5.2.4 If the attribute-value is empty or if the first character of the\n    //attribute-value is not %x2F (\"/\"):\n    //Let cookie-path be the default-path.\n    if (!cookie.path || cookie.path[0] !== \"/\") {\n      cookie.path = defaultPath(context.pathname);\n      cookie.pathIsDefault = true;\n    }\n\n    // S5.3 step 8: NOOP; secure attribute\n    // S5.3 step 9: NOOP; httpOnly attribute\n\n    // S5.3 step 10\n    if (options.http === false && cookie.httpOnly) {\n      err = new Error(\"Cookie is HttpOnly and this isn't an HTTP API\");\n      return cb(options.ignoreError ? null : err);\n    }\n\n    // 6252bis-02 S5.4 Step 13 & 14:\n    if (cookie.sameSite !== \"none\" && sameSiteContext) {\n      // \"If the cookie's \"same-site-flag\" is not \"None\", and the cookie\n      //  is being set from a context whose \"site for cookies\" is not an\n      //  exact match for request-uri's host's registered domain, then\n      //  abort these steps and ignore the newly created cookie entirely.\"\n      if (sameSiteContext === \"none\") {\n        err = new Error(\n          \"Cookie is SameSite but this is a cross-origin request\"\n        );\n        return cb(options.ignoreError ? null : err);\n      }\n    }\n\n    /* 6265bis-02 S5.4 Steps 15 & 16 */\n    const ignoreErrorForPrefixSecurity =\n      this.prefixSecurity === PrefixSecurityEnum.SILENT;\n    const prefixSecurityDisabled =\n      this.prefixSecurity === PrefixSecurityEnum.DISABLED;\n    /* If prefix checking is not disabled ...*/\n    if (!prefixSecurityDisabled) {\n      let errorFound = false;\n      let errorMsg;\n      /* Check secure prefix condition */\n      if (!isSecurePrefixConditionMet(cookie)) {\n        errorFound = true;\n        errorMsg = \"Cookie has __Secure prefix but Secure attribute is not set\";\n      } else if (!isHostPrefixConditionMet(cookie)) {\n        /* Check host prefix condition */\n        errorFound = true;\n        errorMsg =\n          \"Cookie has __Host prefix but either Secure or HostOnly attribute is not set or Path is not '/'\";\n      }\n      if (errorFound) {\n        return cb(\n          options.ignoreError || ignoreErrorForPrefixSecurity\n            ? null\n            : new Error(errorMsg)\n        );\n      }\n    }\n\n    const store = this.store;\n\n    if (!store.updateCookie) {\n      store.updateCookie = function(oldCookie, newCookie, cb) {\n        this.putCookie(newCookie, cb);\n      };\n    }\n\n    function withCookie(err, oldCookie) {\n      if (err) {\n        return cb(err);\n      }\n\n      const next = function(err) {\n        if (err) {\n          return cb(err);\n        } else {\n          cb(null, cookie);\n        }\n      };\n\n      if (oldCookie) {\n        // S5.3 step 11 - \"If the cookie store contains a cookie with the same name,\n        // domain, and path as the newly created cookie:\"\n        if (options.http === false && oldCookie.httpOnly) {\n          // step 11.2\n          err = new Error(\"old Cookie is HttpOnly and this isn't an HTTP API\");\n          return cb(options.ignoreError ? null : err);\n        }\n        cookie.creation = oldCookie.creation; // step 11.3\n        cookie.creationIndex = oldCookie.creationIndex; // preserve tie-breaker\n        cookie.lastAccessed = now;\n        // Step 11.4 (delete cookie) is implied by just setting the new one:\n        store.updateCookie(oldCookie, cookie, next); // step 12\n      } else {\n        cookie.creation = cookie.lastAccessed = now;\n        store.putCookie(cookie, next); // step 12\n      }\n    }\n\n    store.findCookie(cookie.domain, cookie.path, cookie.key, withCookie);\n  }\n\n  // RFC6365 S5.4\n  getCookies(url, options, cb) {\n    const context = getCookieContext(url);\n    if (typeof options === \"function\") {\n      cb = options;\n      options = {};\n    }\n\n    const host = canonicalDomain(context.hostname);\n    const path = context.pathname || \"/\";\n\n    let secure = options.secure;\n    if (\n      secure == null &&\n      context.protocol &&\n      (context.protocol == \"https:\" || context.protocol == \"wss:\")\n    ) {\n      secure = true;\n    }\n\n    let sameSiteLevel = 0;\n    if (options.sameSiteContext) {\n      const sameSiteContext = checkSameSiteContext(options.sameSiteContext);\n      sameSiteLevel = Cookie.sameSiteLevel[sameSiteContext];\n      if (!sameSiteLevel) {\n        return cb(new Error(SAME_SITE_CONTEXT_VAL_ERR));\n      }\n    }\n\n    let http = options.http;\n    if (http == null) {\n      http = true;\n    }\n\n    const now = options.now || Date.now();\n    const expireCheck = options.expire !== false;\n    const allPaths = !!options.allPaths;\n    const store = this.store;\n\n    function matchingCookie(c) {\n      // \"Either:\n      //   The cookie's host-only-flag is true and the canonicalized\n      //   request-host is identical to the cookie's domain.\n      // Or:\n      //   The cookie's host-only-flag is false and the canonicalized\n      //   request-host domain-matches the cookie's domain.\"\n      if (c.hostOnly) {\n        if (c.domain != host) {\n          return false;\n        }\n      } else {\n        if (!domainMatch(host, c.domain, false)) {\n          return false;\n        }\n      }\n\n      // \"The request-uri's path path-matches the cookie's path.\"\n      if (!allPaths && !pathMatch(path, c.path)) {\n        return false;\n      }\n\n      // \"If the cookie's secure-only-flag is true, then the request-uri's\n      // scheme must denote a \"secure\" protocol\"\n      if (c.secure && !secure) {\n        return false;\n      }\n\n      // \"If the cookie's http-only-flag is true, then exclude the cookie if the\n      // cookie-string is being generated for a \"non-HTTP\" API\"\n      if (c.httpOnly && !http) {\n        return false;\n      }\n\n      // RFC6265bis-02 S5.3.7\n      if (sameSiteLevel) {\n        const cookieLevel = Cookie.sameSiteLevel[c.sameSite || \"none\"];\n        if (cookieLevel > sameSiteLevel) {\n          // only allow cookies at or below the request level\n          return false;\n        }\n      }\n\n      // deferred from S5.3\n      // non-RFC: allow retention of expired cookies by choice\n      if (expireCheck && c.expiryTime() <= now) {\n        store.removeCookie(c.domain, c.path, c.key, () => {}); // result ignored\n        return false;\n      }\n\n      return true;\n    }\n\n    store.findCookies(\n      host,\n      allPaths ? null : path,\n      this.allowSpecialUseDomain,\n      (err, cookies) => {\n        if (err) {\n          return cb(err);\n        }\n\n        cookies = cookies.filter(matchingCookie);\n\n        // sorting of S5.4 part 2\n        if (options.sort !== false) {\n          cookies = cookies.sort(cookieCompare);\n        }\n\n        // S5.4 part 3\n        const now = new Date();\n        for (const cookie of cookies) {\n          cookie.lastAccessed = now;\n        }\n        // TODO persist lastAccessed\n\n        cb(null, cookies);\n      }\n    );\n  }\n\n  getCookieString(...args) {\n    const cb = args.pop();\n    const next = function(err, cookies) {\n      if (err) {\n        cb(err);\n      } else {\n        cb(\n          null,\n          cookies\n            .sort(cookieCompare)\n            .map(c => c.cookieString())\n            .join(\"; \")\n        );\n      }\n    };\n    args.push(next);\n    this.getCookies.apply(this, args);\n  }\n\n  getSetCookieStrings(...args) {\n    const cb = args.pop();\n    const next = function(err, cookies) {\n      if (err) {\n        cb(err);\n      } else {\n        cb(\n          null,\n          cookies.map(c => {\n            return c.toString();\n          })\n        );\n      }\n    };\n    args.push(next);\n    this.getCookies.apply(this, args);\n  }\n\n  serialize(cb) {\n    let type = this.store.constructor.name;\n    if (type === \"Object\") {\n      type = null;\n    }\n\n    // update README.md \"Serialization Format\" if you change this, please!\n    const serialized = {\n      // The version of tough-cookie that serialized this jar. Generally a good\n      // practice since future versions can make data import decisions based on\n      // known past behavior. When/if this matters, use `semver`.\n      version: `tough-cookie@${VERSION}`,\n\n      // add the store type, to make humans happy:\n      storeType: type,\n\n      // CookieJar configuration:\n      rejectPublicSuffixes: !!this.rejectPublicSuffixes,\n\n      // this gets filled from getAllCookies:\n      cookies: []\n    };\n\n    if (\n      !(\n        this.store.getAllCookies &&\n        typeof this.store.getAllCookies === \"function\"\n      )\n    ) {\n      return cb(\n        new Error(\n          \"store does not support getAllCookies and cannot be serialized\"\n        )\n      );\n    }\n\n    this.store.getAllCookies((err, cookies) => {\n      if (err) {\n        return cb(err);\n      }\n\n      serialized.cookies = cookies.map(cookie => {\n        // convert to serialized 'raw' cookies\n        cookie = cookie instanceof Cookie ? cookie.toJSON() : cookie;\n\n        // Remove the index so new ones get assigned during deserialization\n        delete cookie.creationIndex;\n\n        return cookie;\n      });\n\n      return cb(null, serialized);\n    });\n  }\n\n  toJSON() {\n    return this.serializeSync();\n  }\n\n  // use the class method CookieJar.deserialize instead of calling this directly\n  _importCookies(serialized, cb) {\n    let cookies = serialized.cookies;\n    if (!cookies || !Array.isArray(cookies)) {\n      return cb(new Error(\"serialized jar has no cookies array\"));\n    }\n    cookies = cookies.slice(); // do not modify the original\n\n    const putNext = err => {\n      if (err) {\n        return cb(err);\n      }\n\n      if (!cookies.length) {\n        return cb(err, this);\n      }\n\n      let cookie;\n      try {\n        cookie = fromJSON(cookies.shift());\n      } catch (e) {\n        return cb(e);\n      }\n\n      if (cookie === null) {\n        return putNext(null); // skip this cookie\n      }\n\n      this.store.putCookie(cookie, putNext);\n    };\n\n    putNext();\n  }\n\n  clone(newStore, cb) {\n    if (arguments.length === 1) {\n      cb = newStore;\n      newStore = null;\n    }\n\n    this.serialize((err, serialized) => {\n      if (err) {\n        return cb(err);\n      }\n      CookieJar.deserialize(serialized, newStore, cb);\n    });\n  }\n\n  cloneSync(newStore) {\n    if (arguments.length === 0) {\n      return this._cloneSync();\n    }\n    if (!newStore.synchronous) {\n      throw new Error(\n        \"CookieJar clone destination store is not synchronous; use async API instead.\"\n      );\n    }\n    return this._cloneSync(newStore);\n  }\n\n  removeAllCookies(cb) {\n    const store = this.store;\n\n    // Check that the store implements its own removeAllCookies(). The default\n    // implementation in Store will immediately call the callback with a \"not\n    // implemented\" Error.\n    if (\n      typeof store.removeAllCookies === \"function\" &&\n      store.removeAllCookies !== Store.prototype.removeAllCookies\n    ) {\n      return store.removeAllCookies(cb);\n    }\n\n    store.getAllCookies((err, cookies) => {\n      if (err) {\n        return cb(err);\n      }\n\n      if (cookies.length === 0) {\n        return cb(null);\n      }\n\n      let completedCount = 0;\n      const removeErrors = [];\n\n      function removeCookieCb(removeErr) {\n        if (removeErr) {\n          removeErrors.push(removeErr);\n        }\n\n        completedCount++;\n\n        if (completedCount === cookies.length) {\n          return cb(removeErrors.length ? removeErrors[0] : null);\n        }\n      }\n\n      cookies.forEach(cookie => {\n        store.removeCookie(\n          cookie.domain,\n          cookie.path,\n          cookie.key,\n          removeCookieCb\n        );\n      });\n    });\n  }\n\n  static deserialize(strOrObj, store, cb) {\n    if (arguments.length !== 3) {\n      // store is optional\n      cb = store;\n      store = null;\n    }\n\n    let serialized;\n    if (typeof strOrObj === \"string\") {\n      serialized = jsonParse(strOrObj);\n      if (serialized instanceof Error) {\n        return cb(serialized);\n      }\n    } else {\n      serialized = strOrObj;\n    }\n\n    const jar = new CookieJar(store, serialized.rejectPublicSuffixes);\n    jar._importCookies(serialized, err => {\n      if (err) {\n        return cb(err);\n      }\n      cb(null, jar);\n    });\n  }\n\n  static deserializeSync(strOrObj, store) {\n    const serialized =\n      typeof strOrObj === \"string\" ? JSON.parse(strOrObj) : strOrObj;\n    const jar = new CookieJar(store, serialized.rejectPublicSuffixes);\n\n    // catch this mistake early:\n    if (!jar.store.synchronous) {\n      throw new Error(\n        \"CookieJar store is not synchronous; use async API instead.\"\n      );\n    }\n\n    jar._importCookiesSync(serialized);\n    return jar;\n  }\n}\nCookieJar.fromJSON = CookieJar.deserializeSync;\n\n[\n  \"_importCookies\",\n  \"clone\",\n  \"getCookies\",\n  \"getCookieString\",\n  \"getSetCookieStrings\",\n  \"removeAllCookies\",\n  \"serialize\",\n  \"setCookie\"\n].forEach(name => {\n  CookieJar.prototype[name] = fromCallback(CookieJar.prototype[name]);\n});\nCookieJar.deserialize = fromCallback(CookieJar.deserialize);\n\n// Use a closure to provide a true imperative API for synchronous stores.\nfunction syncWrap(method) {\n  return function(...args) {\n    if (!this.store.synchronous) {\n      throw new Error(\n        \"CookieJar store is not synchronous; use async API instead.\"\n      );\n    }\n\n    let syncErr, syncResult;\n    this[method](...args, (err, result) => {\n      syncErr = err;\n      syncResult = result;\n    });\n\n    if (syncErr) {\n      throw syncErr;\n    }\n    return syncResult;\n  };\n}\n\nexports.version = VERSION;\nexports.CookieJar = CookieJar;\nexports.Cookie = Cookie;\nexports.Store = Store;\nexports.MemoryCookieStore = MemoryCookieStore;\nexports.parseDate = parseDate;\nexports.formatDate = formatDate;\nexports.parse = parse;\nexports.fromJSON = fromJSON;\nexports.domainMatch = domainMatch;\nexports.defaultPath = defaultPath;\nexports.pathMatch = pathMatch;\nexports.getPublicSuffix = pubsuffix.getPublicSuffix;\nexports.cookieCompare = cookieCompare;\nexports.permuteDomain = require(\"./permuteDomain\").permuteDomain;\nexports.permutePath = permutePath;\nexports.canonicalDomain = canonicalDomain;\nexports.PrefixSecurityEnum = PrefixSecurityEnum;\n", "\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n", "\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n", "\"use strict\";\n\nvar punycode = require(\"punycode\");\nvar mappingTable = require(\"./lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n", "\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n", "\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n", "\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stream = _interopDefault(require('stream'));\nvar http = _interopDefault(require('http'));\nvar Url = _interopDefault(require('url'));\nvar whatwgUrl = _interopDefault(require('whatwg-url'));\nvar https = _interopDefault(require('https'));\nvar zlib = _interopDefault(require('zlib'));\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nmodule.exports = exports = fetch;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\n", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __createBinding = function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result[\"default\"] = mod;\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, privateMap) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to get private field on non-instance\");\r\n        }\r\n        return privateMap.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, privateMap, value) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to set private field on non-instance\");\r\n        }\r\n        privateMap.set(receiver, value);\r\n        return value;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n});\r\n", "/// <reference path=\"./shims-public.d.ts\" />\ntype AbortEventListener = (this: AbortSignalLike, ev?: any) => any;\n\nconst listenersMap = new WeakMap<AbortSignal, AbortEventListener[]>();\nconst abortedMap = new WeakMap<AbortSignal, boolean>();\n\n/**\n * Allows the request to be aborted upon firing of the \"abort\" event.\n * Compatible with the browser built-in AbortSignal and common polyfills.\n */\nexport interface AbortSignalLike {\n  /**\n   * Indicates if the signal has already been aborted.\n   */\n  readonly aborted: boolean;\n  /**\n   * Add new \"abort\" event listener, only support \"abort\" event.\n   */\n  addEventListener(\n    type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any,\n    options?: any\n  ): void;\n  /**\n   * Remove \"abort\" event listener, only support \"abort\" event.\n   */\n  removeEventListener(\n    type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any,\n    options?: any\n  ): void;\n}\n\n/**\n * An aborter instance implements AbortSignal interface, can abort HTTP requests.\n *\n * - Call AbortSignal.none to create a new AbortSignal instance that cannot be cancelled.\n * Use `AbortSignal.none` when you are required to pass a cancellation token but the operation\n * cannot or will not ever be cancelled.\n *\n * @example\n * // Abort without timeout\n * await doAsyncWork(AbortSignal.none);\n *\n * @export\n * @class AbortSignal\n * @implements {AbortSignalLike}\n */\nexport class AbortSignal implements AbortSignalLike {\n  constructor() {\n    listenersMap.set(this, []);\n    abortedMap.set(this, false);\n  }\n\n  /**\n   * Status of whether aborted or not.\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberof AbortSignal\n   */\n  public get aborted(): boolean {\n    if (!abortedMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    return abortedMap.get(this)!;\n  }\n\n  /**\n   * Creates a new AbortSignal instance that will never be aborted.\n   *\n   * @readonly\n   * @static\n   * @type {AbortSignal}\n   * @memberof AbortSignal\n   */\n  public static get none(): AbortSignal {\n    return new AbortSignal();\n  }\n\n  /**\n   * onabort event listener.\n   *\n   * @memberof AbortSignal\n   */\n  public onabort: ((ev?: Event) => any) | null = null;\n\n  /**\n   * Added new \"abort\" event listener, only support \"abort\" event.\n   *\n   * @param {\"abort\"} _type Only support \"abort\" event\n   * @param {(this: AbortSignalLike, ev: any) => any} listener\n   * @memberof AbortSignal\n   */\n  public addEventListener(\n    // tslint:disable-next-line:variable-name\n    _type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any\n  ): void {\n    if (!listenersMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    const listeners = listenersMap.get(this)!;\n    listeners.push(listener);\n  }\n\n  /**\n   * Remove \"abort\" event listener, only support \"abort\" event.\n   *\n   * @param {\"abort\"} _type Only support \"abort\" event\n   * @param {(this: AbortSignalLike, ev: any) => any} listener\n   * @memberof AbortSignal\n   */\n  public removeEventListener(\n    // tslint:disable-next-line:variable-name\n    _type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any\n  ): void {\n    if (!listenersMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    const listeners = listenersMap.get(this)!;\n\n    const index = listeners.indexOf(listener);\n    if (index > -1) {\n      listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Dispatches a synthetic event to the AbortSignal.\n   */\n  dispatchEvent(_event: Event): boolean {\n    throw new Error(\n      \"This is a stub dispatchEvent implementation that should not be used.  It only exists for type-checking purposes.\"\n    );\n  }\n}\n\n/**\n * Helper to trigger an abort event immediately, the onabort and all abort event listeners will be triggered.\n * Will try to trigger abort event for all linked AbortSignal nodes.\n *\n * - If there is a timeout, the timer will be cancelled.\n * - If aborted is true, nothing will happen.\n *\n * @returns\n * @internal\n */\nexport function abortSignal(signal: AbortSignal) {\n  if (signal.aborted) {\n    return;\n  }\n\n  if (signal.onabort) {\n    signal.onabort.call(signal);\n  }\n\n  const listeners = listenersMap.get(signal)!;\n  if (listeners) {\n    listeners.forEach((listener) => {\n      listener.call(signal, { type: \"abort\" });\n    });\n  }\n\n  abortedMap.set(signal, true);\n}\n", "import { AbortSignal, abortSignal, AbortSignalLike } from \"./AbortSignal\";\n\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n */\nexport class AbortError extends Error {\n  constructor(message?: string) {\n    super(message);\n    this.name = \"AbortError\";\n  }\n}\n\n/**\n * An AbortController provides an AbortSignal and the associated controls to signal\n * that an asynchronous operation should be aborted.\n *\n * @example\n * // Abort an operation when another event fires\n * const controller = new AbortController();\n * const signal = controller.signal;\n * doAsyncWork(signal);\n * button.addEventListener('click', () => controller.abort());\n *\n * @example\n * // Share aborter cross multiple operations in 30s\n * // Upload the same data to 2 different data centers at the same time,\n * // abort another when any of them is finished\n * const controller = AbortController.withTimeout(30 * 1000);\n * doAsyncWork(controller.signal).then(controller.abort);\n * doAsyncWork(controller.signal).then(controller.abort);\n *\n * @example\n * // Cascaded aborting\n * // All operations can't take more than 30 seconds\n * const aborter = Aborter.timeout(30 * 1000);\n *\n * // Following 2 operations can't take more than 25 seconds\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n *\n * @export\n * @class AbortController\n * @implements {AbortSignalLike}\n */\nexport class AbortController {\n  private _signal: AbortSignal;\n\n  /**\n   * @param {AbortSignalLike[]} [parentSignals] The AbortSignals that will signal aborted on the AbortSignal associated with this controller.\n   * @constructor\n   */\n  constructor(parentSignals?: AbortSignalLike[]);\n  /**\n   * @param {...AbortSignalLike} parentSignals The AbortSignals that will signal aborted on the AbortSignal associated with this controller.\n   * @constructor\n   */\n  constructor(...parentSignals: AbortSignalLike[]);\n  constructor(parentSignals?: any) {\n    this._signal = new AbortSignal();\n\n    if (!parentSignals) {\n      return;\n    }\n    // coerce parentSignals into an array\n    if (!Array.isArray(parentSignals)) {\n      parentSignals = arguments;\n    }\n    for (const parentSignal of parentSignals) {\n      // if the parent signal has already had abort() called,\n      // then call abort on this signal as well.\n      if (parentSignal.aborted) {\n        this.abort();\n      } else {\n        // when the parent signal aborts, this signal should as well.\n        parentSignal.addEventListener(\"abort\", () => {\n          this.abort();\n        });\n      }\n    }\n  }\n\n  /**\n   * The AbortSignal associated with this controller that will signal aborted\n   * when the abort method is called on this controller.\n   *\n   * @readonly\n   * @type {AbortSignal}\n   * @memberof AbortController\n   */\n  public get signal() {\n    return this._signal;\n  }\n\n  /**\n   * Signal that any operations passed this controller's associated abort signal\n   * to cancel any remaining work and throw an `AbortError`.\n   *\n   * @memberof AbortController\n   */\n  abort() {\n    abortSignal(this._signal);\n  }\n\n  /**\n   * Creates a new AbortSignal instance that will abort after the provided ms.\n   *\n   * @static\n   * @params {number} ms Elapsed time in milliseconds to trigger an abort.\n   * @returns {AbortSignal}\n   */\n  public static timeout(ms: number): AbortSignal {\n    const signal = new AbortSignal();\n    const timer = setTimeout(abortSignal, ms, signal);\n    // Prevent the active Timer from keeping the Node.js event loop active.\n    if (typeof timer.unref === \"function\") {\n      timer.unref();\n    }\n    return signal;\n  }\n}\n", "var Stream = require('stream').Stream;\nvar util = require('util');\n\nmodule.exports = DelayedStream;\nfunction DelayedStream() {\n  this.source = null;\n  this.dataSize = 0;\n  this.maxDataSize = 1024 * 1024;\n  this.pauseStream = true;\n\n  this._maxDataSizeExceeded = false;\n  this._released = false;\n  this._bufferedEvents = [];\n}\nutil.inherits(DelayedStream, Stream);\n\nDelayedStream.create = function(source, options) {\n  var delayedStream = new this();\n\n  options = options || {};\n  for (var option in options) {\n    delayedStream[option] = options[option];\n  }\n\n  delayedStream.source = source;\n\n  var realEmit = source.emit;\n  source.emit = function() {\n    delayedStream._handleEmit(arguments);\n    return realEmit.apply(source, arguments);\n  };\n\n  source.on('error', function() {});\n  if (delayedStream.pauseStream) {\n    source.pause();\n  }\n\n  return delayedStream;\n};\n\nObject.defineProperty(DelayedStream.prototype, 'readable', {\n  configurable: true,\n  enumerable: true,\n  get: function() {\n    return this.source.readable;\n  }\n});\n\nDelayedStream.prototype.setEncoding = function() {\n  return this.source.setEncoding.apply(this.source, arguments);\n};\n\nDelayedStream.prototype.resume = function() {\n  if (!this._released) {\n    this.release();\n  }\n\n  this.source.resume();\n};\n\nDelayedStream.prototype.pause = function() {\n  this.source.pause();\n};\n\nDelayedStream.prototype.release = function() {\n  this._released = true;\n\n  this._bufferedEvents.forEach(function(args) {\n    this.emit.apply(this, args);\n  }.bind(this));\n  this._bufferedEvents = [];\n};\n\nDelayedStream.prototype.pipe = function() {\n  var r = Stream.prototype.pipe.apply(this, arguments);\n  this.resume();\n  return r;\n};\n\nDelayedStream.prototype._handleEmit = function(args) {\n  if (this._released) {\n    this.emit.apply(this, args);\n    return;\n  }\n\n  if (args[0] === 'data') {\n    this.dataSize += args[1].length;\n    this._checkIfMaxDataSizeExceeded();\n  }\n\n  this._bufferedEvents.push(args);\n};\n\nDelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {\n  if (this._maxDataSizeExceeded) {\n    return;\n  }\n\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  this._maxDataSizeExceeded = true;\n  var message =\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.'\n  this.emit('error', new Error(message));\n};\n", "var util = require('util');\nvar Stream = require('stream').Stream;\nvar DelayedStream = require('delayed-stream');\n\nmodule.exports = CombinedStream;\nfunction CombinedStream() {\n  this.writable = false;\n  this.readable = true;\n  this.dataSize = 0;\n  this.maxDataSize = 2 * 1024 * 1024;\n  this.pauseStreams = true;\n\n  this._released = false;\n  this._streams = [];\n  this._currentStream = null;\n  this._insideLoop = false;\n  this._pendingNext = false;\n}\nutil.inherits(CombinedStream, Stream);\n\nCombinedStream.create = function(options) {\n  var combinedStream = new this();\n\n  options = options || {};\n  for (var option in options) {\n    combinedStream[option] = options[option];\n  }\n\n  return combinedStream;\n};\n\nCombinedStream.isStreamLike = function(stream) {\n  return (typeof stream !== 'function')\n    && (typeof stream !== 'string')\n    && (typeof stream !== 'boolean')\n    && (typeof stream !== 'number')\n    && (!Buffer.isBuffer(stream));\n};\n\nCombinedStream.prototype.append = function(stream) {\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n\n  if (isStreamLike) {\n    if (!(stream instanceof DelayedStream)) {\n      var newStream = DelayedStream.create(stream, {\n        maxDataSize: Infinity,\n        pauseStream: this.pauseStreams,\n      });\n      stream.on('data', this._checkDataSize.bind(this));\n      stream = newStream;\n    }\n\n    this._handleErrors(stream);\n\n    if (this.pauseStreams) {\n      stream.pause();\n    }\n  }\n\n  this._streams.push(stream);\n  return this;\n};\n\nCombinedStream.prototype.pipe = function(dest, options) {\n  Stream.prototype.pipe.call(this, dest, options);\n  this.resume();\n  return dest;\n};\n\nCombinedStream.prototype._getNext = function() {\n  this._currentStream = null;\n\n  if (this._insideLoop) {\n    this._pendingNext = true;\n    return; // defer call\n  }\n\n  this._insideLoop = true;\n  try {\n    do {\n      this._pendingNext = false;\n      this._realGetNext();\n    } while (this._pendingNext);\n  } finally {\n    this._insideLoop = false;\n  }\n};\n\nCombinedStream.prototype._realGetNext = function() {\n  var stream = this._streams.shift();\n\n\n  if (typeof stream == 'undefined') {\n    this.end();\n    return;\n  }\n\n  if (typeof stream !== 'function') {\n    this._pipeNext(stream);\n    return;\n  }\n\n  var getStream = stream;\n  getStream(function(stream) {\n    var isStreamLike = CombinedStream.isStreamLike(stream);\n    if (isStreamLike) {\n      stream.on('data', this._checkDataSize.bind(this));\n      this._handleErrors(stream);\n    }\n\n    this._pipeNext(stream);\n  }.bind(this));\n};\n\nCombinedStream.prototype._pipeNext = function(stream) {\n  this._currentStream = stream;\n\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n  if (isStreamLike) {\n    stream.on('end', this._getNext.bind(this));\n    stream.pipe(this, {end: false});\n    return;\n  }\n\n  var value = stream;\n  this.write(value);\n  this._getNext();\n};\n\nCombinedStream.prototype._handleErrors = function(stream) {\n  var self = this;\n  stream.on('error', function(err) {\n    self._emitError(err);\n  });\n};\n\nCombinedStream.prototype.write = function(data) {\n  this.emit('data', data);\n};\n\nCombinedStream.prototype.pause = function() {\n  if (!this.pauseStreams) {\n    return;\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.pause) == 'function') this._currentStream.pause();\n  this.emit('pause');\n};\n\nCombinedStream.prototype.resume = function() {\n  if (!this._released) {\n    this._released = true;\n    this.writable = true;\n    this._getNext();\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.resume) == 'function') this._currentStream.resume();\n  this.emit('resume');\n};\n\nCombinedStream.prototype.end = function() {\n  this._reset();\n  this.emit('end');\n};\n\nCombinedStream.prototype.destroy = function() {\n  this._reset();\n  this.emit('close');\n};\n\nCombinedStream.prototype._reset = function() {\n  this.writable = false;\n  this._streams = [];\n  this._currentStream = null;\n};\n\nCombinedStream.prototype._checkDataSize = function() {\n  this._updateDataSize();\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  var message =\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.';\n  this._emitError(new Error(message));\n};\n\nCombinedStream.prototype._updateDataSize = function() {\n  this.dataSize = 0;\n\n  var self = this;\n  this._streams.forEach(function(stream) {\n    if (!stream.dataSize) {\n      return;\n    }\n\n    self.dataSize += stream.dataSize;\n  });\n\n  if (this._currentStream && this._currentStream.dataSize) {\n    this.dataSize += this._currentStream.dataSize;\n  }\n};\n\nCombinedStream.prototype._emitError = function(err) {\n  this._reset();\n  this.emit('error', err);\n};\n", "/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n", "/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n", "module.exports = defer;\n\n/**\n * Runs provided function on next iteration of the event loop\n *\n * @param {function} fn - function to run\n */\nfunction defer(fn)\n{\n  var nextTick = typeof setImmediate == 'function'\n    ? setImmediate\n    : (\n      typeof process == 'object' && typeof process.nextTick == 'function'\n      ? process.nextTick\n      : null\n    );\n\n  if (nextTick)\n  {\n    nextTick(fn);\n  }\n  else\n  {\n    setTimeout(fn, 0);\n  }\n}\n", "var defer = require('./defer.js');\n\n// API\nmodule.exports = async;\n\n/**\n * Runs provided callback asynchronously\n * even if callback itself is not\n *\n * @param   {function} callback - callback to invoke\n * @returns {function} - augmented callback\n */\nfunction async(callback)\n{\n  var isAsync = false;\n\n  // check if async happened\n  defer(function() { isAsync = true; });\n\n  return function async_callback(err, result)\n  {\n    if (isAsync)\n    {\n      callback(err, result);\n    }\n    else\n    {\n      defer(function nextTick_callback()\n      {\n        callback(err, result);\n      });\n    }\n  };\n}\n", "// API\nmodule.exports = abort;\n\n/**\n * Aborts leftover active jobs\n *\n * @param {object} state - current state object\n */\nfunction abort(state)\n{\n  Object.keys(state.jobs).forEach(clean.bind(state));\n\n  // reset leftover jobs\n  state.jobs = {};\n}\n\n/**\n * Cleans up leftover job by invoking abort function for the provided job id\n *\n * @this  state\n * @param {string|number} key - job id to abort\n */\nfunction clean(key)\n{\n  if (typeof this.jobs[key] == 'function')\n  {\n    this.jobs[key]();\n  }\n}\n", "var async = require('./async.js')\n  , abort = require('./abort.js')\n  ;\n\n// API\nmodule.exports = iterate;\n\n/**\n * Iterates over each job object\n *\n * @param {array|object} list - array or object (named list) to iterate over\n * @param {function} iterator - iterator to run\n * @param {object} state - current job status\n * @param {function} callback - invoked when all elements processed\n */\nfunction iterate(list, iterator, state, callback)\n{\n  // store current index\n  var key = state['keyedList'] ? state['keyedList'][state.index] : state.index;\n\n  state.jobs[key] = runJob(iterator, key, list[key], function(error, output)\n  {\n    // don't repeat yourself\n    // skip secondary callbacks\n    if (!(key in state.jobs))\n    {\n      return;\n    }\n\n    // clean up jobs\n    delete state.jobs[key];\n\n    if (error)\n    {\n      // don't process rest of the results\n      // stop still active jobs\n      // and reset the list\n      abort(state);\n    }\n    else\n    {\n      state.results[key] = output;\n    }\n\n    // return salvaged results\n    callback(error, state.results);\n  });\n}\n\n/**\n * Runs iterator over provided job element\n *\n * @param   {function} iterator - iterator to invoke\n * @param   {string|number} key - key/index of the element in the list of jobs\n * @param   {mixed} item - job description\n * @param   {function} callback - invoked after iterator is done with the job\n * @returns {function|mixed} - job abort function or something else\n */\nfunction runJob(iterator, key, item, callback)\n{\n  var aborter;\n\n  // allow shortcut if iterator expects only two arguments\n  if (iterator.length == 2)\n  {\n    aborter = iterator(item, async(callback));\n  }\n  // otherwise go with full three arguments\n  else\n  {\n    aborter = iterator(item, key, async(callback));\n  }\n\n  return aborter;\n}\n", "// API\nmodule.exports = state;\n\n/**\n * Creates initial state object\n * for iteration over list\n *\n * @param   {array|object} list - list to iterate over\n * @param   {function|null} sortMethod - function to use for keys sort,\n *                                     or `null` to keep them as is\n * @returns {object} - initial state object\n */\nfunction state(list, sortMethod)\n{\n  var isNamedList = !Array.isArray(list)\n    , initState =\n    {\n      index    : 0,\n      keyedList: isNamedList || sortMethod ? Object.keys(list) : null,\n      jobs     : {},\n      results  : isNamedList ? {} : [],\n      size     : isNamedList ? Object.keys(list).length : list.length\n    }\n    ;\n\n  if (sortMethod)\n  {\n    // sort array keys based on it's values\n    // sort object's keys just on own merit\n    initState.keyedList.sort(isNamedList ? sortMethod : function(a, b)\n    {\n      return sortMethod(list[a], list[b]);\n    });\n  }\n\n  return initState;\n}\n", "var abort = require('./abort.js')\n  , async = require('./async.js')\n  ;\n\n// API\nmodule.exports = terminator;\n\n/**\n * Terminates jobs in the attached state context\n *\n * @this  AsyncKitState#\n * @param {function} callback - final callback to invoke after termination\n */\nfunction terminator(callback)\n{\n  if (!Object.keys(this.jobs).length)\n  {\n    return;\n  }\n\n  // fast forward iteration index\n  this.index = this.size;\n\n  // abort jobs\n  abort(this);\n\n  // send back results we have so far\n  async(callback)(null, this.results);\n}\n", "var iterate    = require('./lib/iterate.js')\n  , initState  = require('./lib/state.js')\n  , terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = parallel;\n\n/**\n * Runs iterator over provided array elements in parallel\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction parallel(list, iterator, callback)\n{\n  var state = initState(list);\n\n  while (state.index < (state['keyedList'] || list).length)\n  {\n    iterate(list, iterator, state, function(error, result)\n    {\n      if (error)\n      {\n        callback(error, result);\n        return;\n      }\n\n      // looks like it's the last one\n      if (Object.keys(state.jobs).length === 0)\n      {\n        callback(null, state.results);\n        return;\n      }\n    });\n\n    state.index++;\n  }\n\n  return terminator.bind(state, callback);\n}\n", "var iterate    = require('./lib/iterate.js')\n  , initState  = require('./lib/state.js')\n  , terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = serialOrdered;\n// sorting helpers\nmodule.exports.ascending  = ascending;\nmodule.exports.descending = descending;\n\n/**\n * Runs iterator over provided sorted array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} sortMethod - custom sort function\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serialOrdered(list, iterator, sortMethod, callback)\n{\n  var state = initState(list, sortMethod);\n\n  iterate(list, iterator, state, function iteratorHandler(error, result)\n  {\n    if (error)\n    {\n      callback(error, result);\n      return;\n    }\n\n    state.index++;\n\n    // are we there yet?\n    if (state.index < (state['keyedList'] || list).length)\n    {\n      iterate(list, iterator, state, iteratorHandler);\n      return;\n    }\n\n    // done here\n    callback(null, state.results);\n  });\n\n  return terminator.bind(state, callback);\n}\n\n/*\n * -- Sort methods\n */\n\n/**\n * sort helper to sort array elements in ascending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction ascending(a, b)\n{\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/**\n * sort helper to sort array elements in descending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction descending(a, b)\n{\n  return -1 * ascending(a, b);\n}\n", "var serialOrdered = require('./serialOrdered.js');\n\n// Public API\nmodule.exports = serial;\n\n/**\n * Runs iterator over provided array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serial(list, iterator, callback)\n{\n  return serialOrdered(list, iterator, null, callback);\n}\n", "module.exports =\n{\n  parallel      : require('./parallel.js'),\n  serial        : require('./serial.js'),\n  serialOrdered : require('./serialOrdered.js')\n};\n", "// populates missing values\nmodule.exports = function(dst, src) {\n\n  Object.keys(src).forEach(function(prop)\n  {\n    dst[prop] = dst[prop] || src[prop];\n  });\n\n  return dst;\n};\n", "var CombinedStream = require('combined-stream');\nvar util = require('util');\nvar path = require('path');\nvar http = require('http');\nvar https = require('https');\nvar parseUrl = require('url').parse;\nvar fs = require('fs');\nvar mime = require('mime-types');\nvar asynckit = require('asynckit');\nvar populate = require('./populate.js');\n\n// Public API\nmodule.exports = FormData;\n\n// make it a Stream\nutil.inherits(FormData, CombinedStream);\n\n/**\n * Create readable \"multipart/form-data\" streams.\n * Can be used to submit forms\n * and file uploads to other web applications.\n *\n * @constructor\n * @param {Object} options - Properties to be added/overriden for FormData and CombinedStream\n */\nfunction FormData(options) {\n  if (!(this instanceof FormData)) {\n    return new FormData(options);\n  }\n\n  this._overheadLength = 0;\n  this._valueLength = 0;\n  this._valuesToMeasure = [];\n\n  CombinedStream.call(this);\n\n  options = options || {};\n  for (var option in options) {\n    this[option] = options[option];\n  }\n}\n\nFormData.LINE_BREAK = '\\r\\n';\nFormData.DEFAULT_CONTENT_TYPE = 'application/octet-stream';\n\nFormData.prototype.append = function(field, value, options) {\n\n  options = options || {};\n\n  // allow filename as single option\n  if (typeof options == 'string') {\n    options = {filename: options};\n  }\n\n  var append = CombinedStream.prototype.append.bind(this);\n\n  // all that streamy business can't handle numbers\n  if (typeof value == 'number') {\n    value = '' + value;\n  }\n\n  // https://github.com/felixge/node-form-data/issues/38\n  if (util.isArray(value)) {\n    // Please convert your array into string\n    // the way web server expects it\n    this._error(new Error('Arrays are not supported.'));\n    return;\n  }\n\n  var header = this._multiPartHeader(field, value, options);\n  var footer = this._multiPartFooter();\n\n  append(header);\n  append(value);\n  append(footer);\n\n  // pass along options.knownLength\n  this._trackLength(header, value, options);\n};\n\nFormData.prototype._trackLength = function(header, value, options) {\n  var valueLength = 0;\n\n  // used w/ getLengthSync(), when length is known.\n  // e.g. for streaming directly from a remote server,\n  // w/ a known file a size, and not wanting to wait for\n  // incoming file to finish to get its size.\n  if (options.knownLength != null) {\n    valueLength += +options.knownLength;\n  } else if (Buffer.isBuffer(value)) {\n    valueLength = value.length;\n  } else if (typeof value === 'string') {\n    valueLength = Buffer.byteLength(value);\n  }\n\n  this._valueLength += valueLength;\n\n  // @check why add CRLF? does this account for custom/multiple CRLFs?\n  this._overheadLength +=\n    Buffer.byteLength(header) +\n    FormData.LINE_BREAK.length;\n\n  // empty or either doesn't have path or not an http response\n  if (!value || ( !value.path && !(value.readable && value.hasOwnProperty('httpVersion')) )) {\n    return;\n  }\n\n  // no need to bother with the length\n  if (!options.knownLength) {\n    this._valuesToMeasure.push(value);\n  }\n};\n\nFormData.prototype._lengthRetriever = function(value, callback) {\n\n  if (value.hasOwnProperty('fd')) {\n\n    // take read range into a account\n    // `end` = Infinity \u2013> read file till the end\n    //\n    // TODO: Looks like there is bug in Node fs.createReadStream\n    // it doesn't respect `end` options without `start` options\n    // Fix it when node fixes it.\n    // https://github.com/joyent/node/issues/7819\n    if (value.end != undefined && value.end != Infinity && value.start != undefined) {\n\n      // when end specified\n      // no need to calculate range\n      // inclusive, starts with 0\n      callback(null, value.end + 1 - (value.start ? value.start : 0));\n\n    // not that fast snoopy\n    } else {\n      // still need to fetch file size from fs\n      fs.stat(value.path, function(err, stat) {\n\n        var fileSize;\n\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        // update final size based on the range options\n        fileSize = stat.size - (value.start ? value.start : 0);\n        callback(null, fileSize);\n      });\n    }\n\n  // or http response\n  } else if (value.hasOwnProperty('httpVersion')) {\n    callback(null, +value.headers['content-length']);\n\n  // or request stream http://github.com/mikeal/request\n  } else if (value.hasOwnProperty('httpModule')) {\n    // wait till response come back\n    value.on('response', function(response) {\n      value.pause();\n      callback(null, +response.headers['content-length']);\n    });\n    value.resume();\n\n  // something else\n  } else {\n    callback('Unknown stream');\n  }\n};\n\nFormData.prototype._multiPartHeader = function(field, value, options) {\n  // custom header specified (as string)?\n  // it becomes responsible for boundary\n  // (e.g. to handle extra CRLFs on .NET servers)\n  if (typeof options.header == 'string') {\n    return options.header;\n  }\n\n  var contentDisposition = this._getContentDisposition(value, options);\n  var contentType = this._getContentType(value, options);\n\n  var contents = '';\n  var headers  = {\n    // add custom disposition as third element or keep it two elements if not\n    'Content-Disposition': ['form-data', 'name=\"' + field + '\"'].concat(contentDisposition || []),\n    // if no content type. allow it to be empty array\n    'Content-Type': [].concat(contentType || [])\n  };\n\n  // allow custom headers.\n  if (typeof options.header == 'object') {\n    populate(headers, options.header);\n  }\n\n  var header;\n  for (var prop in headers) {\n    if (!headers.hasOwnProperty(prop)) continue;\n    header = headers[prop];\n\n    // skip nullish headers.\n    if (header == null) {\n      continue;\n    }\n\n    // convert all headers to arrays.\n    if (!Array.isArray(header)) {\n      header = [header];\n    }\n\n    // add non-empty headers.\n    if (header.length) {\n      contents += prop + ': ' + header.join('; ') + FormData.LINE_BREAK;\n    }\n  }\n\n  return '--' + this.getBoundary() + FormData.LINE_BREAK + contents + FormData.LINE_BREAK;\n};\n\nFormData.prototype._getContentDisposition = function(value, options) {\n\n  var filename\n    , contentDisposition\n    ;\n\n  if (typeof options.filepath === 'string') {\n    // custom filepath for relative paths\n    filename = path.normalize(options.filepath).replace(/\\\\/g, '/');\n  } else if (options.filename || value.name || value.path) {\n    // custom filename take precedence\n    // formidable and the browser add a name property\n    // fs- and request- streams have path property\n    filename = path.basename(options.filename || value.name || value.path);\n  } else if (value.readable && value.hasOwnProperty('httpVersion')) {\n    // or try http response\n    filename = path.basename(value.client._httpMessage.path || '');\n  }\n\n  if (filename) {\n    contentDisposition = 'filename=\"' + filename + '\"';\n  }\n\n  return contentDisposition;\n};\n\nFormData.prototype._getContentType = function(value, options) {\n\n  // use custom content-type above all\n  var contentType = options.contentType;\n\n  // or try `name` from formidable, browser\n  if (!contentType && value.name) {\n    contentType = mime.lookup(value.name);\n  }\n\n  // or try `path` from fs-, request- streams\n  if (!contentType && value.path) {\n    contentType = mime.lookup(value.path);\n  }\n\n  // or if it's http-reponse\n  if (!contentType && value.readable && value.hasOwnProperty('httpVersion')) {\n    contentType = value.headers['content-type'];\n  }\n\n  // or guess it from the filepath or filename\n  if (!contentType && (options.filepath || options.filename)) {\n    contentType = mime.lookup(options.filepath || options.filename);\n  }\n\n  // fallback to the default content type if `value` is not simple value\n  if (!contentType && typeof value == 'object') {\n    contentType = FormData.DEFAULT_CONTENT_TYPE;\n  }\n\n  return contentType;\n};\n\nFormData.prototype._multiPartFooter = function() {\n  return function(next) {\n    var footer = FormData.LINE_BREAK;\n\n    var lastPart = (this._streams.length === 0);\n    if (lastPart) {\n      footer += this._lastBoundary();\n    }\n\n    next(footer);\n  }.bind(this);\n};\n\nFormData.prototype._lastBoundary = function() {\n  return '--' + this.getBoundary() + '--' + FormData.LINE_BREAK;\n};\n\nFormData.prototype.getHeaders = function(userHeaders) {\n  var header;\n  var formHeaders = {\n    'content-type': 'multipart/form-data; boundary=' + this.getBoundary()\n  };\n\n  for (header in userHeaders) {\n    if (userHeaders.hasOwnProperty(header)) {\n      formHeaders[header.toLowerCase()] = userHeaders[header];\n    }\n  }\n\n  return formHeaders;\n};\n\nFormData.prototype.getBoundary = function() {\n  if (!this._boundary) {\n    this._generateBoundary();\n  }\n\n  return this._boundary;\n};\n\nFormData.prototype.getBuffer = function() {\n  var dataBuffer = new Buffer.alloc( 0 );\n  var boundary = this.getBoundary();\n\n  // Create the form content. Add Line breaks to the end of data.\n  for (var i = 0, len = this._streams.length; i < len; i++) {\n    if (typeof this._streams[i] !== 'function') {\n\n      // Add content to the buffer.\n      if(Buffer.isBuffer(this._streams[i])) {\n        dataBuffer = Buffer.concat( [dataBuffer, this._streams[i]]);\n      }else {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(this._streams[i])]);\n      }\n\n      // Add break after content.\n      if (typeof this._streams[i] !== 'string' || this._streams[i].substring( 2, boundary.length + 2 ) !== boundary) {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(FormData.LINE_BREAK)] );\n      }\n    }\n  }\n\n  // Add the footer and return the Buffer object.\n  return Buffer.concat( [dataBuffer, Buffer.from(this._lastBoundary())] );\n};\n\nFormData.prototype._generateBoundary = function() {\n  // This generates a 50 character boundary similar to those used by Firefox.\n  // They are optimized for boyer-moore parsing.\n  var boundary = '--------------------------';\n  for (var i = 0; i < 24; i++) {\n    boundary += Math.floor(Math.random() * 10).toString(16);\n  }\n\n  this._boundary = boundary;\n};\n\n// Note: getLengthSync DOESN'T calculate streams length\n// As workaround one can calculate file size manually\n// and add it as knownLength option\nFormData.prototype.getLengthSync = function() {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  // Don't get confused, there are 3 \"internal\" streams for each keyval pair\n  // so it basically checks if there is any value added to the form\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  // https://github.com/form-data/form-data/issues/40\n  if (!this.hasKnownLength()) {\n    // Some async length retrievers are present\n    // therefore synchronous length calculation is false.\n    // Please use getLength(callback) to get proper length\n    this._error(new Error('Cannot calculate proper length in synchronous way.'));\n  }\n\n  return knownLength;\n};\n\n// Public API to check if length of added values is known\n// https://github.com/form-data/form-data/issues/196\n// https://github.com/form-data/form-data/issues/262\nFormData.prototype.hasKnownLength = function() {\n  var hasKnownLength = true;\n\n  if (this._valuesToMeasure.length) {\n    hasKnownLength = false;\n  }\n\n  return hasKnownLength;\n};\n\nFormData.prototype.getLength = function(cb) {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  if (!this._valuesToMeasure.length) {\n    process.nextTick(cb.bind(this, null, knownLength));\n    return;\n  }\n\n  asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {\n    if (err) {\n      cb(err);\n      return;\n    }\n\n    values.forEach(function(length) {\n      knownLength += length;\n    });\n\n    cb(null, knownLength);\n  });\n};\n\nFormData.prototype.submit = function(params, cb) {\n  var request\n    , options\n    , defaults = {method: 'post'}\n    ;\n\n  // parse provided url if it's string\n  // or treat it as options object\n  if (typeof params == 'string') {\n\n    params = parseUrl(params);\n    options = populate({\n      port: params.port,\n      path: params.pathname,\n      host: params.hostname,\n      protocol: params.protocol\n    }, defaults);\n\n  // use custom params\n  } else {\n\n    options = populate(params, defaults);\n    // if no port provided use default one\n    if (!options.port) {\n      options.port = options.protocol == 'https:' ? 443 : 80;\n    }\n  }\n\n  // put that good code in getHeaders to some use\n  options.headers = this.getHeaders(params.headers);\n\n  // https if specified, fallback to http in any other case\n  if (options.protocol == 'https:') {\n    request = https.request(options);\n  } else {\n    request = http.request(options);\n  }\n\n  // get content length and fire away\n  this.getLength(function(err, length) {\n    if (err) {\n      this._error(err);\n      return;\n    }\n\n    // add content length\n    request.setHeader('Content-Length', length);\n\n    this.pipe(request);\n    if (cb) {\n      var onResponse;\n\n      var callback = function (error, responce) {\n        request.removeListener('error', callback);\n        request.removeListener('response', onResponse);\n\n        return cb.call(this, error, responce);\n      };\n\n      onResponse = callback.bind(this, null);\n\n      request.on('error', callback);\n      request.on('response', onResponse);\n    }\n  }.bind(this));\n\n  return request;\n};\n\nFormData.prototype._error = function(err) {\n  if (!this.error) {\n    this.error = err;\n    this.pause();\n    this.emit('error', err);\n  }\n};\n\nFormData.prototype.toString = function () {\n  return '[object FormData]';\n};\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Represents a credential defined by a static API key.\n */\nexport interface KeyCredential {\n  /**\n   * The value of the API key represented as a string\n   */\n  readonly key: string;\n}\n\n/**\n * A static-key-based credential that supports updating\n * the underlying key value.\n */\nexport class AzureKeyCredential implements KeyCredential {\n  private _key: string;\n\n  /**\n   * The value of the key to be used in authentication\n   */\n  public get key(): string {\n    return this._key;\n  }\n\n  /**\n   * Create an instance of an AzureKeyCredential for use\n   * with a service client.\n   *\n   * @param key the initial value of the key to use in authentication\n   */\n  constructor(key: string) {\n    if (!key) {\n      throw new Error(\"key must be a non-empty string\");\n    }\n\n    this._key = key;\n  }\n\n  /**\n   * Change the value of the key.\n   *\n   * Updates will take effect upon the next request after\n   * updating the key value.\n   *\n   * @param newKey the new key value to be used\n   */\n  public update(newKey: string): void {\n    this._key = newKey;\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { SpanOptions } from \"@azure/core-tracing\";\n\n/**\n * Represents a credential capable of providing an authentication token.\n */\nexport interface TokenCredential {\n  /**\n   * Gets the token provided by this credential.\n   *\n   * @param scopes The list of scopes for which the token will have access.\n   * @param options The options used to configure any requests this\n   *                TokenCredential implementation might make.\n   */\n  getToken(scopes: string | string[], options?: GetTokenOptions): Promise<AccessToken | null>;\n}\n\n/**\n * Defines options for TokenCredential.getToken.\n */\nexport interface GetTokenOptions {\n  /**\n   * The signal which can be used to abort requests.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Options used when creating and sending HTTP requests for this operation.\n   */\n  requestOptions?: {\n    /**\n     * The number of milliseconds a request can take before automatically being terminated.\n     */\n    timeout?: number;\n  };\n  /**\n   * Options used when tracing is enabled.\n   */\n  tracingOptions?: {\n    /**\n     * OpenTelemetry SpanOptions used to create a span when tracing is enabled.\n     */\n    spanOptions?: SpanOptions;\n  };\n}\n\n/**\n * Represents an access token with an expiration time.\n */\nexport interface AccessToken {\n  /**\n   * The access token returned by the authentication service.\n   */\n  token: string;\n\n  /**\n   * The access token's expiration timestamp in milliseconds, UNIX epoch time.\n   */\n  expiresOnTimestamp: number;\n}\n\n/**\n * Tests an object to determine whether it implements TokenCredential.\n *\n * @param credential The assumed TokenCredential to be tested.\n */\nexport function isTokenCredential(credential: any): credential is TokenCredential {\n  // Check for an object with a 'getToken' function and possibly with\n  // a 'signRequest' function.  We do this check to make sure that\n  // a ServiceClientCredentials implementor (like TokenClientCredentials\n  // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if\n  // it doesn't actually implement TokenCredential also.\n  return (\n    credential &&\n    typeof credential.getToken === \"function\" &&\n    (credential.signRequest === undefined || credential.getToken.length > 0)\n  );\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport util from \"util\";\nimport { EOL } from \"os\";\n\nexport function log(message: any, ...args: any[]) {\n  process.stderr.write(`${util.format(message, ...args)}${EOL}`);\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { log } from \"./log\";\n\n/**\n * A simple mechanism for enabling logging.\n * Intended to mimic the publicly available `debug` package.\n */\nexport interface Debug {\n  /**\n   * Creates a new logger with the given namespace.\n   */\n  (namespace: string): Debugger;\n  /**\n   * The default log method (defaults to console)\n   */\n  log: (...args: any[]) => void;\n  /**\n   * Enables a particular set of namespaces.\n   * To enable multiple separate them with commas, e.g. \"info,debug\".\n   * Supports wildcards, e.g. \"azure:*\"\n   * Supports skip syntax, e.g. \"azure:*,-azure:storage:*\" will enable\n   * everything under azure except for things under azure:storage.\n   */\n  enable: (namespaces: string) => void;\n  /**\n   * Checks if a particular namespace is enabled.\n   */\n  enabled: (namespace: string) => boolean;\n  /**\n   * Disables all logging, returns what was previously enabled.\n   */\n  disable: () => string;\n}\n\n/**\n * A log function that can be dynamically enabled and redirected.\n */\nexport interface Debugger {\n  /**\n   * Logs the given arguments to the `log` method.\n   */\n  (...args: any[]): void;\n  /**\n   * True if this logger is active and logging.\n   */\n  enabled: boolean;\n  /**\n   * Used to cleanup/remove this logger.\n   */\n  destroy: () => boolean;\n  /**\n   * The current log method. Can be overridden to redirect output.\n   */\n  log: (...args: any[]) => void;\n  /**\n   * The namespace of this logger.\n   */\n  namespace: string;\n  /**\n   * Extends this logger with a child namespace.\n   * Namespaces are separated with a ':' character.\n   */\n  extend: (namespace: string) => Debugger;\n}\n\nconst debugEnvVariable =\n  (typeof process !== \"undefined\" && process.env && process.env.DEBUG) || undefined;\n\nlet enabledString: string | undefined;\nlet enabledNamespaces: RegExp[] = [];\nlet skippedNamespaces: RegExp[] = [];\nconst debuggers: Debugger[] = [];\n\nif (debugEnvVariable) {\n  enable(debugEnvVariable);\n}\n\nfunction enable(namespaces: string): void {\n  enabledString = namespaces;\n  enabledNamespaces = [];\n  skippedNamespaces = [];\n  const wildcard = /\\*/g;\n  const namespaceList = namespaces.split(\",\").map((ns) => ns.trim().replace(wildcard, \".*?\"));\n  for (const ns of namespaceList) {\n    if (ns.startsWith(\"-\")) {\n      skippedNamespaces.push(new RegExp(`^${ns.substr(1)}$`));\n    } else {\n      enabledNamespaces.push(new RegExp(`^${ns}$`));\n    }\n  }\n  for (const instance of debuggers) {\n    instance.enabled = enabled(instance.namespace);\n  }\n}\n\nfunction enabled(namespace: string): boolean {\n  if (namespace.endsWith(\"*\")) {\n    return true;\n  }\n\n  for (const skipped of skippedNamespaces) {\n    if (skipped.test(namespace)) {\n      return false;\n    }\n  }\n  for (const enabled of enabledNamespaces) {\n    if (enabled.test(namespace)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction disable(): string {\n  const result = enabledString || \"\";\n  enable(\"\");\n  return result;\n}\n\nfunction createDebugger(namespace: string): Debugger {\n  function debug(...args: any[]) {\n    if (!newDebugger.enabled) {\n      return;\n    }\n    if (args.length > 0) {\n      args[0] = `${namespace} ${args[0]}`;\n    }\n    newDebugger.log(...args);\n  }\n\n  const newDebugger: Debugger = Object.assign(debug, {\n    enabled: enabled(namespace),\n    destroy,\n    log: debugObj.log,\n    namespace,\n    extend\n  });\n\n  debuggers.push(newDebugger);\n\n  return newDebugger;\n}\n\nfunction destroy(this: Debugger): boolean {\n  const index = debuggers.indexOf(this);\n  if (index >= 0) {\n    debuggers.splice(index, 1);\n    return true;\n  }\n  return false;\n}\n\nfunction extend(this: Debugger, namespace: string): Debugger {\n  const newDebugger = createDebugger(`${this.namespace}:${namespace}`);\n  newDebugger.log = this.log;\n  return newDebugger;\n}\n\nconst debugObj: Debug = Object.assign(\n  (namespace: string): Debugger => {\n    return createDebugger(namespace);\n  },\n  {\n    enable,\n    enabled,\n    disable,\n    log\n  }\n);\n\nexport default debugObj;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport debug, { Debugger } from \"./debug\";\nexport { Debugger } from \"./debug\";\n\nconst registeredLoggers = new Set<AzureDebugger>();\nconst logLevelFromEnv =\n  (typeof process !== \"undefined\" && process.env && process.env.AZURE_LOG_LEVEL) || undefined;\n\nlet azureLogLevel: AzureLogLevel | undefined;\n\n/**\n * The AzureLogger provides a mechanism for overriding where logs are output to.\n * By default, logs are sent to stderr.\n * Override the `log` method to redirect logs to another location.\n */\nexport const AzureLogger: AzureClientLogger = debug(\"azure\");\nAzureLogger.log = (...args) => {\n  debug.log(...args);\n};\n\n/**\n * The log levels supported by the logger.\n * The log levels in order of most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport type AzureLogLevel = \"verbose\" | \"info\" | \"warning\" | \"error\";\nconst AZURE_LOG_LEVELS = [\"verbose\", \"info\", \"warning\", \"error\"];\n\ntype AzureDebugger = Debugger & { level: AzureLogLevel };\n\n/**\n * An AzureClientLogger is a function that can log to an appropriate severity level.\n */\nexport type AzureClientLogger = Debugger;\n\nif (logLevelFromEnv) {\n  // avoid calling setLogLevel because we don't want a mis-set environment variable to crash\n  if (isAzureLogLevel(logLevelFromEnv)) {\n    setLogLevel(logLevelFromEnv);\n  } else {\n    console.error(\n      `AZURE_LOG_LEVEL set to unknown log level '${logLevelFromEnv}'; logging is not enabled. Acceptable values: ${AZURE_LOG_LEVELS.join(\n        \", \"\n      )}.`\n    );\n  }\n}\n\n/**\n * Immediately enables logging at the specified log level.\n * @param level The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport function setLogLevel(level?: AzureLogLevel) {\n  if (level && !isAzureLogLevel(level)) {\n    throw new Error(\n      `Unknown log level '${level}'. Acceptable values: ${AZURE_LOG_LEVELS.join(\",\")}`\n    );\n  }\n  azureLogLevel = level;\n\n  const enabledNamespaces = [];\n  for (const logger of registeredLoggers) {\n    if (shouldEnable(logger)) {\n      enabledNamespaces.push(logger.namespace);\n    }\n  }\n\n  debug.enable(enabledNamespaces.join(\",\"));\n}\n\n/**\n * Retrieves the currently specified log level.\n */\nexport function getLogLevel() {\n  return azureLogLevel;\n}\n\nconst levelMap = {\n  verbose: 400,\n  info: 300,\n  warning: 200,\n  error: 100\n};\n\n/**\n * Defines the methods available on the SDK-facing logger.\n */\nexport interface AzureLogger {\n  /**\n   * Used for failures the program is unlikely to recover from,\n   * such as Out of Memory.\n   */\n  error: Debugger;\n  /**\n   * Used when a function fails to perform its intended task.\n   * Usually this means the function will throw an exception.\n   * Not used for self-healing events (e.g. automatic retry)\n   */\n  warning: Debugger;\n  /**\n   * Used when a function operates normally.\n   */\n  info: Debugger;\n  /**\n   * Used for detailed trbouleshooting scenarios. This is\n   * intended for use by developers / system administrators\n   * for diagnosing specific failures.\n   */\n  verbose: Debugger;\n}\n\n/**\n * Creates a logger for use by the Azure SDKs that inherits from `AzureLogger`.\n * @param namespace The name of the SDK package.\n * @ignore\n */\nexport function createClientLogger(namespace: string): AzureLogger {\n  const clientRootLogger: AzureClientLogger = AzureLogger.extend(namespace);\n  patchLogMethod(AzureLogger, clientRootLogger);\n  return {\n    error: createLogger(clientRootLogger, \"error\"),\n    warning: createLogger(clientRootLogger, \"warning\"),\n    info: createLogger(clientRootLogger, \"info\"),\n    verbose: createLogger(clientRootLogger, \"verbose\")\n  };\n}\n\nfunction patchLogMethod(parent: AzureClientLogger, child: AzureClientLogger | AzureDebugger): void {\n  child.log = (...args) => {\n    parent.log(...args);\n  };\n}\n\nfunction createLogger(parent: AzureClientLogger, level: AzureLogLevel): AzureDebugger {\n  const logger: AzureDebugger = Object.assign(parent.extend(level), {\n    level\n  });\n\n  patchLogMethod(parent, logger);\n\n  if (shouldEnable(logger)) {\n    const enabledNamespaces = debug.disable();\n    debug.enable(enabledNamespaces + \",\" + logger.namespace);\n  }\n\n  registeredLoggers.add(logger);\n\n  return logger;\n}\n\nfunction shouldEnable(logger: AzureDebugger) {\n  if (azureLogLevel && levelMap[logger.level] <= levelMap[azureLogLevel]) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction isAzureLogLevel(logLevel: string): logLevel is AzureLogLevel {\n  return AZURE_LOG_LEVELS.includes(logLevel as any);\n}\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  exports.defaults = {\n    \"0.1\": {\n      explicitCharkey: false,\n      trim: true,\n      normalize: true,\n      normalizeTags: false,\n      attrkey: \"@\",\n      charkey: \"#\",\n      explicitArray: false,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: false,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      childkey: '@@',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      emptyTag: ''\n    },\n    \"0.2\": {\n      explicitCharkey: false,\n      trim: false,\n      normalize: false,\n      normalizeTags: false,\n      attrkey: \"$\",\n      charkey: \"_\",\n      explicitArray: true,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: true,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      preserveChildrenOrder: false,\n      childkey: '$$',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      rootName: 'root',\n      xmldec: {\n        'version': '1.0',\n        'encoding': 'UTF-8',\n        'standalone': true\n      },\n      doctype: null,\n      renderOpts: {\n        'pretty': true,\n        'indent': '  ',\n        'newline': '\\n'\n      },\n      headless: false,\n      chunkSize: 10000,\n      emptyTag: '',\n      cdata: false\n    }\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var assign, getValue, isArray, isEmpty, isFunction, isObject, isPlainObject,\n    slice = [].slice,\n    hasProp = {}.hasOwnProperty;\n\n  assign = function() {\n    var i, key, len, source, sources, target;\n    target = arguments[0], sources = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (isFunction(Object.assign)) {\n      Object.assign.apply(null, arguments);\n    } else {\n      for (i = 0, len = sources.length; i < len; i++) {\n        source = sources[i];\n        if (source != null) {\n          for (key in source) {\n            if (!hasProp.call(source, key)) continue;\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n\n  isFunction = function(val) {\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\n  };\n\n  isObject = function(val) {\n    var ref;\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\n  };\n\n  isArray = function(val) {\n    if (isFunction(Array.isArray)) {\n      return Array.isArray(val);\n    } else {\n      return Object.prototype.toString.call(val) === '[object Array]';\n    }\n  };\n\n  isEmpty = function(val) {\n    var key;\n    if (isArray(val)) {\n      return !val.length;\n    } else {\n      for (key in val) {\n        if (!hasProp.call(val, key)) continue;\n        return false;\n      }\n      return true;\n    }\n  };\n\n  isPlainObject = function(val) {\n    var ctor, proto;\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === 'function') && (ctor instanceof ctor) && (Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object));\n  };\n\n  getValue = function(obj) {\n    if (isFunction(obj.valueOf)) {\n      return obj.valueOf();\n    } else {\n      return obj;\n    }\n  };\n\n  module.exports.assign = assign;\n\n  module.exports.isFunction = isFunction;\n\n  module.exports.isObject = isObject;\n\n  module.exports.isArray = isArray;\n\n  module.exports.isEmpty = isEmpty;\n\n  module.exports.isPlainObject = isPlainObject;\n\n  module.exports.getValue = getValue;\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMImplementation;\n\n  module.exports = XMLDOMImplementation = (function() {\n    function XMLDOMImplementation() {}\n\n    XMLDOMImplementation.prototype.hasFeature = function(feature, version) {\n      return true;\n    };\n\n    XMLDOMImplementation.prototype.createDocumentType = function(qualifiedName, publicId, systemId) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLDOMImplementation.prototype.createDocument = function(namespaceURI, qualifiedName, doctype) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLDOMImplementation.prototype.createHTMLDocument = function(title) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLDOMImplementation.prototype.getFeature = function(feature, version) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    return XMLDOMImplementation;\n\n  })();\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMErrorHandler;\n\n  module.exports = XMLDOMErrorHandler = (function() {\n    function XMLDOMErrorHandler() {}\n\n    XMLDOMErrorHandler.prototype.handleError = function(error) {\n      throw new Error(error);\n    };\n\n    return XMLDOMErrorHandler;\n\n  })();\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMStringList;\n\n  module.exports = XMLDOMStringList = (function() {\n    function XMLDOMStringList(arr) {\n      this.arr = arr || [];\n    }\n\n    Object.defineProperty(XMLDOMStringList.prototype, 'length', {\n      get: function() {\n        return this.arr.length;\n      }\n    });\n\n    XMLDOMStringList.prototype.item = function(index) {\n      return this.arr[index] || null;\n    };\n\n    XMLDOMStringList.prototype.contains = function(str) {\n      return this.arr.indexOf(str) !== -1;\n    };\n\n    return XMLDOMStringList;\n\n  })();\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMConfiguration, XMLDOMErrorHandler, XMLDOMStringList;\n\n  XMLDOMErrorHandler = require('./XMLDOMErrorHandler');\n\n  XMLDOMStringList = require('./XMLDOMStringList');\n\n  module.exports = XMLDOMConfiguration = (function() {\n    function XMLDOMConfiguration() {\n      var clonedSelf;\n      this.defaultParams = {\n        \"canonical-form\": false,\n        \"cdata-sections\": false,\n        \"comments\": false,\n        \"datatype-normalization\": false,\n        \"element-content-whitespace\": true,\n        \"entities\": true,\n        \"error-handler\": new XMLDOMErrorHandler(),\n        \"infoset\": true,\n        \"validate-if-schema\": false,\n        \"namespaces\": true,\n        \"namespace-declarations\": true,\n        \"normalize-characters\": false,\n        \"schema-location\": '',\n        \"schema-type\": '',\n        \"split-cdata-sections\": true,\n        \"validate\": false,\n        \"well-formed\": true\n      };\n      this.params = clonedSelf = Object.create(this.defaultParams);\n    }\n\n    Object.defineProperty(XMLDOMConfiguration.prototype, 'parameterNames', {\n      get: function() {\n        return new XMLDOMStringList(Object.keys(this.defaultParams));\n      }\n    });\n\n    XMLDOMConfiguration.prototype.getParameter = function(name) {\n      if (this.params.hasOwnProperty(name)) {\n        return this.params[name];\n      } else {\n        return null;\n      }\n    };\n\n    XMLDOMConfiguration.prototype.canSetParameter = function(name, value) {\n      return true;\n    };\n\n    XMLDOMConfiguration.prototype.setParameter = function(name, value) {\n      if (value != null) {\n        return this.params[name] = value;\n      } else {\n        return delete this.params[name];\n      }\n    };\n\n    return XMLDOMConfiguration;\n\n  })();\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  module.exports = {\n    Element: 1,\n    Attribute: 2,\n    Text: 3,\n    CData: 4,\n    EntityReference: 5,\n    EntityDeclaration: 6,\n    ProcessingInstruction: 7,\n    Comment: 8,\n    Document: 9,\n    DocType: 10,\n    DocumentFragment: 11,\n    NotationDeclaration: 12,\n    Declaration: 201,\n    Raw: 202,\n    AttributeDeclaration: 203,\n    ElementDeclaration: 204,\n    Dummy: 205\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLAttribute, XMLNode;\n\n  NodeType = require('./NodeType');\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLAttribute = (function() {\n    function XMLAttribute(parent, name, value) {\n      this.parent = parent;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      if (name == null) {\n        throw new Error(\"Missing attribute name. \" + this.debugInfo(name));\n      }\n      this.name = this.stringify.name(name);\n      this.value = this.stringify.attValue(value);\n      this.type = NodeType.Attribute;\n      this.isId = false;\n      this.schemaTypeInfo = null;\n    }\n\n    Object.defineProperty(XMLAttribute.prototype, 'nodeType', {\n      get: function() {\n        return this.type;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'ownerElement', {\n      get: function() {\n        return this.parent;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'textContent', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'namespaceURI', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'prefix', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'localName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'specified', {\n      get: function() {\n        return true;\n      }\n    });\n\n    XMLAttribute.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLAttribute.prototype.toString = function(options) {\n      return this.options.writer.attribute(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLAttribute.prototype.debugInfo = function(name) {\n      name = name || this.name;\n      if (name == null) {\n        return \"parent: <\" + this.parent.name + \">\";\n      } else {\n        return \"attribute: {\" + name + \"}, parent: <\" + this.parent.name + \">\";\n      }\n    };\n\n    XMLAttribute.prototype.isEqualNode = function(node) {\n      if (node.namespaceURI !== this.namespaceURI) {\n        return false;\n      }\n      if (node.prefix !== this.prefix) {\n        return false;\n      }\n      if (node.localName !== this.localName) {\n        return false;\n      }\n      if (node.value !== this.value) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLAttribute;\n\n  })();\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNamedNodeMap;\n\n  module.exports = XMLNamedNodeMap = (function() {\n    function XMLNamedNodeMap(nodes) {\n      this.nodes = nodes;\n    }\n\n    Object.defineProperty(XMLNamedNodeMap.prototype, 'length', {\n      get: function() {\n        return Object.keys(this.nodes).length || 0;\n      }\n    });\n\n    XMLNamedNodeMap.prototype.clone = function() {\n      return this.nodes = null;\n    };\n\n    XMLNamedNodeMap.prototype.getNamedItem = function(name) {\n      return this.nodes[name];\n    };\n\n    XMLNamedNodeMap.prototype.setNamedItem = function(node) {\n      var oldNode;\n      oldNode = this.nodes[node.nodeName];\n      this.nodes[node.nodeName] = node;\n      return oldNode || null;\n    };\n\n    XMLNamedNodeMap.prototype.removeNamedItem = function(name) {\n      var oldNode;\n      oldNode = this.nodes[name];\n      delete this.nodes[name];\n      return oldNode || null;\n    };\n\n    XMLNamedNodeMap.prototype.item = function(index) {\n      return this.nodes[Object.keys(this.nodes)[index]] || null;\n    };\n\n    XMLNamedNodeMap.prototype.getNamedItemNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLNamedNodeMap.prototype.setNamedItemNS = function(node) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLNamedNodeMap.prototype.removeNamedItemNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    return XMLNamedNodeMap;\n\n  })();\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLAttribute, XMLElement, XMLNamedNodeMap, XMLNode, getValue, isFunction, isObject, ref,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, getValue = ref.getValue;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLNamedNodeMap = require('./XMLNamedNodeMap');\n\n  module.exports = XMLElement = (function(superClass) {\n    extend(XMLElement, superClass);\n\n    function XMLElement(parent, name, attributes) {\n      var child, j, len, ref1;\n      XMLElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing element name. \" + this.debugInfo());\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.Element;\n      this.attribs = {};\n      this.schemaTypeInfo = null;\n      if (attributes != null) {\n        this.attribute(attributes);\n      }\n      if (parent.type === NodeType.Document) {\n        this.isRoot = true;\n        this.documentObject = parent;\n        parent.rootObject = this;\n        if (parent.children) {\n          ref1 = parent.children;\n          for (j = 0, len = ref1.length; j < len; j++) {\n            child = ref1[j];\n            if (child.type === NodeType.DocType) {\n              child.name = this.name;\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    Object.defineProperty(XMLElement.prototype, 'tagName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'namespaceURI', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'prefix', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'localName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'id', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'className', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'classList', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'attributes', {\n      get: function() {\n        if (!this.attributeMap || !this.attributeMap.nodes) {\n          this.attributeMap = new XMLNamedNodeMap(this.attribs);\n        }\n        return this.attributeMap;\n      }\n    });\n\n    XMLElement.prototype.clone = function() {\n      var att, attName, clonedSelf, ref1;\n      clonedSelf = Object.create(this);\n      if (clonedSelf.isRoot) {\n        clonedSelf.documentObject = null;\n      }\n      clonedSelf.attribs = {};\n      ref1 = this.attribs;\n      for (attName in ref1) {\n        if (!hasProp.call(ref1, attName)) continue;\n        att = ref1[attName];\n        clonedSelf.attribs[attName] = att.clone();\n      }\n      clonedSelf.children = [];\n      this.children.forEach(function(child) {\n        var clonedChild;\n        clonedChild = child.clone();\n        clonedChild.parent = clonedSelf;\n        return clonedSelf.children.push(clonedChild);\n      });\n      return clonedSelf;\n    };\n\n    XMLElement.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (this.options.keepNullAttributes && (value == null)) {\n          this.attribs[name] = new XMLAttribute(this, name, \"\");\n        } else if (value != null) {\n          this.attribs[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLElement.prototype.removeAttribute = function(name) {\n      var attName, j, len;\n      if (name == null) {\n        throw new Error(\"Missing attribute name. \" + this.debugInfo());\n      }\n      name = getValue(name);\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          attName = name[j];\n          delete this.attribs[attName];\n        }\n      } else {\n        delete this.attribs[name];\n      }\n      return this;\n    };\n\n    XMLElement.prototype.toString = function(options) {\n      return this.options.writer.element(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLElement.prototype.att = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.a = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.getAttribute = function(name) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name].value;\n      } else {\n        return null;\n      }\n    };\n\n    XMLElement.prototype.setAttribute = function(name, value) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getAttributeNode = function(name) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name];\n      } else {\n        return null;\n      }\n    };\n\n    XMLElement.prototype.setAttributeNode = function(newAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.removeAttributeNode = function(oldAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagName = function(name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getAttributeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setAttributeNS = function(namespaceURI, qualifiedName, value) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.removeAttributeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getAttributeNodeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setAttributeNodeNS = function(newAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.hasAttribute = function(name) {\n      return this.attribs.hasOwnProperty(name);\n    };\n\n    XMLElement.prototype.hasAttributeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setIdAttribute = function(name, isId) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name].isId;\n      } else {\n        return isId;\n      }\n    };\n\n    XMLElement.prototype.setIdAttributeNS = function(namespaceURI, localName, isId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setIdAttributeNode = function(idAttr, isId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagName = function(tagname) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByClassName = function(classNames) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.isEqualNode = function(node) {\n      var i, j, ref1;\n      if (!XMLElement.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.namespaceURI !== this.namespaceURI) {\n        return false;\n      }\n      if (node.prefix !== this.prefix) {\n        return false;\n      }\n      if (node.localName !== this.localName) {\n        return false;\n      }\n      if (node.attribs.length !== this.attribs.length) {\n        return false;\n      }\n      for (i = j = 0, ref1 = this.attribs.length - 1; 0 <= ref1 ? j <= ref1 : j >= ref1; i = 0 <= ref1 ? ++j : --j) {\n        if (!this.attribs[i].isEqualNode(node.attribs[i])) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    return XMLElement;\n\n  })(XMLNode);\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCharacterData, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLCharacterData = (function(superClass) {\n    extend(XMLCharacterData, superClass);\n\n    function XMLCharacterData(parent) {\n      XMLCharacterData.__super__.constructor.call(this, parent);\n      this.value = '';\n    }\n\n    Object.defineProperty(XMLCharacterData.prototype, 'data', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    Object.defineProperty(XMLCharacterData.prototype, 'length', {\n      get: function() {\n        return this.value.length;\n      }\n    });\n\n    Object.defineProperty(XMLCharacterData.prototype, 'textContent', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    XMLCharacterData.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLCharacterData.prototype.substringData = function(offset, count) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.appendData = function(arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.insertData = function(offset, arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.deleteData = function(offset, count) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.replaceData = function(offset, count, arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.isEqualNode = function(node) {\n      if (!XMLCharacterData.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.data !== this.data) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLCharacterData;\n\n  })(XMLNode);\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCData, XMLCharacterData,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLCData = (function(superClass) {\n    extend(XMLCData, superClass);\n\n    function XMLCData(parent, text) {\n      XMLCData.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing CDATA text. \" + this.debugInfo());\n      }\n      this.name = \"#cdata-section\";\n      this.type = NodeType.CData;\n      this.value = this.stringify.cdata(text);\n    }\n\n    XMLCData.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLCData.prototype.toString = function(options) {\n      return this.options.writer.cdata(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLCData;\n\n  })(XMLCharacterData);\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCharacterData, XMLComment,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLComment = (function(superClass) {\n    extend(XMLComment, superClass);\n\n    function XMLComment(parent, text) {\n      XMLComment.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing comment text. \" + this.debugInfo());\n      }\n      this.name = \"#comment\";\n      this.type = NodeType.Comment;\n      this.value = this.stringify.comment(text);\n    }\n\n    XMLComment.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLComment.prototype.toString = function(options) {\n      return this.options.writer.comment(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLComment;\n\n  })(XMLCharacterData);\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDeclaration, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDeclaration = (function(superClass) {\n    extend(XMLDeclaration, superClass);\n\n    function XMLDeclaration(parent, version, encoding, standalone) {\n      var ref;\n      XMLDeclaration.__super__.constructor.call(this, parent);\n      if (isObject(version)) {\n        ref = version, version = ref.version, encoding = ref.encoding, standalone = ref.standalone;\n      }\n      if (!version) {\n        version = '1.0';\n      }\n      this.type = NodeType.Declaration;\n      this.version = this.stringify.xmlVersion(version);\n      if (encoding != null) {\n        this.encoding = this.stringify.xmlEncoding(encoding);\n      }\n      if (standalone != null) {\n        this.standalone = this.stringify.xmlStandalone(standalone);\n      }\n    }\n\n    XMLDeclaration.prototype.toString = function(options) {\n      return this.options.writer.declaration(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDeclaration;\n\n  })(XMLNode);\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDAttList, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDAttList = (function(superClass) {\n    extend(XMLDTDAttList, superClass);\n\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      XMLDTDAttList.__super__.constructor.call(this, parent);\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name. \" + this.debugInfo(elementName));\n      }\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type. \" + this.debugInfo(elementName));\n      }\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default. \" + this.debugInfo(elementName));\n      }\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n      this.elementName = this.stringify.name(elementName);\n      this.type = NodeType.AttributeDeclaration;\n      this.attributeName = this.stringify.name(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      if (defaultValue) {\n        this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      }\n      this.defaultValueType = defaultValueType;\n    }\n\n    XMLDTDAttList.prototype.toString = function(options) {\n      return this.options.writer.dtdAttList(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDAttList;\n\n  })(XMLNode);\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDEntity, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDEntity = (function(superClass) {\n    extend(XMLDTDEntity, superClass);\n\n    function XMLDTDEntity(parent, pe, name, value) {\n      XMLDTDEntity.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD entity name. \" + this.debugInfo(name));\n      }\n      if (value == null) {\n        throw new Error(\"Missing DTD entity value. \" + this.debugInfo(name));\n      }\n      this.pe = !!pe;\n      this.name = this.stringify.name(name);\n      this.type = NodeType.EntityDeclaration;\n      if (!isObject(value)) {\n        this.value = this.stringify.dtdEntityValue(value);\n        this.internal = true;\n      } else {\n        if (!value.pubID && !value.sysID) {\n          throw new Error(\"Public and/or system identifiers are required for an external entity. \" + this.debugInfo(name));\n        }\n        if (value.pubID && !value.sysID) {\n          throw new Error(\"System identifier is required for a public external entity. \" + this.debugInfo(name));\n        }\n        this.internal = false;\n        if (value.pubID != null) {\n          this.pubID = this.stringify.dtdPubID(value.pubID);\n        }\n        if (value.sysID != null) {\n          this.sysID = this.stringify.dtdSysID(value.sysID);\n        }\n        if (value.nData != null) {\n          this.nData = this.stringify.dtdNData(value.nData);\n        }\n        if (this.pe && this.nData) {\n          throw new Error(\"Notation declaration is not allowed in a parameter entity. \" + this.debugInfo(name));\n        }\n      }\n    }\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'notationName', {\n      get: function() {\n        return this.nData || null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'inputEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlVersion', {\n      get: function() {\n        return null;\n      }\n    });\n\n    XMLDTDEntity.prototype.toString = function(options) {\n      return this.options.writer.dtdEntity(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDEntity;\n\n  })(XMLNode);\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDElement, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDElement = (function(superClass) {\n    extend(XMLDTDElement, superClass);\n\n    function XMLDTDElement(parent, name, value) {\n      XMLDTDElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n      if (!value) {\n        value = '(#PCDATA)';\n      }\n      if (Array.isArray(value)) {\n        value = '(' + value.join(',') + ')';\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.ElementDeclaration;\n      this.value = this.stringify.dtdElementValue(value);\n    }\n\n    XMLDTDElement.prototype.toString = function(options) {\n      return this.options.writer.dtdElement(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDElement;\n\n  })(XMLNode);\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDNotation, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDNotation = (function(superClass) {\n    extend(XMLDTDNotation, superClass);\n\n    function XMLDTDNotation(parent, name, value) {\n      XMLDTDNotation.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD notation name. \" + this.debugInfo(name));\n      }\n      if (!value.pubID && !value.sysID) {\n        throw new Error(\"Public or system identifiers are required for an external entity. \" + this.debugInfo(name));\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.NotationDeclaration;\n      if (value.pubID != null) {\n        this.pubID = this.stringify.dtdPubID(value.pubID);\n      }\n      if (value.sysID != null) {\n        this.sysID = this.stringify.dtdSysID(value.sysID);\n      }\n    }\n\n    Object.defineProperty(XMLDTDNotation.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDNotation.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    XMLDTDNotation.prototype.toString = function(options) {\n      return this.options.writer.dtdNotation(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDNotation;\n\n  })(XMLNode);\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNamedNodeMap, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLNamedNodeMap = require('./XMLNamedNodeMap');\n\n  module.exports = XMLDocType = (function(superClass) {\n    extend(XMLDocType, superClass);\n\n    function XMLDocType(parent, pubID, sysID) {\n      var child, i, len, ref, ref1, ref2;\n      XMLDocType.__super__.constructor.call(this, parent);\n      this.type = NodeType.DocType;\n      if (parent.children) {\n        ref = parent.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.Element) {\n            this.name = child.name;\n            break;\n          }\n        }\n      }\n      this.documentObject = parent;\n      if (isObject(pubID)) {\n        ref1 = pubID, pubID = ref1.pubID, sysID = ref1.sysID;\n      }\n      if (sysID == null) {\n        ref2 = [pubID, sysID], sysID = ref2[0], pubID = ref2[1];\n      }\n      if (pubID != null) {\n        this.pubID = this.stringify.dtdPubID(pubID);\n      }\n      if (sysID != null) {\n        this.sysID = this.stringify.dtdSysID(sysID);\n      }\n    }\n\n    Object.defineProperty(XMLDocType.prototype, 'entities', {\n      get: function() {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if ((child.type === NodeType.EntityDeclaration) && !child.pe) {\n            nodes[child.name] = child;\n          }\n        }\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'notations', {\n      get: function() {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.NotationDeclaration) {\n            nodes[child.name] = child;\n          }\n        }\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'internalSubset', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    XMLDocType.prototype.element = function(name, value) {\n      var child;\n      child = new XMLDTDElement(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var child;\n      child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.entity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, false, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.pEntity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, true, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.notation = function(name, value) {\n      var child;\n      child = new XMLDTDNotation(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.toString = function(options) {\n      return this.options.writer.docType(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLDocType.prototype.ele = function(name, value) {\n      return this.element(name, value);\n    };\n\n    XMLDocType.prototype.att = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\n    };\n\n    XMLDocType.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocType.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocType.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    XMLDocType.prototype.up = function() {\n      return this.root() || this.documentObject;\n    };\n\n    XMLDocType.prototype.isEqualNode = function(node) {\n      if (!XMLDocType.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.name !== this.name) {\n        return false;\n      }\n      if (node.publicId !== this.publicId) {\n        return false;\n      }\n      if (node.systemId !== this.systemId) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLDocType;\n\n  })(XMLNode);\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLNode, XMLRaw,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLRaw = (function(superClass) {\n    extend(XMLRaw, superClass);\n\n    function XMLRaw(parent, text) {\n      XMLRaw.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing raw text. \" + this.debugInfo());\n      }\n      this.type = NodeType.Raw;\n      this.value = this.stringify.raw(text);\n    }\n\n    XMLRaw.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLRaw.prototype.toString = function(options) {\n      return this.options.writer.raw(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLRaw;\n\n  })(XMLNode);\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCharacterData, XMLText,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLText = (function(superClass) {\n    extend(XMLText, superClass);\n\n    function XMLText(parent, text) {\n      XMLText.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing element text. \" + this.debugInfo());\n      }\n      this.name = \"#text\";\n      this.type = NodeType.Text;\n      this.value = this.stringify.text(text);\n    }\n\n    Object.defineProperty(XMLText.prototype, 'isElementContentWhitespace', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLText.prototype, 'wholeText', {\n      get: function() {\n        var next, prev, str;\n        str = '';\n        prev = this.previousSibling;\n        while (prev) {\n          str = prev.data + str;\n          prev = prev.previousSibling;\n        }\n        str += this.data;\n        next = this.nextSibling;\n        while (next) {\n          str = str + next.data;\n          next = next.nextSibling;\n        }\n        return str;\n      }\n    });\n\n    XMLText.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLText.prototype.toString = function(options) {\n      return this.options.writer.text(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLText.prototype.splitText = function(offset) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLText.prototype.replaceWholeText = function(content) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    return XMLText;\n\n  })(XMLCharacterData);\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCharacterData, XMLProcessingInstruction,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLProcessingInstruction = (function(superClass) {\n    extend(XMLProcessingInstruction, superClass);\n\n    function XMLProcessingInstruction(parent, target, value) {\n      XMLProcessingInstruction.__super__.constructor.call(this, parent);\n      if (target == null) {\n        throw new Error(\"Missing instruction target. \" + this.debugInfo());\n      }\n      this.type = NodeType.ProcessingInstruction;\n      this.target = this.stringify.insTarget(target);\n      this.name = this.target;\n      if (value) {\n        this.value = this.stringify.insValue(value);\n      }\n    }\n\n    XMLProcessingInstruction.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLProcessingInstruction.prototype.toString = function(options) {\n      return this.options.writer.processingInstruction(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLProcessingInstruction.prototype.isEqualNode = function(node) {\n      if (!XMLProcessingInstruction.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.target !== this.target) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLProcessingInstruction;\n\n  })(XMLCharacterData);\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDummy, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDummy = (function(superClass) {\n    extend(XMLDummy, superClass);\n\n    function XMLDummy(parent) {\n      XMLDummy.__super__.constructor.call(this, parent);\n      this.type = NodeType.Dummy;\n    }\n\n    XMLDummy.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLDummy.prototype.toString = function(options) {\n      return '';\n    };\n\n    return XMLDummy;\n\n  })(XMLNode);\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNodeList;\n\n  module.exports = XMLNodeList = (function() {\n    function XMLNodeList(nodes) {\n      this.nodes = nodes;\n    }\n\n    Object.defineProperty(XMLNodeList.prototype, 'length', {\n      get: function() {\n        return this.nodes.length || 0;\n      }\n    });\n\n    XMLNodeList.prototype.clone = function() {\n      return this.nodes = null;\n    };\n\n    XMLNodeList.prototype.item = function(index) {\n      return this.nodes[index] || null;\n    };\n\n    return XMLNodeList;\n\n  })();\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  module.exports = {\n    Disconnected: 1,\n    Preceding: 2,\n    Following: 4,\n    Contains: 8,\n    ContainedBy: 16,\n    ImplementationSpecific: 32\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var DocumentPosition, NodeType, XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLNamedNodeMap, XMLNode, XMLNodeList, XMLProcessingInstruction, XMLRaw, XMLText, getValue, isEmpty, isFunction, isObject, ref1,\n    hasProp = {}.hasOwnProperty;\n\n  ref1 = require('./Utility'), isObject = ref1.isObject, isFunction = ref1.isFunction, isEmpty = ref1.isEmpty, getValue = ref1.getValue;\n\n  XMLElement = null;\n\n  XMLCData = null;\n\n  XMLComment = null;\n\n  XMLDeclaration = null;\n\n  XMLDocType = null;\n\n  XMLRaw = null;\n\n  XMLText = null;\n\n  XMLProcessingInstruction = null;\n\n  XMLDummy = null;\n\n  NodeType = null;\n\n  XMLNodeList = null;\n\n  XMLNamedNodeMap = null;\n\n  DocumentPosition = null;\n\n  module.exports = XMLNode = (function() {\n    function XMLNode(parent1) {\n      this.parent = parent1;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      this.value = null;\n      this.children = [];\n      this.baseURI = null;\n      if (!XMLElement) {\n        XMLElement = require('./XMLElement');\n        XMLCData = require('./XMLCData');\n        XMLComment = require('./XMLComment');\n        XMLDeclaration = require('./XMLDeclaration');\n        XMLDocType = require('./XMLDocType');\n        XMLRaw = require('./XMLRaw');\n        XMLText = require('./XMLText');\n        XMLProcessingInstruction = require('./XMLProcessingInstruction');\n        XMLDummy = require('./XMLDummy');\n        NodeType = require('./NodeType');\n        XMLNodeList = require('./XMLNodeList');\n        XMLNamedNodeMap = require('./XMLNamedNodeMap');\n        DocumentPosition = require('./DocumentPosition');\n      }\n    }\n\n    Object.defineProperty(XMLNode.prototype, 'nodeName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nodeType', {\n      get: function() {\n        return this.type;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nodeValue', {\n      get: function() {\n        return this.value;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'parentNode', {\n      get: function() {\n        return this.parent;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'childNodes', {\n      get: function() {\n        if (!this.childNodeList || !this.childNodeList.nodes) {\n          this.childNodeList = new XMLNodeList(this.children);\n        }\n        return this.childNodeList;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'firstChild', {\n      get: function() {\n        return this.children[0] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'lastChild', {\n      get: function() {\n        return this.children[this.children.length - 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'previousSibling', {\n      get: function() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i - 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nextSibling', {\n      get: function() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i + 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'ownerDocument', {\n      get: function() {\n        return this.document() || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'textContent', {\n      get: function() {\n        var child, j, len, ref2, str;\n        if (this.nodeType === NodeType.Element || this.nodeType === NodeType.DocumentFragment) {\n          str = '';\n          ref2 = this.children;\n          for (j = 0, len = ref2.length; j < len; j++) {\n            child = ref2[j];\n            if (child.textContent) {\n              str += child.textContent;\n            }\n          }\n          return str;\n        } else {\n          return null;\n        }\n      },\n      set: function(value) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    XMLNode.prototype.setParent = function(parent) {\n      var child, j, len, ref2, results;\n      this.parent = parent;\n      if (parent) {\n        this.options = parent.options;\n        this.stringify = parent.stringify;\n      }\n      ref2 = this.children;\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        results.push(child.setParent(this));\n      }\n      return results;\n    };\n\n    XMLNode.prototype.element = function(name, attributes, text) {\n      var childNode, item, j, k, key, lastChild, len, len1, ref2, ref3, val;\n      lastChild = null;\n      if (attributes === null && (text == null)) {\n        ref2 = [{}, null], attributes = ref2[0], text = ref2[1];\n      }\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref3 = [attributes, text], text = ref3[0], attributes = ref3[1];\n      }\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          item = name[j];\n          lastChild = this.element(item);\n        }\n      } else if (isFunction(name)) {\n        lastChild = this.element(name.apply());\n      } else if (isObject(name)) {\n        for (key in name) {\n          if (!hasProp.call(name, key)) continue;\n          val = name[key];\n          if (isFunction(val)) {\n            val = val.apply();\n          }\n          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n          } else if (!this.options.separateArrayItems && Array.isArray(val) && isEmpty(val)) {\n            lastChild = this.dummy();\n          } else if (isObject(val) && isEmpty(val)) {\n            lastChild = this.element(key);\n          } else if (!this.options.keepNullNodes && (val == null)) {\n            lastChild = this.dummy();\n          } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n            for (k = 0, len1 = val.length; k < len1; k++) {\n              item = val[k];\n              childNode = {};\n              childNode[key] = item;\n              lastChild = this.element(childNode);\n            }\n          } else if (isObject(val)) {\n            if (!this.options.ignoreDecorators && this.stringify.convertTextKey && key.indexOf(this.stringify.convertTextKey) === 0) {\n              lastChild = this.element(val);\n            } else {\n              lastChild = this.element(key);\n              lastChild.element(val);\n            }\n          } else {\n            lastChild = this.element(key, val);\n          }\n        }\n      } else if (!this.options.keepNullNodes && text === null) {\n        lastChild = this.dummy();\n      } else {\n        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n          lastChild = this.text(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n          lastChild = this.cdata(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n          lastChild = this.comment(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n          lastChild = this.raw(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n          lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n        } else {\n          lastChild = this.node(name, attributes, text);\n        }\n      }\n      if (lastChild == null) {\n        throw new Error(\"Could not create any elements with: \" + name + \". \" + this.debugInfo());\n      }\n      return lastChild;\n    };\n\n    XMLNode.prototype.insertBefore = function(name, attributes, text) {\n      var child, i, newChild, refChild, removed;\n      if (name != null ? name.type : void 0) {\n        newChild = name;\n        refChild = attributes;\n        newChild.setParent(this);\n        if (refChild) {\n          i = children.indexOf(refChild);\n          removed = children.splice(i);\n          children.push(newChild);\n          Array.prototype.push.apply(children, removed);\n        } else {\n          children.push(newChild);\n        }\n        return newChild;\n      } else {\n        if (this.isRoot) {\n          throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n        }\n        i = this.parent.children.indexOf(this);\n        removed = this.parent.children.splice(i);\n        child = this.parent.element(name, attributes, text);\n        Array.prototype.push.apply(this.parent.children, removed);\n        return child;\n      }\n    };\n\n    XMLNode.prototype.insertAfter = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.remove = function() {\n      var i, ref2;\n      if (this.isRoot) {\n        throw new Error(\"Cannot remove the root element. \" + this.debugInfo());\n      }\n      i = this.parent.children.indexOf(this);\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref2 = [])), ref2;\n      return this.parent;\n    };\n\n    XMLNode.prototype.node = function(name, attributes, text) {\n      var child, ref2;\n      if (name != null) {\n        name = getValue(name);\n      }\n      attributes || (attributes = {});\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref2 = [attributes, text], text = ref2[0], attributes = ref2[1];\n      }\n      child = new XMLElement(this, name, attributes);\n      if (text != null) {\n        child.text(text);\n      }\n      this.children.push(child);\n      return child;\n    };\n\n    XMLNode.prototype.text = function(value) {\n      var child;\n      if (isObject(value)) {\n        this.element(value);\n      }\n      child = new XMLText(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.cdata = function(value) {\n      var child;\n      child = new XMLCData(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.comment = function(value) {\n      var child;\n      child = new XMLComment(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.commentBefore = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.commentAfter = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.raw = function(value) {\n      var child;\n      child = new XMLRaw(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.dummy = function() {\n      var child;\n      child = new XMLDummy(this);\n      return child;\n    };\n\n    XMLNode.prototype.instruction = function(target, value) {\n      var insTarget, insValue, instruction, j, len;\n      if (target != null) {\n        target = getValue(target);\n      }\n      if (value != null) {\n        value = getValue(value);\n      }\n      if (Array.isArray(target)) {\n        for (j = 0, len = target.length; j < len; j++) {\n          insTarget = target[j];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        instruction = new XMLProcessingInstruction(this, target, value);\n        this.children.push(instruction);\n      }\n      return this;\n    };\n\n    XMLNode.prototype.instructionBefore = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.instructionAfter = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.declaration = function(version, encoding, standalone) {\n      var doc, xmldec;\n      doc = this.document();\n      xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n      if (doc.children.length === 0) {\n        doc.children.unshift(xmldec);\n      } else if (doc.children[0].type === NodeType.Declaration) {\n        doc.children[0] = xmldec;\n      } else {\n        doc.children.unshift(xmldec);\n      }\n      return doc.root() || doc;\n    };\n\n    XMLNode.prototype.dtd = function(pubID, sysID) {\n      var child, doc, doctype, i, j, k, len, len1, ref2, ref3;\n      doc = this.document();\n      doctype = new XMLDocType(doc, pubID, sysID);\n      ref2 = doc.children;\n      for (i = j = 0, len = ref2.length; j < len; i = ++j) {\n        child = ref2[i];\n        if (child.type === NodeType.DocType) {\n          doc.children[i] = doctype;\n          return doctype;\n        }\n      }\n      ref3 = doc.children;\n      for (i = k = 0, len1 = ref3.length; k < len1; i = ++k) {\n        child = ref3[i];\n        if (child.isRoot) {\n          doc.children.splice(i, 0, doctype);\n          return doctype;\n        }\n      }\n      doc.children.push(doctype);\n      return doctype;\n    };\n\n    XMLNode.prototype.up = function() {\n      if (this.isRoot) {\n        throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n      }\n      return this.parent;\n    };\n\n    XMLNode.prototype.root = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.type === NodeType.Document) {\n          return node.rootObject;\n        } else if (node.isRoot) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.document = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.type === NodeType.Document) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.end = function(options) {\n      return this.document().end(options);\n    };\n\n    XMLNode.prototype.prev = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i < 1) {\n        throw new Error(\"Already at the first node. \" + this.debugInfo());\n      }\n      return this.parent.children[i - 1];\n    };\n\n    XMLNode.prototype.next = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i === -1 || i === this.parent.children.length - 1) {\n        throw new Error(\"Already at the last node. \" + this.debugInfo());\n      }\n      return this.parent.children[i + 1];\n    };\n\n    XMLNode.prototype.importDocument = function(doc) {\n      var clonedRoot;\n      clonedRoot = doc.root().clone();\n      clonedRoot.parent = this;\n      clonedRoot.isRoot = false;\n      this.children.push(clonedRoot);\n      return this;\n    };\n\n    XMLNode.prototype.debugInfo = function(name) {\n      var ref2, ref3;\n      name = name || this.name;\n      if ((name == null) && !((ref2 = this.parent) != null ? ref2.name : void 0)) {\n        return \"\";\n      } else if (name == null) {\n        return \"parent: <\" + this.parent.name + \">\";\n      } else if (!((ref3 = this.parent) != null ? ref3.name : void 0)) {\n        return \"node: <\" + name + \">\";\n      } else {\n        return \"node: <\" + name + \">, parent: <\" + this.parent.name + \">\";\n      }\n    };\n\n    XMLNode.prototype.ele = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.doc = function() {\n      return this.document();\n    };\n\n    XMLNode.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLNode.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLNode.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.u = function() {\n      return this.up();\n    };\n\n    XMLNode.prototype.importXMLBuilder = function(doc) {\n      return this.importDocument(doc);\n    };\n\n    XMLNode.prototype.replaceChild = function(newChild, oldChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.removeChild = function(oldChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.appendChild = function(newChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.hasChildNodes = function() {\n      return this.children.length !== 0;\n    };\n\n    XMLNode.prototype.cloneNode = function(deep) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.normalize = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isSupported = function(feature, version) {\n      return true;\n    };\n\n    XMLNode.prototype.hasAttributes = function() {\n      return this.attribs.length !== 0;\n    };\n\n    XMLNode.prototype.compareDocumentPosition = function(other) {\n      var ref, res;\n      ref = this;\n      if (ref === other) {\n        return 0;\n      } else if (this.document() !== other.document()) {\n        res = DocumentPosition.Disconnected | DocumentPosition.ImplementationSpecific;\n        if (Math.random() < 0.5) {\n          res |= DocumentPosition.Preceding;\n        } else {\n          res |= DocumentPosition.Following;\n        }\n        return res;\n      } else if (ref.isAncestor(other)) {\n        return DocumentPosition.Contains | DocumentPosition.Preceding;\n      } else if (ref.isDescendant(other)) {\n        return DocumentPosition.Contains | DocumentPosition.Following;\n      } else if (ref.isPreceding(other)) {\n        return DocumentPosition.Preceding;\n      } else {\n        return DocumentPosition.Following;\n      }\n    };\n\n    XMLNode.prototype.isSameNode = function(other) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.lookupPrefix = function(namespaceURI) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isDefaultNamespace = function(namespaceURI) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.lookupNamespaceURI = function(prefix) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isEqualNode = function(node) {\n      var i, j, ref2;\n      if (node.nodeType !== this.nodeType) {\n        return false;\n      }\n      if (node.children.length !== this.children.length) {\n        return false;\n      }\n      for (i = j = 0, ref2 = this.children.length - 1; 0 <= ref2 ? j <= ref2 : j >= ref2; i = 0 <= ref2 ? ++j : --j) {\n        if (!this.children[i].isEqualNode(node.children[i])) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    XMLNode.prototype.getFeature = function(feature, version) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.setUserData = function(key, data, handler) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.getUserData = function(key) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.contains = function(other) {\n      if (!other) {\n        return false;\n      }\n      return other === this || this.isDescendant(other);\n    };\n\n    XMLNode.prototype.isDescendant = function(node) {\n      var child, isDescendantChild, j, len, ref2;\n      ref2 = this.children;\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        if (node === child) {\n          return true;\n        }\n        isDescendantChild = child.isDescendant(node);\n        if (isDescendantChild) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    XMLNode.prototype.isAncestor = function(node) {\n      return node.isDescendant(this);\n    };\n\n    XMLNode.prototype.isPreceding = function(node) {\n      var nodePos, thisPos;\n      nodePos = this.treePosition(node);\n      thisPos = this.treePosition(this);\n      if (nodePos === -1 || thisPos === -1) {\n        return false;\n      } else {\n        return nodePos < thisPos;\n      }\n    };\n\n    XMLNode.prototype.isFollowing = function(node) {\n      var nodePos, thisPos;\n      nodePos = this.treePosition(node);\n      thisPos = this.treePosition(this);\n      if (nodePos === -1 || thisPos === -1) {\n        return false;\n      } else {\n        return nodePos > thisPos;\n      }\n    };\n\n    XMLNode.prototype.treePosition = function(node) {\n      var found, pos;\n      pos = 0;\n      found = false;\n      this.foreachTreeNode(this.document(), function(childNode) {\n        pos++;\n        if (!found && childNode === node) {\n          return found = true;\n        }\n      });\n      if (found) {\n        return pos;\n      } else {\n        return -1;\n      }\n    };\n\n    XMLNode.prototype.foreachTreeNode = function(node, func) {\n      var child, j, len, ref2, res;\n      node || (node = this.document());\n      ref2 = node.children;\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        if (res = func(child)) {\n          return res;\n        } else {\n          res = this.foreachTreeNode(child, func);\n          if (res) {\n            return res;\n          }\n        }\n      }\n    };\n\n    return XMLNode;\n\n  })();\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringifier,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLStringifier = (function() {\n    function XMLStringifier(options) {\n      this.assertLegalName = bind(this.assertLegalName, this);\n      this.assertLegalChar = bind(this.assertLegalChar, this);\n      var key, ref, value;\n      options || (options = {});\n      this.options = options;\n      if (!this.options.version) {\n        this.options.version = '1.0';\n      }\n      ref = options.stringify || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n    }\n\n    XMLStringifier.prototype.name = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalName('' + val || '');\n    };\n\n    XMLStringifier.prototype.text = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar(this.textEscape('' + val || ''));\n    };\n\n    XMLStringifier.prototype.cdata = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      val = val.replace(']]>', ']]]]><![CDATA[>');\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.comment = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (val.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.raw = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.attValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar(this.attEscape(val = '' + val || ''));\n    };\n\n    XMLStringifier.prototype.insTarget = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.insValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (val.match(/\\?>/)) {\n        throw new Error(\"Invalid processing instruction value: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.xmlVersion = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (!val.match(/1\\.[0-9]+/)) {\n        throw new Error(\"Invalid version number: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlEncoding = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n        throw new Error(\"Invalid encoding: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.xmlStandalone = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      if (val) {\n        return \"yes\";\n      } else {\n        return \"no\";\n      }\n    };\n\n    XMLStringifier.prototype.dtdPubID = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdSysID = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdElementValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdAttType = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdAttDefault = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdEntityValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdNData = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.convertAttKey = '@';\n\n    XMLStringifier.prototype.convertPIKey = '?';\n\n    XMLStringifier.prototype.convertTextKey = '#text';\n\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n\n    XMLStringifier.prototype.convertRawKey = '#raw';\n\n    XMLStringifier.prototype.assertLegalChar = function(str) {\n      var regex, res;\n      if (this.options.noValidation) {\n        return str;\n      }\n      regex = '';\n      if (this.options.version === '1.0') {\n        regex = /[\\0-\\x08\\x0B\\f\\x0E-\\x1F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n        if (res = str.match(regex)) {\n          throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n        }\n      } else if (this.options.version === '1.1') {\n        regex = /[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n        if (res = str.match(regex)) {\n          throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n        }\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.assertLegalName = function(str) {\n      var regex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      this.assertLegalChar(str);\n      regex = /^([:A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])([\\x2D\\.0-:A-Z_a-z\\xB7\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u203F\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])*$/;\n      if (!str.match(regex)) {\n        throw new Error(\"Invalid character in name\");\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.textEscape = function(str) {\n      var ampregex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      ampregex = this.options.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\n    };\n\n    XMLStringifier.prototype.attEscape = function(str) {\n      var ampregex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      ampregex = this.options.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\n    };\n\n    return XMLStringifier;\n\n  })();\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  module.exports = {\n    None: 0,\n    OpenTag: 1,\n    InsideTag: 2,\n    CloseTag: 3\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLProcessingInstruction, XMLRaw, XMLText, XMLWriterBase, assign,\n    hasProp = {}.hasOwnProperty;\n\n  assign = require('./Utility').assign;\n\n  NodeType = require('./NodeType');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDummy = require('./XMLDummy');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  WriterState = require('./WriterState');\n\n  module.exports = XMLWriterBase = (function() {\n    function XMLWriterBase(options) {\n      var key, ref, value;\n      options || (options = {});\n      this.options = options;\n      ref = options.writer || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[\"_\" + key] = this[key];\n        this[key] = value;\n      }\n    }\n\n    XMLWriterBase.prototype.filterOptions = function(options) {\n      var filteredOptions, ref, ref1, ref2, ref3, ref4, ref5, ref6;\n      options || (options = {});\n      options = assign({}, this.options, options);\n      filteredOptions = {\n        writer: this\n      };\n      filteredOptions.pretty = options.pretty || false;\n      filteredOptions.allowEmpty = options.allowEmpty || false;\n      filteredOptions.indent = (ref = options.indent) != null ? ref : '  ';\n      filteredOptions.newline = (ref1 = options.newline) != null ? ref1 : '\\n';\n      filteredOptions.offset = (ref2 = options.offset) != null ? ref2 : 0;\n      filteredOptions.dontPrettyTextNodes = (ref3 = (ref4 = options.dontPrettyTextNodes) != null ? ref4 : options.dontprettytextnodes) != null ? ref3 : 0;\n      filteredOptions.spaceBeforeSlash = (ref5 = (ref6 = options.spaceBeforeSlash) != null ? ref6 : options.spacebeforeslash) != null ? ref5 : '';\n      if (filteredOptions.spaceBeforeSlash === true) {\n        filteredOptions.spaceBeforeSlash = ' ';\n      }\n      filteredOptions.suppressPrettyCount = 0;\n      filteredOptions.user = {};\n      filteredOptions.state = WriterState.None;\n      return filteredOptions;\n    };\n\n    XMLWriterBase.prototype.indent = function(node, options, level) {\n      var indentLevel;\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else if (options.pretty) {\n        indentLevel = (level || 0) + options.offset + 1;\n        if (indentLevel > 0) {\n          return new Array(indentLevel).join(options.indent);\n        }\n      }\n      return '';\n    };\n\n    XMLWriterBase.prototype.endline = function(node, options, level) {\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else {\n        return options.newline;\n      }\n    };\n\n    XMLWriterBase.prototype.attribute = function(att, options, level) {\n      var r;\n      this.openAttribute(att, options, level);\n      r = ' ' + att.name + '=\"' + att.value + '\"';\n      this.closeAttribute(att, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.cdata = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<![CDATA[';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ']]>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.comment = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!-- ';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ' -->' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.declaration = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?xml';\n      options.state = WriterState.InsideTag;\n      r += ' version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.docType = function(node, options, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      r += '<!DOCTYPE ' + node.root().name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        r += ']';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.element = function(node, options, level) {\n      var att, child, childNodeCount, firstChildNode, i, j, len, len1, name, prettySuppressed, r, ref, ref1, ref2;\n      level || (level = 0);\n      prettySuppressed = false;\n      r = '';\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r += this.indent(node, options, level) + '<' + node.name;\n      ref = node.attribs;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att, options, level);\n      }\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function(e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\n      })) {\n        if (options.allowEmpty) {\n          r += '>';\n          options.state = WriterState.CloseTag;\n          r += '</' + node.name + '>' + this.endline(node, options, level);\n        } else {\n          options.state = WriterState.CloseTag;\n          r += options.spaceBeforeSlash + '/>' + this.endline(node, options, level);\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && (firstChildNode.value != null)) {\n        r += '>';\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        r += this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        r += '</' + node.name + '>' + this.endline(node, options, level);\n      } else {\n        if (options.dontPrettyTextNodes) {\n          ref1 = node.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            if ((child.type === NodeType.Text || child.type === NodeType.Raw) && (child.value != null)) {\n              options.suppressPrettyCount++;\n              prettySuppressed = true;\n              break;\n            }\n          }\n        }\n        r += '>' + this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref2 = node.children;\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        r += this.indent(node, options, level) + '</' + node.name + '>';\n        if (prettySuppressed) {\n          options.suppressPrettyCount--;\n        }\n        r += this.endline(node, options, level);\n        options.state = WriterState.None;\n      }\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.writeChildNode = function(node, options, level) {\n      switch (node.type) {\n        case NodeType.CData:\n          return this.cdata(node, options, level);\n        case NodeType.Comment:\n          return this.comment(node, options, level);\n        case NodeType.Element:\n          return this.element(node, options, level);\n        case NodeType.Raw:\n          return this.raw(node, options, level);\n        case NodeType.Text:\n          return this.text(node, options, level);\n        case NodeType.ProcessingInstruction:\n          return this.processingInstruction(node, options, level);\n        case NodeType.Dummy:\n          return '';\n        case NodeType.Declaration:\n          return this.declaration(node, options, level);\n        case NodeType.DocType:\n          return this.docType(node, options, level);\n        case NodeType.AttributeDeclaration:\n          return this.dtdAttList(node, options, level);\n        case NodeType.ElementDeclaration:\n          return this.dtdElement(node, options, level);\n        case NodeType.EntityDeclaration:\n          return this.dtdEntity(node, options, level);\n        case NodeType.NotationDeclaration:\n          return this.dtdNotation(node, options, level);\n        default:\n          throw new Error(\"Unknown XML node type: \" + node.constructor.name);\n      }\n    };\n\n    XMLWriterBase.prototype.processingInstruction = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?';\n      options.state = WriterState.InsideTag;\n      r += node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.raw = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.text = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdAttList = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ATTLIST';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdElement = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ELEMENT';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name + ' ' + node.value;\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdEntity = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ENTITY';\n      options.state = WriterState.InsideTag;\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdNotation = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!NOTATION';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.openNode = function(node, options, level) {};\n\n    XMLWriterBase.prototype.closeNode = function(node, options, level) {};\n\n    XMLWriterBase.prototype.openAttribute = function(att, options, level) {};\n\n    XMLWriterBase.prototype.closeAttribute = function(att, options, level) {};\n\n    return XMLWriterBase;\n\n  })();\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringWriter, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStringWriter = (function(superClass) {\n    extend(XMLStringWriter, superClass);\n\n    function XMLStringWriter(options) {\n      XMLStringWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStringWriter.prototype.document = function(doc, options) {\n      var child, i, len, r, ref;\n      options = this.filterOptions(options);\n      r = '';\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        r += this.writeChildNode(child, options, 0);\n      }\n      if (options.pretty && r.slice(-options.newline.length) === options.newline) {\n        r = r.slice(0, -options.newline.length);\n      }\n      return r;\n    };\n\n    return XMLStringWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDOMConfiguration, XMLDOMImplementation, XMLDocument, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isPlainObject = require('./Utility').isPlainObject;\n\n  XMLDOMImplementation = require('./XMLDOMImplementation');\n\n  XMLDOMConfiguration = require('./XMLDOMConfiguration');\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  module.exports = XMLDocument = (function(superClass) {\n    extend(XMLDocument, superClass);\n\n    function XMLDocument(options) {\n      XMLDocument.__super__.constructor.call(this, null);\n      this.name = \"#document\";\n      this.type = NodeType.Document;\n      this.documentURI = null;\n      this.domConfig = new XMLDOMConfiguration();\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.stringify = new XMLStringifier(options);\n    }\n\n    Object.defineProperty(XMLDocument.prototype, 'implementation', {\n      value: new XMLDOMImplementation()\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'doctype', {\n      get: function() {\n        var child, i, len, ref;\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.DocType) {\n            return child;\n          }\n        }\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'documentElement', {\n      get: function() {\n        return this.rootObject || null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'inputEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'strictErrorChecking', {\n      get: function() {\n        return false;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlEncoding', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].encoding;\n        } else {\n          return null;\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlStandalone', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].standalone === 'yes';\n        } else {\n          return false;\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlVersion', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].version;\n        } else {\n          return \"1.0\";\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'URL', {\n      get: function() {\n        return this.documentURI;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'origin', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'compatMode', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'characterSet', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'contentType', {\n      get: function() {\n        return null;\n      }\n    });\n\n    XMLDocument.prototype.end = function(writer) {\n      var writerOptions;\n      writerOptions = {};\n      if (!writer) {\n        writer = this.options.writer;\n      } else if (isPlainObject(writer)) {\n        writerOptions = writer;\n        writer = this.options.writer;\n      }\n      return writer.document(this, writer.filterOptions(writerOptions));\n    };\n\n    XMLDocument.prototype.toString = function(options) {\n      return this.options.writer.document(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLDocument.prototype.createElement = function(tagName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createDocumentFragment = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createTextNode = function(data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createComment = function(data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createCDATASection = function(data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createProcessingInstruction = function(target, data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createAttribute = function(name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createEntityReference = function(name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementsByTagName = function(tagname) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.importNode = function(importedNode, deep) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createElementNS = function(namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createAttributeNS = function(namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementById = function(elementId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.adoptNode = function(source) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.normalizeDocument = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.renameNode = function(node, namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementsByClassName = function(classNames) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createEvent = function(eventInterface) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createRange = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createNodeIterator = function(root, whatToShow, filter) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createTreeWalker = function(root, whatToShow, filter) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    return XMLDocument;\n\n  })(XMLNode);\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocument, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, getValue, isFunction, isObject, isPlainObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject, getValue = ref.getValue;\n\n  NodeType = require('./NodeType');\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLElement = require('./XMLElement');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  WriterState = require('./WriterState');\n\n  module.exports = XMLDocumentCB = (function() {\n    function XMLDocumentCB(options, onData, onEnd) {\n      var writerOptions;\n      this.name = \"?xml\";\n      this.type = NodeType.Document;\n      options || (options = {});\n      writerOptions = {};\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      } else if (isPlainObject(options.writer)) {\n        writerOptions = options.writer;\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.writer = options.writer;\n      this.writerOptions = this.writer.filterOptions(writerOptions);\n      this.stringify = new XMLStringifier(options);\n      this.onDataCallback = onData || function() {};\n      this.onEndCallback = onEnd || function() {};\n      this.currentNode = null;\n      this.currentLevel = -1;\n      this.openTags = {};\n      this.documentStarted = false;\n      this.documentCompleted = false;\n      this.root = null;\n    }\n\n    XMLDocumentCB.prototype.createChildNode = function(node) {\n      var att, attName, attributes, child, i, len, ref1, ref2;\n      switch (node.type) {\n        case NodeType.CData:\n          this.cdata(node.value);\n          break;\n        case NodeType.Comment:\n          this.comment(node.value);\n          break;\n        case NodeType.Element:\n          attributes = {};\n          ref1 = node.attribs;\n          for (attName in ref1) {\n            if (!hasProp.call(ref1, attName)) continue;\n            att = ref1[attName];\n            attributes[attName] = att.value;\n          }\n          this.node(node.name, attributes);\n          break;\n        case NodeType.Dummy:\n          this.dummy();\n          break;\n        case NodeType.Raw:\n          this.raw(node.value);\n          break;\n        case NodeType.Text:\n          this.text(node.value);\n          break;\n        case NodeType.ProcessingInstruction:\n          this.instruction(node.target, node.value);\n          break;\n        default:\n          throw new Error(\"This XML node type is not supported in a JS object: \" + node.constructor.name);\n      }\n      ref2 = node.children;\n      for (i = 0, len = ref2.length; i < len; i++) {\n        child = ref2[i];\n        this.createChildNode(child);\n        if (child.type === NodeType.Element) {\n          this.up();\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dummy = function() {\n      return this;\n    };\n\n    XMLDocumentCB.prototype.node = function(name, attributes, text) {\n      var ref1;\n      if (name == null) {\n        throw new Error(\"Missing node name.\");\n      }\n      if (this.root && this.currentLevel === -1) {\n        throw new Error(\"Document can only have one root node. \" + this.debugInfo(name));\n      }\n      this.openCurrent();\n      name = getValue(name);\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      this.currentNode = new XMLElement(this, name, attributes);\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      if (text != null) {\n        this.text(text);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.element = function(name, attributes, text) {\n      var child, i, len, oldValidationFlag, ref1, root;\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        this.dtdElement.apply(this, arguments);\n      } else {\n        if (Array.isArray(name) || isObject(name) || isFunction(name)) {\n          oldValidationFlag = this.options.noValidation;\n          this.options.noValidation = true;\n          root = new XMLDocument(this.options).element('TEMP_ROOT');\n          root.element(name);\n          this.options.noValidation = oldValidationFlag;\n          ref1 = root.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            this.createChildNode(child);\n            if (child.type === NodeType.Element) {\n              this.up();\n            }\n          }\n        } else {\n          this.node(name, attributes, text);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (!this.currentNode || this.currentNode.children) {\n        throw new Error(\"att() can only be used immediately after an ele() call in callback mode. \" + this.debugInfo(name));\n      }\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (this.options.keepNullAttributes && (value == null)) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, \"\");\n        } else if (value != null) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.text = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLText(this, value);\n      this.onData(this.writer.text(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.cdata = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLCData(this, value);\n      this.onData(this.writer.cdata(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.comment = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLComment(this, value);\n      this.onData(this.writer.comment(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.raw = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLRaw(this, value);\n      this.onData(this.writer.raw(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.instruction = function(target, value) {\n      var i, insTarget, insValue, len, node;\n      this.openCurrent();\n      if (target != null) {\n        target = getValue(target);\n      }\n      if (value != null) {\n        value = getValue(value);\n      }\n      if (Array.isArray(target)) {\n        for (i = 0, len = target.length; i < len; i++) {\n          insTarget = target[i];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        node = new XMLProcessingInstruction(this, target, value);\n        this.onData(this.writer.processingInstruction(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.declaration = function(version, encoding, standalone) {\n      var node;\n      this.openCurrent();\n      if (this.documentStarted) {\n        throw new Error(\"declaration() must be the first node.\");\n      }\n      node = new XMLDeclaration(this, version, encoding, standalone);\n      this.onData(this.writer.declaration(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.doctype = function(root, pubID, sysID) {\n      this.openCurrent();\n      if (root == null) {\n        throw new Error(\"Missing root node name.\");\n      }\n      if (this.root) {\n        throw new Error(\"dtd() must come before the root node.\");\n      }\n      this.currentNode = new XMLDocType(this, pubID, sysID);\n      this.currentNode.rootNodeName = root;\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dtdElement = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDElement(this, name, value);\n      this.onData(this.writer.dtdElement(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.onData(this.writer.dtdAttList(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.entity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, false, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.pEntity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, true, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.notation = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDNotation(this, name, value);\n      this.onData(this.writer.dtdNotation(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.up = function() {\n      if (this.currentLevel < 0) {\n        throw new Error(\"The document node has no parent.\");\n      }\n      if (this.currentNode) {\n        if (this.currentNode.children) {\n          this.closeNode(this.currentNode);\n        } else {\n          this.openNode(this.currentNode);\n        }\n        this.currentNode = null;\n      } else {\n        this.closeNode(this.openTags[this.currentLevel]);\n      }\n      delete this.openTags[this.currentLevel];\n      this.currentLevel--;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.end = function() {\n      while (this.currentLevel >= 0) {\n        this.up();\n      }\n      return this.onEnd();\n    };\n\n    XMLDocumentCB.prototype.openCurrent = function() {\n      if (this.currentNode) {\n        this.currentNode.children = true;\n        return this.openNode(this.currentNode);\n      }\n    };\n\n    XMLDocumentCB.prototype.openNode = function(node) {\n      var att, chunk, name, ref1;\n      if (!node.isOpen) {\n        if (!this.root && this.currentLevel === 0 && node.type === NodeType.Element) {\n          this.root = node;\n        }\n        chunk = '';\n        if (node.type === NodeType.Element) {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<' + node.name;\n          ref1 = node.attribs;\n          for (name in ref1) {\n            if (!hasProp.call(ref1, name)) continue;\n            att = ref1[name];\n            chunk += this.writer.attribute(att, this.writerOptions, this.currentLevel);\n          }\n          chunk += (node.children ? '>' : '/>') + this.writer.endline(node, this.writerOptions, this.currentLevel);\n          this.writerOptions.state = WriterState.InsideTag;\n        } else {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<!DOCTYPE ' + node.rootNodeName;\n          if (node.pubID && node.sysID) {\n            chunk += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n          } else if (node.sysID) {\n            chunk += ' SYSTEM \"' + node.sysID + '\"';\n          }\n          if (node.children) {\n            chunk += ' [';\n            this.writerOptions.state = WriterState.InsideTag;\n          } else {\n            this.writerOptions.state = WriterState.CloseTag;\n            chunk += '>';\n          }\n          chunk += this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n        this.onData(chunk, this.currentLevel);\n        return node.isOpen = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.closeNode = function(node) {\n      var chunk;\n      if (!node.isClosed) {\n        chunk = '';\n        this.writerOptions.state = WriterState.CloseTag;\n        if (node.type === NodeType.Element) {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '</' + node.name + '>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\n        } else {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + ']>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n        this.writerOptions.state = WriterState.None;\n        this.onData(chunk, this.currentLevel);\n        return node.isClosed = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.onData = function(chunk, level) {\n      this.documentStarted = true;\n      return this.onDataCallback(chunk, level + 1);\n    };\n\n    XMLDocumentCB.prototype.onEnd = function() {\n      this.documentCompleted = true;\n      return this.onEndCallback();\n    };\n\n    XMLDocumentCB.prototype.debugInfo = function(name) {\n      if (name == null) {\n        return \"\";\n      } else {\n        return \"node: <\" + name + \">\";\n      }\n    };\n\n    XMLDocumentCB.prototype.ele = function() {\n      return this.element.apply(this, arguments);\n    };\n\n    XMLDocumentCB.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLDocumentCB.prototype.dtd = function(root, pubID, sysID) {\n      return this.doctype(root, pubID, sysID);\n    };\n\n    XMLDocumentCB.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLDocumentCB.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.att = function() {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.a = function() {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocumentCB.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocumentCB.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    return XMLDocumentCB;\n\n  })();\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLStreamWriter, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  WriterState = require('./WriterState');\n\n  module.exports = XMLStreamWriter = (function(superClass) {\n    extend(XMLStreamWriter, superClass);\n\n    function XMLStreamWriter(stream, options) {\n      this.stream = stream;\n      XMLStreamWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStreamWriter.prototype.endline = function(node, options, level) {\n      if (node.isLastRootNode && options.state === WriterState.CloseTag) {\n        return '';\n      } else {\n        return XMLStreamWriter.__super__.endline.call(this, node, options, level);\n      }\n    };\n\n    XMLStreamWriter.prototype.document = function(doc, options) {\n      var child, i, j, k, len, len1, ref, ref1, results;\n      ref = doc.children;\n      for (i = j = 0, len = ref.length; j < len; i = ++j) {\n        child = ref[i];\n        child.isLastRootNode = i === doc.children.length - 1;\n      }\n      options = this.filterOptions(options);\n      ref1 = doc.children;\n      results = [];\n      for (k = 0, len1 = ref1.length; k < len1; k++) {\n        child = ref1[k];\n        results.push(this.writeChildNode(child, options, 0));\n      }\n      return results;\n    };\n\n    XMLStreamWriter.prototype.attribute = function(att, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.attribute.call(this, att, options, level));\n    };\n\n    XMLStreamWriter.prototype.cdata = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.cdata.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.comment = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.comment.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.declaration = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.declaration.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.docType = function(node, options, level) {\n      var child, j, len, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      this.stream.write(this.indent(node, options, level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (j = 0, len = ref.length; j < len; j++) {\n          child = ref[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        this.stream.write(']');\n      }\n      options.state = WriterState.CloseTag;\n      this.stream.write(options.spaceBeforeSlash + '>');\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    };\n\n    XMLStreamWriter.prototype.element = function(node, options, level) {\n      var att, child, childNodeCount, firstChildNode, j, len, name, prettySuppressed, ref, ref1;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      this.stream.write(this.indent(node, options, level) + '<' + node.name);\n      ref = node.attribs;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        this.attribute(att, options, level);\n      }\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function(e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\n      })) {\n        if (options.allowEmpty) {\n          this.stream.write('>');\n          options.state = WriterState.CloseTag;\n          this.stream.write('</' + node.name + '>');\n        } else {\n          options.state = WriterState.CloseTag;\n          this.stream.write(options.spaceBeforeSlash + '/>');\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && (firstChildNode.value != null)) {\n        this.stream.write('>');\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref1 = node.children;\n        for (j = 0, len = ref1.length; j < len; j++) {\n          child = ref1[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        this.stream.write(this.indent(node, options, level) + '</' + node.name + '>');\n      }\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    };\n\n    XMLStreamWriter.prototype.processingInstruction = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.processingInstruction.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.raw = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.raw.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.text = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.text.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdAttList = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdAttList.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdElement = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdElement.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdEntity = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdEntity.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdNotation = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdNotation.call(this, node, options, level));\n    };\n\n    return XMLStreamWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLDOMImplementation, XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction, ref;\n\n  ref = require('./Utility'), assign = ref.assign, isFunction = ref.isFunction;\n\n  XMLDOMImplementation = require('./XMLDOMImplementation');\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLDocumentCB = require('./XMLDocumentCB');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  XMLStreamWriter = require('./XMLStreamWriter');\n\n  NodeType = require('./NodeType');\n\n  WriterState = require('./WriterState');\n\n  module.exports.create = function(name, xmldec, doctype, options) {\n    var doc, root;\n    if (name == null) {\n      throw new Error(\"Root element needs a name.\");\n    }\n    options = assign({}, xmldec, doctype, options);\n    doc = new XMLDocument(options);\n    root = doc.element(name);\n    if (!options.headless) {\n      doc.declaration(options);\n      if ((options.pubID != null) || (options.sysID != null)) {\n        doc.dtd(options);\n      }\n    }\n    return root;\n  };\n\n  module.exports.begin = function(options, onData, onEnd) {\n    var ref1;\n    if (isFunction(options)) {\n      ref1 = [options, onData], onData = ref1[0], onEnd = ref1[1];\n      options = {};\n    }\n    if (onData) {\n      return new XMLDocumentCB(options, onData, onEnd);\n    } else {\n      return new XMLDocument(options);\n    }\n  };\n\n  module.exports.stringWriter = function(options) {\n    return new XMLStringWriter(options);\n  };\n\n  module.exports.streamWriter = function(stream, options) {\n    return new XMLStreamWriter(stream, options);\n  };\n\n  module.exports.implementation = new XMLDOMImplementation();\n\n  module.exports.nodeType = NodeType;\n\n  module.exports.writerState = WriterState;\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, escapeCDATA, requiresCDATA, wrapCDATA,\n    hasProp = {}.hasOwnProperty;\n\n  builder = require('xmlbuilder');\n\n  defaults = require('./defaults').defaults;\n\n  requiresCDATA = function(entry) {\n    return typeof entry === \"string\" && (entry.indexOf('&') >= 0 || entry.indexOf('>') >= 0 || entry.indexOf('<') >= 0);\n  };\n\n  wrapCDATA = function(entry) {\n    return \"<![CDATA[\" + (escapeCDATA(entry)) + \"]]>\";\n  };\n\n  escapeCDATA = function(entry) {\n    return entry.replace(']]>', ']]]]><![CDATA[>');\n  };\n\n  exports.Builder = (function() {\n    function Builder(opts) {\n      var key, ref, value;\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n    }\n\n    Builder.prototype.buildObject = function(rootObj) {\n      var attrkey, charkey, render, rootElement, rootName;\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      if ((Object.keys(rootObj).length === 1) && (this.options.rootName === defaults['0.2'].rootName)) {\n        rootName = Object.keys(rootObj)[0];\n        rootObj = rootObj[rootName];\n      } else {\n        rootName = this.options.rootName;\n      }\n      render = (function(_this) {\n        return function(element, obj) {\n          var attr, child, entry, index, key, value;\n          if (typeof obj !== 'object') {\n            if (_this.options.cdata && requiresCDATA(obj)) {\n              element.raw(wrapCDATA(obj));\n            } else {\n              element.txt(obj);\n            }\n          } else if (Array.isArray(obj)) {\n            for (index in obj) {\n              if (!hasProp.call(obj, index)) continue;\n              child = obj[index];\n              for (key in child) {\n                entry = child[key];\n                element = render(element.ele(key), entry).up();\n              }\n            }\n          } else {\n            for (key in obj) {\n              if (!hasProp.call(obj, key)) continue;\n              child = obj[key];\n              if (key === attrkey) {\n                if (typeof child === \"object\") {\n                  for (attr in child) {\n                    value = child[attr];\n                    element = element.att(attr, value);\n                  }\n                }\n              } else if (key === charkey) {\n                if (_this.options.cdata && requiresCDATA(child)) {\n                  element = element.raw(wrapCDATA(child));\n                } else {\n                  element = element.txt(child);\n                }\n              } else if (Array.isArray(child)) {\n                for (index in child) {\n                  if (!hasProp.call(child, index)) continue;\n                  entry = child[index];\n                  if (typeof entry === 'string') {\n                    if (_this.options.cdata && requiresCDATA(entry)) {\n                      element = element.ele(key).raw(wrapCDATA(entry)).up();\n                    } else {\n                      element = element.ele(key, entry).up();\n                    }\n                  } else {\n                    element = render(element.ele(key), entry).up();\n                  }\n                }\n              } else if (typeof child === \"object\") {\n                element = render(element.ele(key), child).up();\n              } else {\n                if (typeof child === 'string' && _this.options.cdata && requiresCDATA(child)) {\n                  element = element.ele(key).raw(wrapCDATA(child)).up();\n                } else {\n                  if (child == null) {\n                    child = '';\n                  }\n                  element = element.ele(key, child.toString()).up();\n                }\n              }\n            }\n          }\n          return element;\n        };\n      })(this);\n      rootElement = builder.create(rootName, this.options.xmldec, this.options.doctype, {\n        headless: this.options.headless,\n        allowSurrogateChars: this.options.allowSurrogateChars\n      });\n      return render(rootElement, rootObj).end(this.options.renderOpts);\n    };\n\n    return Builder;\n\n  })();\n\n}).call(this);\n", ";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  exports.stripBOM = function(str) {\n    if (str[0] === '\\uFEFF') {\n      return str.substring(1);\n    } else {\n      return str;\n    }\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var prefixMatch;\n\n  prefixMatch = new RegExp(/(?!xmlns)^.*:/);\n\n  exports.normalize = function(str) {\n    return str.toLowerCase();\n  };\n\n  exports.firstCharLowerCase = function(str) {\n    return str.charAt(0).toLowerCase() + str.slice(1);\n  };\n\n  exports.stripPrefix = function(str) {\n    return str.replace(prefixMatch, '');\n  };\n\n  exports.parseNumbers = function(str) {\n    if (!isNaN(str)) {\n      str = str % 1 === 0 ? parseInt(str, 10) : parseFloat(str);\n    }\n    return str;\n  };\n\n  exports.parseBooleans = function(str) {\n    if (/^(?:true|false)$/i.test(str)) {\n      str = str.toLowerCase() === 'true';\n    }\n    return str;\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var bom, defaults, events, isEmpty, processItem, processors, sax, setImmediate,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  sax = require('sax');\n\n  events = require('events');\n\n  bom = require('./bom');\n\n  processors = require('./processors');\n\n  setImmediate = require('timers').setImmediate;\n\n  defaults = require('./defaults').defaults;\n\n  isEmpty = function(thing) {\n    return typeof thing === \"object\" && (thing != null) && Object.keys(thing).length === 0;\n  };\n\n  processItem = function(processors, item, key) {\n    var i, len, process;\n    for (i = 0, len = processors.length; i < len; i++) {\n      process = processors[i];\n      item = process(item, key);\n    }\n    return item;\n  };\n\n  exports.Parser = (function(superClass) {\n    extend(Parser, superClass);\n\n    function Parser(opts) {\n      this.parseStringPromise = bind(this.parseStringPromise, this);\n      this.parseString = bind(this.parseString, this);\n      this.reset = bind(this.reset, this);\n      this.assignOrPush = bind(this.assignOrPush, this);\n      this.processAsync = bind(this.processAsync, this);\n      var key, ref, value;\n      if (!(this instanceof exports.Parser)) {\n        return new exports.Parser(opts);\n      }\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n      if (this.options.xmlns) {\n        this.options.xmlnskey = this.options.attrkey + \"ns\";\n      }\n      if (this.options.normalizeTags) {\n        if (!this.options.tagNameProcessors) {\n          this.options.tagNameProcessors = [];\n        }\n        this.options.tagNameProcessors.unshift(processors.normalize);\n      }\n      this.reset();\n    }\n\n    Parser.prototype.processAsync = function() {\n      var chunk, err;\n      try {\n        if (this.remaining.length <= this.options.chunkSize) {\n          chunk = this.remaining;\n          this.remaining = '';\n          this.saxParser = this.saxParser.write(chunk);\n          return this.saxParser.close();\n        } else {\n          chunk = this.remaining.substr(0, this.options.chunkSize);\n          this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length);\n          this.saxParser = this.saxParser.write(chunk);\n          return setImmediate(this.processAsync);\n        }\n      } catch (error1) {\n        err = error1;\n        if (!this.saxParser.errThrown) {\n          this.saxParser.errThrown = true;\n          return this.emit(err);\n        }\n      }\n    };\n\n    Parser.prototype.assignOrPush = function(obj, key, newValue) {\n      if (!(key in obj)) {\n        if (!this.options.explicitArray) {\n          return obj[key] = newValue;\n        } else {\n          return obj[key] = [newValue];\n        }\n      } else {\n        if (!(obj[key] instanceof Array)) {\n          obj[key] = [obj[key]];\n        }\n        return obj[key].push(newValue);\n      }\n    };\n\n    Parser.prototype.reset = function() {\n      var attrkey, charkey, ontext, stack;\n      this.removeAllListeners();\n      this.saxParser = sax.parser(this.options.strict, {\n        trim: false,\n        normalize: false,\n        xmlns: this.options.xmlns\n      });\n      this.saxParser.errThrown = false;\n      this.saxParser.onerror = (function(_this) {\n        return function(error) {\n          _this.saxParser.resume();\n          if (!_this.saxParser.errThrown) {\n            _this.saxParser.errThrown = true;\n            return _this.emit(\"error\", error);\n          }\n        };\n      })(this);\n      this.saxParser.onend = (function(_this) {\n        return function() {\n          if (!_this.saxParser.ended) {\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      this.saxParser.ended = false;\n      this.EXPLICIT_CHARKEY = this.options.explicitCharkey;\n      this.resultObject = null;\n      stack = [];\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      this.saxParser.onopentag = (function(_this) {\n        return function(node) {\n          var key, newValue, obj, processedKey, ref;\n          obj = {};\n          obj[charkey] = \"\";\n          if (!_this.options.ignoreAttrs) {\n            ref = node.attributes;\n            for (key in ref) {\n              if (!hasProp.call(ref, key)) continue;\n              if (!(attrkey in obj) && !_this.options.mergeAttrs) {\n                obj[attrkey] = {};\n              }\n              newValue = _this.options.attrValueProcessors ? processItem(_this.options.attrValueProcessors, node.attributes[key], key) : node.attributes[key];\n              processedKey = _this.options.attrNameProcessors ? processItem(_this.options.attrNameProcessors, key) : key;\n              if (_this.options.mergeAttrs) {\n                _this.assignOrPush(obj, processedKey, newValue);\n              } else {\n                obj[attrkey][processedKey] = newValue;\n              }\n            }\n          }\n          obj[\"#name\"] = _this.options.tagNameProcessors ? processItem(_this.options.tagNameProcessors, node.name) : node.name;\n          if (_this.options.xmlns) {\n            obj[_this.options.xmlnskey] = {\n              uri: node.uri,\n              local: node.local\n            };\n          }\n          return stack.push(obj);\n        };\n      })(this);\n      this.saxParser.onclosetag = (function(_this) {\n        return function() {\n          var cdata, emptyStr, key, node, nodeName, obj, objClone, old, s, xpath;\n          obj = stack.pop();\n          nodeName = obj[\"#name\"];\n          if (!_this.options.explicitChildren || !_this.options.preserveChildrenOrder) {\n            delete obj[\"#name\"];\n          }\n          if (obj.cdata === true) {\n            cdata = obj.cdata;\n            delete obj.cdata;\n          }\n          s = stack[stack.length - 1];\n          if (obj[charkey].match(/^\\s*$/) && !cdata) {\n            emptyStr = obj[charkey];\n            delete obj[charkey];\n          } else {\n            if (_this.options.trim) {\n              obj[charkey] = obj[charkey].trim();\n            }\n            if (_this.options.normalize) {\n              obj[charkey] = obj[charkey].replace(/\\s{2,}/g, \" \").trim();\n            }\n            obj[charkey] = _this.options.valueProcessors ? processItem(_this.options.valueProcessors, obj[charkey], nodeName) : obj[charkey];\n            if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n              obj = obj[charkey];\n            }\n          }\n          if (isEmpty(obj)) {\n            obj = _this.options.emptyTag !== '' ? _this.options.emptyTag : emptyStr;\n          }\n          if (_this.options.validator != null) {\n            xpath = \"/\" + ((function() {\n              var i, len, results;\n              results = [];\n              for (i = 0, len = stack.length; i < len; i++) {\n                node = stack[i];\n                results.push(node[\"#name\"]);\n              }\n              return results;\n            })()).concat(nodeName).join(\"/\");\n            (function() {\n              var err;\n              try {\n                return obj = _this.options.validator(xpath, s && s[nodeName], obj);\n              } catch (error1) {\n                err = error1;\n                return _this.emit(\"error\", err);\n              }\n            })();\n          }\n          if (_this.options.explicitChildren && !_this.options.mergeAttrs && typeof obj === 'object') {\n            if (!_this.options.preserveChildrenOrder) {\n              node = {};\n              if (_this.options.attrkey in obj) {\n                node[_this.options.attrkey] = obj[_this.options.attrkey];\n                delete obj[_this.options.attrkey];\n              }\n              if (!_this.options.charsAsChildren && _this.options.charkey in obj) {\n                node[_this.options.charkey] = obj[_this.options.charkey];\n                delete obj[_this.options.charkey];\n              }\n              if (Object.getOwnPropertyNames(obj).length > 0) {\n                node[_this.options.childkey] = obj;\n              }\n              obj = node;\n            } else if (s) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              objClone = {};\n              for (key in obj) {\n                if (!hasProp.call(obj, key)) continue;\n                objClone[key] = obj[key];\n              }\n              s[_this.options.childkey].push(objClone);\n              delete obj[\"#name\"];\n              if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n                obj = obj[charkey];\n              }\n            }\n          }\n          if (stack.length > 0) {\n            return _this.assignOrPush(s, nodeName, obj);\n          } else {\n            if (_this.options.explicitRoot) {\n              old = obj;\n              obj = {};\n              obj[nodeName] = old;\n            }\n            _this.resultObject = obj;\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      ontext = (function(_this) {\n        return function(text) {\n          var charChild, s;\n          s = stack[stack.length - 1];\n          if (s) {\n            s[charkey] += text;\n            if (_this.options.explicitChildren && _this.options.preserveChildrenOrder && _this.options.charsAsChildren && (_this.options.includeWhiteChars || text.replace(/\\\\n/g, '').trim() !== '')) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              charChild = {\n                '#name': '__text__'\n              };\n              charChild[charkey] = text;\n              if (_this.options.normalize) {\n                charChild[charkey] = charChild[charkey].replace(/\\s{2,}/g, \" \").trim();\n              }\n              s[_this.options.childkey].push(charChild);\n            }\n            return s;\n          }\n        };\n      })(this);\n      this.saxParser.ontext = ontext;\n      return this.saxParser.oncdata = (function(_this) {\n        return function(text) {\n          var s;\n          s = ontext(text);\n          if (s) {\n            return s.cdata = true;\n          }\n        };\n      })(this);\n    };\n\n    Parser.prototype.parseString = function(str, cb) {\n      var err;\n      if ((cb != null) && typeof cb === \"function\") {\n        this.on(\"end\", function(result) {\n          this.reset();\n          return cb(null, result);\n        });\n        this.on(\"error\", function(err) {\n          this.reset();\n          return cb(err);\n        });\n      }\n      try {\n        str = str.toString();\n        if (str.trim() === '') {\n          this.emit(\"end\", null);\n          return true;\n        }\n        str = bom.stripBOM(str);\n        if (this.options.async) {\n          this.remaining = str;\n          setImmediate(this.processAsync);\n          return this.saxParser;\n        }\n        return this.saxParser.write(str).close();\n      } catch (error1) {\n        err = error1;\n        if (!(this.saxParser.errThrown || this.saxParser.ended)) {\n          this.emit('error', err);\n          return this.saxParser.errThrown = true;\n        } else if (this.saxParser.ended) {\n          throw err;\n        }\n      }\n    };\n\n    Parser.prototype.parseStringPromise = function(str) {\n      return new Promise((function(_this) {\n        return function(resolve, reject) {\n          return _this.parseString(str, function(err, value) {\n            if (err) {\n              return reject(err);\n            } else {\n              return resolve(value);\n            }\n          });\n        };\n      })(this));\n    };\n\n    return Parser;\n\n  })(events);\n\n  exports.parseString = function(str, a, b) {\n    var cb, options, parser;\n    if (b != null) {\n      if (typeof b === 'function') {\n        cb = b;\n      }\n      if (typeof a === 'object') {\n        options = a;\n      }\n    } else {\n      if (typeof a === 'function') {\n        cb = a;\n      }\n      options = {};\n    }\n    parser = new exports.Parser(options);\n    return parser.parseString(str, cb);\n  };\n\n  exports.parseStringPromise = function(str, a) {\n    var options, parser;\n    if (typeof a === 'object') {\n      options = a;\n    }\n    parser = new exports.Parser(options);\n    return parser.parseStringPromise(str);\n  };\n\n}).call(this);\n", "// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, parser, processors,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  defaults = require('./defaults');\n\n  builder = require('./builder');\n\n  parser = require('./parser');\n\n  processors = require('./processors');\n\n  exports.defaults = defaults.defaults;\n\n  exports.processors = processors;\n\n  exports.ValidationError = (function(superClass) {\n    extend(ValidationError, superClass);\n\n    function ValidationError(message) {\n      this.message = message;\n    }\n\n    return ValidationError;\n\n  })(Error);\n\n  exports.Builder = builder.Builder;\n\n  exports.Parser = parser.Parser;\n\n  exports.parseString = parser.parseString;\n\n  exports.parseStringPromise = parser.parseStringPromise;\n\n}).call(this);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Time.js.map", null, null, null, null, null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=attributes.js.map", null, null, null, null, null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=trace_state.js.map", null, null, null, null, null, null, null, null, null, null, null, null, "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { Span, SpanContext, Attributes, Status, TraceFlags } from \"@opentelemetry/api\";\n\n/**\n * A no-op implementation of Span that can safely be used without side-effects.\n */\nexport class NoOpSpan implements Span {\n  /**\n   * Returns the SpanContext associated with this Span.\n   */\n  context(): SpanContext {\n    return {\n      spanId: \"\",\n      traceId: \"\",\n      traceFlags: TraceFlags.NONE\n    };\n  }\n\n  /**\n   * Marks the end of Span execution.\n   * @param _endTime The time to use as the Span's end time. Defaults to\n   * the current time.\n   */\n  end(_endTime?: number): void {\n    /* Noop */\n  }\n\n  /**\n   * Sets an attribute on the Span\n   * @param _key the attribute key\n   * @param _value the attribute value\n   */\n  setAttribute(_key: string, _value: unknown): this {\n    return this;\n  }\n\n  /**\n   * Sets attributes on the Span\n   * @param _attributes the attributes to add\n   */\n  setAttributes(_attributes: Attributes): this {\n    return this;\n  }\n\n  /**\n   * Adds an event to the Span\n   * @param _name The name of the event\n   * @param _attributes The associated attributes to add for this event\n   */\n  addEvent(_name: string, _attributes?: Attributes): this {\n    return this;\n  }\n\n  /**\n   * Sets a status on the span. Overrides the default of CanonicalCode.OK.\n   * @param _status The status to set.\n   */\n  setStatus(_status: Status): this {\n    return this;\n  }\n\n  /**\n   * Updates the name of the Span\n   * @param _name the new Span name\n   */\n  updateName(_name: string): this {\n    return this;\n  }\n\n  /**\n   * Returns whether this span will be recorded\n   */\n  isRecording(): boolean {\n    return false;\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { NoOpSpan } from \"./noOpSpan\";\nimport { Tracer, Span, SpanOptions } from \"@opentelemetry/api\";\n\n/**\n * A no-op implementation of Tracer that can be used when tracing\n * is disabled.\n */\nexport class NoOpTracer implements Tracer {\n  /**\n   * Starts a new Span.\n   * @param _name The name of the span.\n   * @param _options The SpanOptions used during Span creation.\n   */\n  startSpan(_name: string, _options?: SpanOptions): Span {\n    return new NoOpSpan();\n  }\n\n  /**\n   * Returns the current Span from the current context, if available.\n   */\n  getCurrentSpan(): Span {\n    return new NoOpSpan();\n  }\n\n  /**\n   * Executes the given function within the context provided by a Span.\n   * @param _span The span that provides the context.\n   * @param fn The function to be executed.\n   */\n  withSpan<T extends (...args: unknown[]) => ReturnType<T>>(_span: Span, fn: T): ReturnType<T> {\n    return fn();\n  }\n\n  /**\n   * Bind a Span as the target's scope\n   * @param target An object to bind the scope.\n   * @param _span A specific Span to use. Otherwise, use the current one.\n   */\n  bind<T>(target: T, _span?: Span): T {\n    return target;\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport function getGlobalObject(): any {\n  return global;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { Tracer } from \"@opentelemetry/api\";\nimport { getGlobalObject } from \"./global\";\n\n// V1 = OpenTelemetry 0.1\n// V2 = OpenTelemetry 0.2\n// V3 = OpenTelemetry 0.6.1\nconst GLOBAL_TRACER_VERSION = 3;\n// preview5 shipped with @azure/core-tracing.tracerCache\n// and didn't have smart detection for collisions\nconst GLOBAL_TRACER_SYMBOL = Symbol.for(\"@azure/core-tracing.tracerCache2\");\n\nexport interface TracerCache {\n  version: number;\n  tracer?: Tracer;\n}\n\nlet cache: TracerCache;\n\nfunction loadTracerCache(): void {\n  const globalObj = getGlobalObject();\n  const existingCache: TracerCache = globalObj[GLOBAL_TRACER_SYMBOL];\n  let setGlobalCache = true;\n  if (existingCache) {\n    if (existingCache.version === GLOBAL_TRACER_VERSION) {\n      cache = existingCache;\n    } else {\n      setGlobalCache = false;\n      if (existingCache.tracer) {\n        throw new Error(\n          `Two incompatible versions of @azure/core-tracing have been loaded.\n          This library is ${GLOBAL_TRACER_VERSION}, existing is ${existingCache.version}.`\n        );\n      }\n    }\n  }\n\n  if (!cache) {\n    cache = {\n      tracer: undefined,\n      version: GLOBAL_TRACER_VERSION\n    };\n  }\n  if (setGlobalCache) {\n    globalObj[GLOBAL_TRACER_SYMBOL] = cache;\n  }\n}\n\nexport function getCache(): TracerCache {\n  if (!cache) {\n    loadTracerCache();\n  }\n  return cache;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { NoOpTracer } from \"./tracers/noop/noOpTracer\";\nimport { Tracer } from \"@opentelemetry/api\";\nimport { getCache } from \"./utils/cache\";\n\nlet defaultTracer: Tracer;\n\nfunction getDefaultTracer(): Tracer {\n  if (!defaultTracer) {\n    defaultTracer = new NoOpTracer();\n  }\n  return defaultTracer;\n}\n\n/**\n * Sets the global tracer, enabling tracing for the Azure SDK.\n * @param tracer An OpenTelemetry Tracer instance.\n */\nexport function setTracer(tracer: Tracer): void {\n  const cache = getCache();\n  cache.tracer = tracer;\n}\n\n/**\n * Retrieves the active tracer, or returns a\n * no-op implementation if one is not set.\n */\nexport function getTracer(): Tracer {\n  const cache = getCache();\n  if (!cache.tracer) {\n    return getDefaultTracer();\n  }\n  return cache.tracer;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { TraceState } from \"@opentelemetry/api\";\n\n/**\n * @ignore\n * @internal\n */\nexport class OpenCensusTraceStateWrapper implements TraceState {\n  private readonly _state?: string;\n\n  constructor(state?: string) {\n    this._state = state;\n  }\n\n  get(_key: string): string | undefined {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  set(_key: string, _value: string): void {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  unset(_key: string): void {\n    throw new Error(\"Method not implemented\");\n  }\n\n  serialize(): string {\n    return this._state || \"\";\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { SpanContext, Span, SpanOptions, Attributes, Status, TraceFlags } from \"@opentelemetry/api\";\nimport { OpenCensusTraceStateWrapper } from \"./openCensusTraceStateWrapper\";\nimport { OpenCensusTracerWrapper } from \"./openCensusTracerWrapper\";\nimport { Attributes as OpenCensusAttributes, Span as OpenCensusSpan } from \"@opencensus/web-types\";\n\nfunction isWrappedSpan(span?: Span | SpanContext | null): span is OpenCensusSpanWrapper {\n  return !!span && (span as OpenCensusSpanWrapper).getWrappedSpan !== undefined;\n}\n\nfunction isTracer(\n  tracerOrSpan: OpenCensusTracerWrapper | OpenCensusSpan\n): tracerOrSpan is OpenCensusTracerWrapper {\n  return (tracerOrSpan as OpenCensusTracerWrapper).getWrappedTracer !== undefined;\n}\n\n/**\n * An implementation of OpenTelemetry Span that wraps an OpenCensus Span.\n */\nexport class OpenCensusSpanWrapper implements Span {\n  private _span: OpenCensusSpan;\n\n  /**\n   * The underlying OpenCensus Span\n   */\n  public getWrappedSpan(): OpenCensusSpan {\n    return this._span;\n  }\n\n  /**\n   * Wraps an existing OpenCensus Span\n   * @param span A Span or RootSpan from OpenCensus\n   */\n  constructor(span: OpenCensusSpan);\n  /**\n   * Create a new OpenCensus Span and wrap it.\n   * @param tracer The OpenCensus tracer that has been wrapped in OpenCensusTracerWrapper\n   * @param name The name of the Span\n   * @param options Options for the Span\n   */\n  constructor(tracer: OpenCensusTracerWrapper, name: string, options?: SpanOptions);\n  constructor(\n    tracerOrSpan: OpenCensusTracerWrapper | OpenCensusSpan,\n    name: string = \"\",\n    options: SpanOptions = {}\n  ) {\n    if (isTracer(tracerOrSpan)) {\n      const parent = isWrappedSpan(options.parent) ? options.parent.getWrappedSpan() : undefined;\n      this._span = tracerOrSpan.getWrappedTracer().startChildSpan({\n        name,\n        childOf: parent\n      });\n      this._span.start();\n      if (options.links) {\n        for (const link of options.links) {\n          // Since there is no way to set the link relationship, leave it as Unspecified.\n          this._span.addLink(\n            link.context.traceId,\n            link.context.spanId,\n            0 /* LinkType.UNSPECIFIED */,\n            link.attributes as OpenCensusAttributes\n          );\n        }\n      }\n    } else {\n      this._span = tracerOrSpan;\n    }\n  }\n\n  /**\n   * Marks the end of Span execution.\n   * @param endTime The time to use as the Span's end time. Defaults to\n   * the current time.\n   */\n  end(_endTime?: number): void {\n    this._span.end();\n  }\n\n  /**\n   * Returns the SpanContext associated with this Span.\n   */\n  context(): SpanContext {\n    const openCensusSpanContext = this._span.spanContext;\n\n    return {\n      spanId: openCensusSpanContext.spanId,\n      traceId: openCensusSpanContext.traceId,\n      traceFlags: openCensusSpanContext.options as TraceFlags,\n      traceState: new OpenCensusTraceStateWrapper(openCensusSpanContext.traceState)\n    };\n  }\n\n  /**\n   * Sets an attribute on the Span\n   * @param key the attribute key\n   * @param value the attribute value\n   */\n  setAttribute(key: string, value: unknown): this {\n    this._span.addAttribute(key, value as any);\n    return this;\n  }\n\n  /**\n   * Sets attributes on the Span\n   * @param attributes the attributes to add\n   */\n  setAttributes(attributes: Attributes): this {\n    this._span.attributes = attributes as OpenCensusAttributes;\n    return this;\n  }\n\n  /**\n   * Adds an event to the Span\n   * @param name The name of the event\n   * @param attributes The associated attributes to add for this event\n   */\n  addEvent(_name: string, _attributes?: Attributes): this {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  /**\n   * Sets a status on the span. Overrides the default of CanonicalCode.OK.\n   * @param status The status to set.\n   */\n  setStatus(status: Status): this {\n    this._span.setStatus(status.code, status.message);\n    return this;\n  }\n\n  /**\n   * Updates the name of the Span\n   * @param name the new Span name\n   */\n  updateName(name: string): this {\n    this._span.name = name;\n    return this;\n  }\n\n  /**\n   * Returns whether this span will be recorded\n   */\n  isRecording(): boolean {\n    // NoRecordSpans have an empty traceId\n    return !!this._span.traceId;\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { Tracer, Span, SpanOptions } from \"@opentelemetry/api\";\nimport { OpenCensusSpanWrapper } from \"./openCensusSpanWrapper\";\nimport { TracerBase as OpenCensusTracer } from \"@opencensus/web-types\";\n\n/**\n * An implementation of OpenTelemetry Tracer that wraps an OpenCensus Tracer.\n */\nexport class OpenCensusTracerWrapper implements Tracer {\n  private _tracer: OpenCensusTracer;\n\n  /**\n   * The wrapped OpenCensus Tracer\n   */\n  public getWrappedTracer(): OpenCensusTracer {\n    return this._tracer;\n  }\n\n  /**\n   * Create a new wrapper around a given OpenCensus Tracer.\n   * @param tracer The OpenCensus Tracer to wrap.\n   */\n  public constructor(tracer: OpenCensusTracer) {\n    this._tracer = tracer;\n  }\n\n  /**\n   * Starts a new Span.\n   * @param name The name of the span.\n   * @param options The SpanOptions used during Span creation.\n   */\n  startSpan(name: string, options?: SpanOptions): Span {\n    return new OpenCensusSpanWrapper(this, name, options);\n  }\n\n  /**\n   * Returns the current Span from the current context, if available.\n   */\n  getCurrentSpan(): Span | undefined {\n    return undefined;\n  }\n\n  /**\n   * Executes the given function within the context provided by a Span.\n   * @param _span The span that provides the context.\n   * @param _fn The function to be executed.\n   */\n  withSpan<T extends (...args: unknown[]) => unknown>(_span: Span, _fn: T): ReturnType<T> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  /**\n   * Bind a Span as the target's scope\n   * @param target An object to bind the scope.\n   * @param _span A specific Span to use. Otherwise, use the current one.\n   */\n  bind<T>(_target: T, _span?: Span): T {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  TimeInput,\n  Tracer,\n  SpanKind,\n  Status,\n  SpanContext,\n  CanonicalCode,\n  Attributes\n} from \"@opentelemetry/api\";\nimport { NoOpSpan } from \"../noop/noOpSpan\";\n\n/**\n * A mock span useful for testing.\n */\nexport class TestSpan extends NoOpSpan {\n  /**\n   * The Span's current name\n   */\n  name: string;\n\n  /**\n   * The Span's current status\n   */\n  status: Status;\n\n  /**\n   * The Span's kind\n   */\n  kind: SpanKind;\n\n  /**\n   * True if end() has been called on the Span\n   */\n  endCalled: boolean;\n\n  /**\n   * The start time of the Span\n   */\n  readonly startTime: TimeInput;\n\n  /**\n   * The id of the parent Span, if any.\n   */\n  readonly parentSpanId?: string;\n\n  /**\n   * Known attributes, if any.\n   */\n  readonly attributes: Attributes;\n\n  private _context: SpanContext;\n  private readonly _tracer: Tracer;\n\n  /**\n   * Starts a new Span.\n   * @param parentTracer The tracer that created this Span\n   * @param name The name of the span.\n   * @param context The SpanContext this span belongs to\n   * @param kind The SpanKind of this Span\n   * @param parentSpanId The identifier of the parent Span\n   * @param startTime The startTime of the event (defaults to now)\n   */\n  constructor(\n    parentTracer: Tracer,\n    name: string,\n    context: SpanContext,\n    kind: SpanKind,\n    parentSpanId?: string,\n    startTime: TimeInput = Date.now()\n  ) {\n    super();\n    this._tracer = parentTracer;\n    this.name = name;\n    this.kind = kind;\n    this.startTime = startTime;\n    this.parentSpanId = parentSpanId;\n    this.status = {\n      code: CanonicalCode.OK\n    };\n    this.endCalled = false;\n    this._context = context;\n    this.attributes = {};\n  }\n\n  /**\n   * Returns the Tracer that created this Span\n   */\n  tracer(): Tracer {\n    return this._tracer;\n  }\n\n  /**\n   * Returns the SpanContext associated with this Span.\n   */\n  context(): SpanContext {\n    return this._context;\n  }\n\n  /**\n   * Marks the end of Span execution.\n   * @param _endTime The time to use as the Span's end time. Defaults to\n   * the current time.\n   */\n  end(_endTime?: number): void {\n    this.endCalled = true;\n  }\n\n  /**\n   * Sets a status on the span. Overrides the default of CanonicalCode.OK.\n   * @param status The status to set.\n   */\n  setStatus(status: Status): this {\n    this.status = status;\n    return this;\n  }\n\n  /**\n   * Returns whether this span will be recorded\n   */\n  isRecording(): boolean {\n    return true;\n  }\n\n  /**\n   * Sets an attribute on the Span\n   * @param key the attribute key\n   * @param value the attribute value\n   */\n  setAttribute(key: string, value: unknown): this {\n    this.attributes[key] = value;\n    return this;\n  }\n\n  /**\n   * Sets attributes on the Span\n   * @param attributes the attributes to add\n   */\n  setAttributes(attributes: Attributes): this {\n    for (const key of Object.keys(attributes)) {\n      this.attributes[key] = attributes[key];\n    }\n    return this;\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { TestSpan } from \"./testSpan\";\nimport { NoOpTracer } from \"../noop/noOpTracer\";\nimport { SpanContext, SpanKind, SpanOptions, TraceFlags } from \"@opentelemetry/api\";\n\n/**\n * Simple representation of a Span that only has name and child relationships.\n * Children should be arranged in the order they were created.\n */\nexport interface SpanGraphNode {\n  /**\n   * The Span name\n   */\n  name: string;\n  /**\n   * All child Spans of this Span\n   */\n  children: SpanGraphNode[];\n}\n\n/**\n * Contains all the spans for a particular TraceID\n * starting at unparented roots\n */\nexport interface SpanGraph {\n  /**\n   * All Spans without a parentSpanId\n   */\n  roots: SpanGraphNode[];\n}\n\n/**\n * A mock tracer useful for testing\n */\nexport class TestTracer extends NoOpTracer {\n  private traceIdCounter = 0;\n  private getNextTraceId(): string {\n    this.traceIdCounter++;\n    return String(this.traceIdCounter);\n  }\n\n  private spanIdCounter = 0;\n  private getNextSpanId(): string {\n    this.spanIdCounter++;\n    return String(this.spanIdCounter);\n  }\n\n  private rootSpans: TestSpan[] = [];\n  private knownSpans: TestSpan[] = [];\n\n  /**\n   * Returns all Spans that were created without a parent\n   */\n  getRootSpans(): TestSpan[] {\n    return this.rootSpans;\n  }\n\n  /**\n   * Returns all Spans this Tracer knows about\n   */\n  getKnownSpans(): TestSpan[] {\n    return this.knownSpans;\n  }\n\n  /**\n   * Returns all Spans where end() has not been called\n   */\n  getActiveSpans(): TestSpan[] {\n    return this.knownSpans.filter((span) => {\n      return !span.endCalled;\n    });\n  }\n\n  /**\n   * Return all Spans for a particular trace, grouped by their\n   * parent Span in a tree-like structure\n   * @param traceId The traceId to return the graph for\n   */\n  getSpanGraph(traceId: string): SpanGraph {\n    const traceSpans = this.knownSpans.filter((span) => {\n      return span.context().traceId === traceId;\n    });\n\n    const roots: SpanGraphNode[] = [];\n    const nodeMap: Map<string, SpanGraphNode> = new Map<string, SpanGraphNode>();\n\n    for (const span of traceSpans) {\n      const spanId = span.context().spanId;\n      const node: SpanGraphNode = {\n        name: span.name,\n        children: []\n      };\n      nodeMap.set(spanId, node);\n      if (span.parentSpanId) {\n        const parent = nodeMap.get(span.parentSpanId);\n        if (!parent) {\n          throw new Error(\n            `Span with name ${node.name} has an unknown parentSpan with id ${span.parentSpanId}`\n          );\n        }\n        parent.children.push(node);\n      } else {\n        roots.push(node);\n      }\n    }\n\n    return {\n      roots\n    };\n  }\n\n  /**\n   * Starts a new Span.\n   * @param name The name of the span.\n   * @param options The SpanOptions used during Span creation.\n   */\n  startSpan(name: string, options: SpanOptions = {}): TestSpan {\n    const parentContext = this._getParentContext(options);\n\n    let traceId: string;\n    let isRootSpan = false;\n\n    if (parentContext && parentContext.traceId) {\n      traceId = parentContext.traceId;\n    } else {\n      traceId = this.getNextTraceId();\n      isRootSpan = true;\n    }\n\n    const context: SpanContext = {\n      traceId,\n      spanId: this.getNextSpanId(),\n      traceFlags: TraceFlags.NONE\n    };\n    const span = new TestSpan(\n      this,\n      name,\n      context,\n      options.kind || SpanKind.INTERNAL,\n      parentContext ? parentContext.spanId : undefined,\n      options.startTime\n    );\n    this.knownSpans.push(span);\n    if (isRootSpan) {\n      this.rootSpans.push(span);\n    }\n    return span;\n  }\n\n  private _getParentContext(options: SpanOptions): SpanContext | undefined {\n    const parent = options.parent;\n    let result: SpanContext | undefined;\n    if (parent) {\n      if (\"traceId\" in parent) {\n        result = parent;\n      } else {\n        result = parent.context();\n      }\n    }\n    return result;\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { SpanContext, TraceFlags } from \"../interfaces\";\n\nconst VERSION = \"00\";\n\n/**\n * Generates a `SpanContext` given a `traceparent` header value.\n * @param traceParent Serialized span context data as a `traceparent` header value.\n * @returns The `SpanContext` generated from the `traceparent` value.\n */\nexport function extractSpanContextFromTraceParentHeader(\n  traceParentHeader: string\n): SpanContext | undefined {\n  const parts = traceParentHeader.split(\"-\");\n\n  if (parts.length !== 4) {\n    return;\n  }\n\n  const [version, traceId, spanId, traceOptions] = parts;\n\n  if (version !== VERSION) {\n    return;\n  }\n\n  const traceFlags = parseInt(traceOptions, 16);\n\n  const spanContext: SpanContext = {\n    spanId,\n    traceId,\n    traceFlags\n  };\n\n  return spanContext;\n}\n\n/**\n * Generates a `traceparent` value given a span context.\n * @param spanContext Contains context for a specific span.\n * @returns The `spanContext` represented as a `traceparent` value.\n */\nexport function getTraceParentHeader(spanContext: SpanContext): string | undefined {\n  const missingFields: string[] = [];\n  if (!spanContext.traceId) {\n    missingFields.push(\"traceId\");\n  }\n  if (!spanContext.spanId) {\n    missingFields.push(\"spanId\");\n  }\n\n  if (missingFields.length) {\n    return;\n  }\n\n  const flags = spanContext.traceFlags || TraceFlags.NONE;\n  const hexFlags = flags.toString(16);\n  const traceFlags = hexFlags.length === 1 ? `0${hexFlags}` : hexFlags;\n\n  // https://www.w3.org/TR/trace-context/#traceparent-header-field-values\n  return `${VERSION}-${spanContext.traceId}-${spanContext.spanId}-${traceFlags}`;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar uuid = require('uuid');\nvar tslib = require('tslib');\nvar tough = require('tough-cookie');\nvar http = require('http');\nvar https = require('https');\nvar node_fetch = _interopDefault(require('node-fetch'));\nvar abortController = require('@azure/abort-controller');\nvar FormData = _interopDefault(require('form-data'));\nvar util = require('util');\nvar stream = require('stream');\nvar tunnel = require('tunnel');\nvar coreAuth = require('@azure/core-auth');\nvar logger$1 = require('@azure/logger');\nvar xml2js = require('xml2js');\nvar os = require('os');\nvar coreTracing = require('@azure/core-tracing');\nvar api = require('@opentelemetry/api');\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * A collection of HttpHeaders that can be sent with a HTTP request.\n */\nfunction getHeaderKey(headerName) {\n    return headerName.toLowerCase();\n}\nfunction isHttpHeadersLike(object) {\n    if (!object || typeof object !== \"object\") {\n        return false;\n    }\n    if (typeof object.rawHeaders === \"function\" &&\n        typeof object.clone === \"function\" &&\n        typeof object.get === \"function\" &&\n        typeof object.set === \"function\" &&\n        typeof object.contains === \"function\" &&\n        typeof object.remove === \"function\" &&\n        typeof object.headersArray === \"function\" &&\n        typeof object.headerValues === \"function\" &&\n        typeof object.headerNames === \"function\" &&\n        typeof object.toJson === \"function\") {\n        return true;\n    }\n    return false;\n}\n/**\n * A collection of HTTP header key/value pairs.\n */\nvar HttpHeaders = /** @class */ (function () {\n    function HttpHeaders(rawHeaders) {\n        this._headersMap = {};\n        if (rawHeaders) {\n            for (var headerName in rawHeaders) {\n                this.set(headerName, rawHeaders[headerName]);\n            }\n        }\n    }\n    /**\n     * Set a header in this collection with the provided name and value. The name is\n     * case-insensitive.\n     * @param headerName The name of the header to set. This value is case-insensitive.\n     * @param headerValue The value of the header to set.\n     */\n    HttpHeaders.prototype.set = function (headerName, headerValue) {\n        this._headersMap[getHeaderKey(headerName)] = {\n            name: headerName,\n            value: headerValue.toString()\n        };\n    };\n    /**\n     * Get the header value for the provided header name, or undefined if no header exists in this\n     * collection with the provided name.\n     * @param headerName The name of the header.\n     */\n    HttpHeaders.prototype.get = function (headerName) {\n        var header = this._headersMap[getHeaderKey(headerName)];\n        return !header ? undefined : header.value;\n    };\n    /**\n     * Get whether or not this header collection contains a header entry for the provided header name.\n     */\n    HttpHeaders.prototype.contains = function (headerName) {\n        return !!this._headersMap[getHeaderKey(headerName)];\n    };\n    /**\n     * Remove the header with the provided headerName. Return whether or not the header existed and\n     * was removed.\n     * @param headerName The name of the header to remove.\n     */\n    HttpHeaders.prototype.remove = function (headerName) {\n        var result = this.contains(headerName);\n        delete this._headersMap[getHeaderKey(headerName)];\n        return result;\n    };\n    /**\n     * Get the headers that are contained this collection as an object.\n     */\n    HttpHeaders.prototype.rawHeaders = function () {\n        var result = {};\n        for (var headerKey in this._headersMap) {\n            var header = this._headersMap[headerKey];\n            result[header.name.toLowerCase()] = header.value;\n        }\n        return result;\n    };\n    /**\n     * Get the headers that are contained in this collection as an array.\n     */\n    HttpHeaders.prototype.headersArray = function () {\n        var headers = [];\n        for (var headerKey in this._headersMap) {\n            headers.push(this._headersMap[headerKey]);\n        }\n        return headers;\n    };\n    /**\n     * Get the header names that are contained in this collection.\n     */\n    HttpHeaders.prototype.headerNames = function () {\n        var headerNames = [];\n        var headers = this.headersArray();\n        for (var i = 0; i < headers.length; ++i) {\n            headerNames.push(headers[i].name);\n        }\n        return headerNames;\n    };\n    /**\n     * Get the header values that are contained in this collection.\n     */\n    HttpHeaders.prototype.headerValues = function () {\n        var headerValues = [];\n        var headers = this.headersArray();\n        for (var i = 0; i < headers.length; ++i) {\n            headerValues.push(headers[i].value);\n        }\n        return headerValues;\n    };\n    /**\n     * Get the JSON object representation of this HTTP header collection.\n     */\n    HttpHeaders.prototype.toJson = function () {\n        return this.rawHeaders();\n    };\n    /**\n     * Get the string representation of this HTTP header collection.\n     */\n    HttpHeaders.prototype.toString = function () {\n        return JSON.stringify(this.toJson());\n    };\n    /**\n     * Create a deep clone/copy of this HttpHeaders collection.\n     */\n    HttpHeaders.prototype.clone = function () {\n        return new HttpHeaders(this.rawHeaders());\n    };\n    return HttpHeaders;\n}());\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Encodes a string in base64 format.\n * @param value the string to encode\n */\nfunction encodeString(value) {\n    return Buffer.from(value).toString(\"base64\");\n}\n/**\n * Encodes a byte array in base64 format.\n * @param value the Uint8Aray to encode\n */\nfunction encodeByteArray(value) {\n    // Buffer.from accepts <ArrayBuffer> | <SharedArrayBuffer>-- the TypeScript definition is off here\n    // https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n    var bufferValue = value instanceof Buffer ? value : Buffer.from(value.buffer);\n    return bufferValue.toString(\"base64\");\n}\n/**\n * Decodes a base64 string into a byte array.\n * @param value the base64 string to decode\n */\nfunction decodeString(value) {\n    return Buffer.from(value, \"base64\");\n}\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nvar Constants = {\n    /**\n     * The core-http version\n     * @const\n     * @type {string}\n     */\n    coreHttpVersion: \"1.1.7\",\n    /**\n     * Specifies HTTP.\n     *\n     * @const\n     * @type {string}\n     */\n    HTTP: \"http:\",\n    /**\n     * Specifies HTTPS.\n     *\n     * @const\n     * @type {string}\n     */\n    HTTPS: \"https:\",\n    /**\n     * Specifies HTTP Proxy.\n     *\n     * @const\n     * @type {string}\n     */\n    HTTP_PROXY: \"HTTP_PROXY\",\n    /**\n     * Specifies HTTPS Proxy.\n     *\n     * @const\n     * @type {string}\n     */\n    HTTPS_PROXY: \"HTTPS_PROXY\",\n    HttpConstants: {\n        /**\n         * Http Verbs\n         *\n         * @const\n         * @enum {string}\n         */\n        HttpVerbs: {\n            PUT: \"PUT\",\n            GET: \"GET\",\n            DELETE: \"DELETE\",\n            POST: \"POST\",\n            MERGE: \"MERGE\",\n            HEAD: \"HEAD\",\n            PATCH: \"PATCH\"\n        },\n        StatusCodes: {\n            TooManyRequests: 429\n        }\n    },\n    /**\n     * Defines constants for use with HTTP headers.\n     */\n    HeaderConstants: {\n        /**\n         * The Authorization header.\n         *\n         * @const\n         * @type {string}\n         */\n        AUTHORIZATION: \"authorization\",\n        AUTHORIZATION_SCHEME: \"Bearer\",\n        /**\n         * The Retry-After response-header field can be used with a 503 (Service\n         * Unavailable) or 349 (Too Many Requests) responses to indicate how long\n         * the service is expected to be unavailable to the requesting client.\n         *\n         * @const\n         * @type {string}\n         */\n        RETRY_AFTER: \"Retry-After\",\n        /**\n         * The UserAgent header.\n         *\n         * @const\n         * @type {string}\n         */\n        USER_AGENT: \"User-Agent\"\n    }\n};\n\n// Copyright (c) Microsoft Corporation.\nvar validUuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;\n/**\n * A constant that indicates whether the environment is node.js or browser based.\n */\nvar isNode = typeof process !== \"undefined\" &&\n    !!process.version &&\n    !!process.versions &&\n    !!process.versions.node;\n/**\n * Encodes an URI.\n *\n * @param {string} uri The URI to be encoded.\n * @return {string} The encoded URI.\n */\nfunction encodeUri(uri) {\n    return encodeURIComponent(uri)\n        .replace(/!/g, \"%21\")\n        .replace(/\"/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\n/**\n * Returns a stripped version of the Http Response which only contains body,\n * headers and the status.\n *\n * @param {HttpOperationResponse} response The Http Response\n *\n * @return {object} The stripped version of Http Response.\n */\nfunction stripResponse(response) {\n    var strippedResponse = {};\n    strippedResponse.body = response.bodyAsText;\n    strippedResponse.headers = response.headers;\n    strippedResponse.status = response.status;\n    return strippedResponse;\n}\n/**\n * Returns a stripped version of the Http Request that does not contain the\n * Authorization header.\n *\n * @param {WebResourceLike} request The Http Request object\n *\n * @return {WebResourceLike} The stripped version of Http Request.\n */\nfunction stripRequest(request) {\n    var strippedRequest = request.clone();\n    if (strippedRequest.headers) {\n        strippedRequest.headers.remove(\"authorization\");\n    }\n    return strippedRequest;\n}\n/**\n * Validates the given uuid as a string\n *\n * @param {string} uuid The uuid as a string that needs to be validated\n *\n * @return {boolean} True if the uuid is valid; false otherwise.\n */\nfunction isValidUuid(uuid) {\n    return validUuidRegex.test(uuid);\n}\n/**\n * Generated UUID\n *\n * @return {string} RFC4122 v4 UUID.\n */\nfunction generateUuid() {\n    return uuid.v4();\n}\n/**\n * Executes an array of promises sequentially. Inspiration of this method is here:\n * https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html. An awesome blog on promises!\n *\n * @param {Array} promiseFactories An array of promise factories(A function that return a promise)\n *\n * @param {any} [kickstart] Input to the first promise that is used to kickstart the promise chain.\n * If not provided then the promise chain starts with undefined.\n *\n * @return A chain of resolved or rejected promises\n */\nfunction executePromisesSequentially(promiseFactories, kickstart) {\n    var result = Promise.resolve(kickstart);\n    promiseFactories.forEach(function (promiseFactory) {\n        result = result.then(promiseFactory);\n    });\n    return result;\n}\n/**\n * A wrapper for setTimeout that resolves a promise after t milliseconds.\n * @param {number} t The number of milliseconds to be delayed.\n * @param {T} value The value to be resolved with after a timeout of t milliseconds.\n * @returns {Promise<T>} Resolved promise\n */\nfunction delay(t, value) {\n    return new Promise(function (resolve) { return setTimeout(function () { return resolve(value); }, t); });\n}\n/**\n * Converts a Promise to a callback.\n * @param {Promise<any>} promise The Promise to be converted to a callback\n * @returns {Function} A function that takes the callback (cb: Function): void\n * @deprecated generated code should instead depend on responseToBody\n */\nfunction promiseToCallback(promise) {\n    if (typeof promise.then !== \"function\") {\n        throw new Error(\"The provided input is not a Promise.\");\n    }\n    return function (cb) {\n        promise\n            .then(function (data) {\n            // eslint-disable-next-line promise/no-callback-in-promise\n            return cb(undefined, data);\n        })\n            .catch(function (err) {\n            // eslint-disable-next-line promise/no-callback-in-promise\n            cb(err);\n        });\n    };\n}\n/**\n * Converts a Promise to a service callback.\n * @param {Promise<HttpOperationResponse>} promise - The Promise of HttpOperationResponse to be converted to a service callback\n * @returns {Function} A function that takes the service callback (cb: ServiceCallback<T>): void\n */\nfunction promiseToServiceCallback(promise) {\n    if (typeof promise.then !== \"function\") {\n        throw new Error(\"The provided input is not a Promise.\");\n    }\n    return function (cb) {\n        promise\n            .then(function (data) {\n            return process.nextTick(cb, undefined, data.parsedBody, data.request, data);\n        })\n            .catch(function (err) {\n            process.nextTick(cb, err);\n        });\n    };\n}\nfunction prepareXMLRootList(obj, elementName) {\n    var _a;\n    if (!Array.isArray(obj)) {\n        obj = [obj];\n    }\n    return _a = {}, _a[elementName] = obj, _a;\n}\n/**\n * Applies the properties on the prototype of sourceCtors to the prototype of targetCtor\n * @param {object} targetCtor The target object on which the properties need to be applied.\n * @param {Array<object>} sourceCtors An array of source objects from which the properties need to be taken.\n */\nfunction applyMixins(targetCtor, sourceCtors) {\n    sourceCtors.forEach(function (sourceCtors) {\n        Object.getOwnPropertyNames(sourceCtors.prototype).forEach(function (name) {\n            targetCtor.prototype[name] = sourceCtors.prototype[name];\n        });\n    });\n}\nvar validateISODuration = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n/**\n * Indicates whether the given string is in ISO 8601 format.\n * @param {string} value The value to be validated for ISO 8601 duration format.\n * @return {boolean} `true` if valid, `false` otherwise.\n */\nfunction isDuration(value) {\n    return validateISODuration.test(value);\n}\n/**\n * Replace all of the instances of searchValue in value with the provided replaceValue.\n * @param {string | undefined} value The value to search and replace in.\n * @param {string} searchValue The value to search for in the value argument.\n * @param {string} replaceValue The value to replace searchValue with in the value argument.\n * @returns {string | undefined} The value where each instance of searchValue was replaced with replacedValue.\n */\nfunction replaceAll(value, searchValue, replaceValue) {\n    return !value || !searchValue ? value : value.split(searchValue).join(replaceValue || \"\");\n}\n/**\n * Determines whether the given entity is a basic/primitive type\n * (string, number, boolean, null, undefined).\n * @param {any} value Any entity\n * @return {boolean} - true is it is primitive type, false otherwise.\n */\nfunction isPrimitiveType(value) {\n    return (typeof value !== \"object\" && typeof value !== \"function\") || value === null;\n}\n\n// Copyright (c) Microsoft Corporation.\nvar Serializer = /** @class */ (function () {\n    function Serializer(modelMappers, isXML) {\n        if (modelMappers === void 0) { modelMappers = {}; }\n        this.modelMappers = modelMappers;\n        this.isXML = isXML;\n    }\n    Serializer.prototype.validateConstraints = function (mapper, value, objectName) {\n        var failValidation = function (constraintName, constraintValue) {\n            throw new Error(\"\\\"\" + objectName + \"\\\" with value \\\"\" + value + \"\\\" should satisfy the constraint \\\"\" + constraintName + \"\\\": \" + constraintValue + \".\");\n        };\n        if (mapper.constraints && value != undefined) {\n            var _a = mapper.constraints, ExclusiveMaximum = _a.ExclusiveMaximum, ExclusiveMinimum = _a.ExclusiveMinimum, InclusiveMaximum = _a.InclusiveMaximum, InclusiveMinimum = _a.InclusiveMinimum, MaxItems = _a.MaxItems, MaxLength = _a.MaxLength, MinItems = _a.MinItems, MinLength = _a.MinLength, MultipleOf = _a.MultipleOf, Pattern = _a.Pattern, UniqueItems = _a.UniqueItems;\n            if (ExclusiveMaximum != undefined && value >= ExclusiveMaximum) {\n                failValidation(\"ExclusiveMaximum\", ExclusiveMaximum);\n            }\n            if (ExclusiveMinimum != undefined && value <= ExclusiveMinimum) {\n                failValidation(\"ExclusiveMinimum\", ExclusiveMinimum);\n            }\n            if (InclusiveMaximum != undefined && value > InclusiveMaximum) {\n                failValidation(\"InclusiveMaximum\", InclusiveMaximum);\n            }\n            if (InclusiveMinimum != undefined && value < InclusiveMinimum) {\n                failValidation(\"InclusiveMinimum\", InclusiveMinimum);\n            }\n            if (MaxItems != undefined && value.length > MaxItems) {\n                failValidation(\"MaxItems\", MaxItems);\n            }\n            if (MaxLength != undefined && value.length > MaxLength) {\n                failValidation(\"MaxLength\", MaxLength);\n            }\n            if (MinItems != undefined && value.length < MinItems) {\n                failValidation(\"MinItems\", MinItems);\n            }\n            if (MinLength != undefined && value.length < MinLength) {\n                failValidation(\"MinLength\", MinLength);\n            }\n            if (MultipleOf != undefined && value % MultipleOf !== 0) {\n                failValidation(\"MultipleOf\", MultipleOf);\n            }\n            if (Pattern) {\n                var pattern = typeof Pattern === \"string\" ? new RegExp(Pattern) : Pattern;\n                if (typeof value !== \"string\" || value.match(pattern) === null) {\n                    failValidation(\"Pattern\", Pattern);\n                }\n            }\n            if (UniqueItems &&\n                value.some(function (item, i, ar) { return ar.indexOf(item) !== i; })) {\n                failValidation(\"UniqueItems\", UniqueItems);\n            }\n        }\n    };\n    /**\n     * Serialize the given object based on its metadata defined in the mapper\n     *\n     * @param {Mapper} mapper The mapper which defines the metadata of the serializable object\n     *\n     * @param {object|string|Array|number|boolean|Date|stream} object A valid Javascript object to be serialized\n     *\n     * @param {string} objectName Name of the serialized object\n     *\n     * @returns {object|string|Array|number|boolean|Date|stream} A valid serialized Javascript object\n     */\n    Serializer.prototype.serialize = function (mapper, object, objectName) {\n        var payload = {};\n        var mapperType = mapper.type.name;\n        if (!objectName) {\n            objectName = mapper.serializedName;\n        }\n        if (mapperType.match(/^Sequence$/i) !== null) {\n            payload = [];\n        }\n        if (mapper.isConstant) {\n            object = mapper.defaultValue;\n        }\n        // This table of allowed values should help explain\n        // the mapper.required and mapper.nullable properties.\n        // X means \"neither undefined or null are allowed\".\n        //           || required\n        //           || true      | false\n        //  nullable || ==========================\n        //      true || null      | undefined/null\n        //     false || X         | undefined\n        // undefined || X         | undefined/null\n        var required = mapper.required, nullable = mapper.nullable;\n        if (required && nullable && object === undefined) {\n            throw new Error(objectName + \" cannot be undefined.\");\n        }\n        if (required && !nullable && object == undefined) {\n            throw new Error(objectName + \" cannot be null or undefined.\");\n        }\n        if (!required && nullable === false && object === null) {\n            throw new Error(objectName + \" cannot be null.\");\n        }\n        if (object == undefined) {\n            payload = object;\n        }\n        else {\n            // Validate Constraints if any\n            this.validateConstraints(mapper, object, objectName);\n            if (mapperType.match(/^any$/i) !== null) {\n                payload = object;\n            }\n            else if (mapperType.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/i) !== null) {\n                payload = serializeBasicTypes(mapperType, objectName, object);\n            }\n            else if (mapperType.match(/^Enum$/i) !== null) {\n                var enumMapper = mapper;\n                payload = serializeEnumType(objectName, enumMapper.type.allowedValues, object);\n            }\n            else if (mapperType.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/i) !== null) {\n                payload = serializeDateTypes(mapperType, object, objectName);\n            }\n            else if (mapperType.match(/^ByteArray$/i) !== null) {\n                payload = serializeByteArrayType(objectName, object);\n            }\n            else if (mapperType.match(/^Base64Url$/i) !== null) {\n                payload = serializeBase64UrlType(objectName, object);\n            }\n            else if (mapperType.match(/^Sequence$/i) !== null) {\n                payload = serializeSequenceType(this, mapper, object, objectName);\n            }\n            else if (mapperType.match(/^Dictionary$/i) !== null) {\n                payload = serializeDictionaryType(this, mapper, object, objectName);\n            }\n            else if (mapperType.match(/^Composite$/i) !== null) {\n                payload = serializeCompositeType(this, mapper, object, objectName);\n            }\n        }\n        return payload;\n    };\n    /**\n     * Deserialize the given object based on its metadata defined in the mapper\n     *\n     * @param {object} mapper The mapper which defines the metadata of the serializable object\n     *\n     * @param {object|string|Array|number|boolean|Date|stream} responseBody A valid Javascript entity to be deserialized\n     *\n     * @param {string} objectName Name of the deserialized object\n     *\n     * @returns {object|string|Array|number|boolean|Date|stream} A valid deserialized Javascript object\n     */\n    Serializer.prototype.deserialize = function (mapper, responseBody, objectName) {\n        if (responseBody == undefined) {\n            if (this.isXML && mapper.type.name === \"Sequence\" && !mapper.xmlIsWrapped) {\n                // Edge case for empty XML non-wrapped lists. xml2js can't distinguish\n                // between the list being empty versus being missing,\n                // so let's do the more user-friendly thing and return an empty list.\n                responseBody = [];\n            }\n            // specifically check for undefined as default value can be a falsey value `0, \"\", false, null`\n            if (mapper.defaultValue !== undefined) {\n                responseBody = mapper.defaultValue;\n            }\n            return responseBody;\n        }\n        var payload;\n        var mapperType = mapper.type.name;\n        if (!objectName) {\n            objectName = mapper.serializedName;\n        }\n        if (mapperType.match(/^Composite$/i) !== null) {\n            payload = deserializeCompositeType(this, mapper, responseBody, objectName);\n        }\n        else {\n            if (this.isXML) {\n                /**\n                 * If the mapper specifies this as a non-composite type value but the responseBody contains\n                 * both header (\"$\") and body (\"_\") properties, then just reduce the responseBody value to\n                 * the body (\"_\") property.\n                 */\n                if (responseBody[\"$\"] != undefined && responseBody[\"_\"] != undefined) {\n                    responseBody = responseBody[\"_\"];\n                }\n            }\n            if (mapperType.match(/^Number$/i) !== null) {\n                payload = parseFloat(responseBody);\n                if (isNaN(payload)) {\n                    payload = responseBody;\n                }\n            }\n            else if (mapperType.match(/^Boolean$/i) !== null) {\n                if (responseBody === \"true\") {\n                    payload = true;\n                }\n                else if (responseBody === \"false\") {\n                    payload = false;\n                }\n                else {\n                    payload = responseBody;\n                }\n            }\n            else if (mapperType.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/i) !== null) {\n                payload = responseBody;\n            }\n            else if (mapperType.match(/^(Date|DateTime|DateTimeRfc1123)$/i) !== null) {\n                payload = new Date(responseBody);\n            }\n            else if (mapperType.match(/^UnixTime$/i) !== null) {\n                payload = unixTimeToDate(responseBody);\n            }\n            else if (mapperType.match(/^ByteArray$/i) !== null) {\n                payload = decodeString(responseBody);\n            }\n            else if (mapperType.match(/^Base64Url$/i) !== null) {\n                payload = base64UrlToByteArray(responseBody);\n            }\n            else if (mapperType.match(/^Sequence$/i) !== null) {\n                payload = deserializeSequenceType(this, mapper, responseBody, objectName);\n            }\n            else if (mapperType.match(/^Dictionary$/i) !== null) {\n                payload = deserializeDictionaryType(this, mapper, responseBody, objectName);\n            }\n        }\n        if (mapper.isConstant) {\n            payload = mapper.defaultValue;\n        }\n        return payload;\n    };\n    return Serializer;\n}());\nfunction trimEnd(str, ch) {\n    var len = str.length;\n    while (len - 1 >= 0 && str[len - 1] === ch) {\n        --len;\n    }\n    return str.substr(0, len);\n}\nfunction bufferToBase64Url(buffer) {\n    if (!buffer) {\n        return undefined;\n    }\n    if (!(buffer instanceof Uint8Array)) {\n        throw new Error(\"Please provide an input of type Uint8Array for converting to Base64Url.\");\n    }\n    // Uint8Array to Base64.\n    var str = encodeByteArray(buffer);\n    // Base64 to Base64Url.\n    return trimEnd(str, \"=\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction base64UrlToByteArray(str) {\n    if (!str) {\n        return undefined;\n    }\n    if (str && typeof str.valueOf() !== \"string\") {\n        throw new Error(\"Please provide an input of type string for converting to Uint8Array\");\n    }\n    // Base64Url to Base64.\n    str = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    // Base64 to Uint8Array.\n    return decodeString(str);\n}\nfunction splitSerializeName(prop) {\n    var classes = [];\n    var partialclass = \"\";\n    if (prop) {\n        var subwords = prop.split(\".\");\n        for (var _i = 0, subwords_1 = subwords; _i < subwords_1.length; _i++) {\n            var item = subwords_1[_i];\n            if (item.charAt(item.length - 1) === \"\\\\\") {\n                partialclass += item.substr(0, item.length - 1) + \".\";\n            }\n            else {\n                partialclass += item;\n                classes.push(partialclass);\n                partialclass = \"\";\n            }\n        }\n    }\n    return classes;\n}\nfunction dateToUnixTime(d) {\n    if (!d) {\n        return undefined;\n    }\n    if (typeof d.valueOf() === \"string\") {\n        d = new Date(d);\n    }\n    return Math.floor(d.getTime() / 1000);\n}\nfunction unixTimeToDate(n) {\n    if (!n) {\n        return undefined;\n    }\n    return new Date(n * 1000);\n}\nfunction serializeBasicTypes(typeName, objectName, value) {\n    if (value !== null && value !== undefined) {\n        if (typeName.match(/^Number$/i) !== null) {\n            if (typeof value !== \"number\") {\n                throw new Error(objectName + \" with value \" + value + \" must be of type number.\");\n            }\n        }\n        else if (typeName.match(/^String$/i) !== null) {\n            if (typeof value.valueOf() !== \"string\") {\n                throw new Error(objectName + \" with value \\\"\" + value + \"\\\" must be of type string.\");\n            }\n        }\n        else if (typeName.match(/^Uuid$/i) !== null) {\n            if (!(typeof value.valueOf() === \"string\" && isValidUuid(value))) {\n                throw new Error(objectName + \" with value \\\"\" + value + \"\\\" must be of type string and a valid uuid.\");\n            }\n        }\n        else if (typeName.match(/^Boolean$/i) !== null) {\n            if (typeof value !== \"boolean\") {\n                throw new Error(objectName + \" with value \" + value + \" must be of type boolean.\");\n            }\n        }\n        else if (typeName.match(/^Stream$/i) !== null) {\n            var objectType = typeof value;\n            if (objectType !== \"string\" &&\n                objectType !== \"function\" &&\n                !(value instanceof ArrayBuffer) &&\n                !ArrayBuffer.isView(value) &&\n                !(typeof Blob === \"function\" && value instanceof Blob)) {\n                throw new Error(objectName + \" must be a string, Blob, ArrayBuffer, ArrayBufferView, or a function returning NodeJS.ReadableStream.\");\n            }\n        }\n    }\n    return value;\n}\nfunction serializeEnumType(objectName, allowedValues, value) {\n    if (!allowedValues) {\n        throw new Error(\"Please provide a set of allowedValues to validate \" + objectName + \" as an Enum Type.\");\n    }\n    var isPresent = allowedValues.some(function (item) {\n        if (typeof item.valueOf() === \"string\") {\n            return item.toLowerCase() === value.toLowerCase();\n        }\n        return item === value;\n    });\n    if (!isPresent) {\n        throw new Error(value + \" is not a valid value for \" + objectName + \". The valid values are: \" + JSON.stringify(allowedValues) + \".\");\n    }\n    return value;\n}\nfunction serializeByteArrayType(objectName, value) {\n    var returnValue = \"\";\n    if (value != undefined) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error(objectName + \" must be of type Uint8Array.\");\n        }\n        returnValue = encodeByteArray(value);\n    }\n    return returnValue;\n}\nfunction serializeBase64UrlType(objectName, value) {\n    var returnValue = \"\";\n    if (value != undefined) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error(objectName + \" must be of type Uint8Array.\");\n        }\n        returnValue = bufferToBase64Url(value) || \"\";\n    }\n    return returnValue;\n}\nfunction serializeDateTypes(typeName, value, objectName) {\n    if (value != undefined) {\n        if (typeName.match(/^Date$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(objectName + \" must be an instanceof Date or a string in ISO8601 format.\");\n            }\n            value =\n                value instanceof Date\n                    ? value.toISOString().substring(0, 10)\n                    : new Date(value).toISOString().substring(0, 10);\n        }\n        else if (typeName.match(/^DateTime$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(objectName + \" must be an instanceof Date or a string in ISO8601 format.\");\n            }\n            value = value instanceof Date ? value.toISOString() : new Date(value).toISOString();\n        }\n        else if (typeName.match(/^DateTimeRfc1123$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(objectName + \" must be an instanceof Date or a string in RFC-1123 format.\");\n            }\n            value = value instanceof Date ? value.toUTCString() : new Date(value).toUTCString();\n        }\n        else if (typeName.match(/^UnixTime$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(objectName + \" must be an instanceof Date or a string in RFC-1123/ISO8601 format \" +\n                    \"for it to be serialized in UnixTime/Epoch format.\");\n            }\n            value = dateToUnixTime(value);\n        }\n        else if (typeName.match(/^TimeSpan$/i) !== null) {\n            if (!isDuration(value)) {\n                throw new Error(objectName + \" must be a string in ISO 8601 format. Instead was \\\"\" + value + \"\\\".\");\n            }\n        }\n    }\n    return value;\n}\nfunction serializeSequenceType(serializer, mapper, object, objectName) {\n    if (!Array.isArray(object)) {\n        throw new Error(objectName + \" must be of type Array.\");\n    }\n    var elementType = mapper.type.element;\n    if (!elementType || typeof elementType !== \"object\") {\n        throw new Error(\"element\\\" metadata for an Array must be defined in the \" +\n            (\"mapper and it must of type \\\"object\\\" in \" + objectName + \".\"));\n    }\n    var tempArray = [];\n    for (var i = 0; i < object.length; i++) {\n        tempArray[i] = serializer.serialize(elementType, object[i], objectName);\n    }\n    return tempArray;\n}\nfunction serializeDictionaryType(serializer, mapper, object, objectName) {\n    if (typeof object !== \"object\") {\n        throw new Error(objectName + \" must be of type object.\");\n    }\n    var valueType = mapper.type.value;\n    if (!valueType || typeof valueType !== \"object\") {\n        throw new Error(\"\\\"value\\\" metadata for a Dictionary must be defined in the \" +\n            (\"mapper and it must of type \\\"object\\\" in \" + objectName + \".\"));\n    }\n    var tempDictionary = {};\n    for (var _i = 0, _a = Object.keys(object); _i < _a.length; _i++) {\n        var key = _a[_i];\n        tempDictionary[key] = serializer.serialize(valueType, object[key], objectName + \".\" + key);\n    }\n    return tempDictionary;\n}\n/**\n * Resolves a composite mapper's modelProperties.\n * @param serializer the serializer containing the entire set of mappers\n * @param mapper the composite mapper to resolve\n */\nfunction resolveModelProperties(serializer, mapper, objectName) {\n    var modelProps = mapper.type.modelProperties;\n    if (!modelProps) {\n        var className = mapper.type.className;\n        if (!className) {\n            throw new Error(\"Class name for model \\\"\" + objectName + \"\\\" is not provided in the mapper \\\"\" + JSON.stringify(mapper, undefined, 2) + \"\\\".\");\n        }\n        var modelMapper = serializer.modelMappers[className];\n        if (!modelMapper) {\n            throw new Error(\"mapper() cannot be null or undefined for model \\\"\" + className + \"\\\".\");\n        }\n        modelProps = modelMapper.type.modelProperties;\n        if (!modelProps) {\n            throw new Error(\"modelProperties cannot be null or undefined in the \" +\n                (\"mapper \\\"\" + JSON.stringify(modelMapper) + \"\\\" of type \\\"\" + className + \"\\\" for object \\\"\" + objectName + \"\\\".\"));\n        }\n    }\n    return modelProps;\n}\nfunction serializeCompositeType(serializer, mapper, object, objectName) {\n    var _a;\n    if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n        mapper = getPolymorphicMapper(serializer, mapper, object, \"clientName\");\n    }\n    if (object != undefined) {\n        var payload = {};\n        var modelProps = resolveModelProperties(serializer, mapper, objectName);\n        for (var _i = 0, _b = Object.keys(modelProps); _i < _b.length; _i++) {\n            var key = _b[_i];\n            var propertyMapper = modelProps[key];\n            if (propertyMapper.readOnly) {\n                continue;\n            }\n            var propName = void 0;\n            var parentObject = payload;\n            if (serializer.isXML) {\n                if (propertyMapper.xmlIsWrapped) {\n                    propName = propertyMapper.xmlName;\n                }\n                else {\n                    propName = propertyMapper.xmlElementName || propertyMapper.xmlName;\n                }\n            }\n            else {\n                var paths = splitSerializeName(propertyMapper.serializedName);\n                propName = paths.pop();\n                for (var _c = 0, paths_1 = paths; _c < paths_1.length; _c++) {\n                    var pathName = paths_1[_c];\n                    var childObject = parentObject[pathName];\n                    if (childObject == undefined &&\n                        (object[key] != undefined || propertyMapper.defaultValue !== undefined)) {\n                        parentObject[pathName] = {};\n                    }\n                    parentObject = parentObject[pathName];\n                }\n            }\n            if (parentObject != undefined) {\n                var propertyObjectName = propertyMapper.serializedName !== \"\"\n                    ? objectName + \".\" + propertyMapper.serializedName\n                    : objectName;\n                var toSerialize = object[key];\n                var polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n                if (polymorphicDiscriminator &&\n                    polymorphicDiscriminator.clientName === key &&\n                    toSerialize == undefined) {\n                    toSerialize = mapper.serializedName;\n                }\n                var serializedValue = serializer.serialize(propertyMapper, toSerialize, propertyObjectName);\n                if (serializedValue !== undefined && propName != undefined) {\n                    if (propertyMapper.xmlIsAttribute) {\n                        // $ is the key attributes are kept under in xml2js.\n                        // This keeps things simple while preventing name collision\n                        // with names in user documents.\n                        parentObject.$ = parentObject.$ || {};\n                        parentObject.$[propName] = serializedValue;\n                    }\n                    else if (propertyMapper.xmlIsWrapped) {\n                        parentObject[propName] = (_a = {}, _a[propertyMapper.xmlElementName] = serializedValue, _a);\n                    }\n                    else {\n                        parentObject[propName] = serializedValue;\n                    }\n                }\n            }\n        }\n        var additionalPropertiesMapper = mapper.type.additionalProperties;\n        if (additionalPropertiesMapper) {\n            var propNames = Object.keys(modelProps);\n            var _loop_1 = function (clientPropName) {\n                var isAdditionalProperty = propNames.every(function (pn) { return pn !== clientPropName; });\n                if (isAdditionalProperty) {\n                    payload[clientPropName] = serializer.serialize(additionalPropertiesMapper, object[clientPropName], objectName + '[\"' + clientPropName + '\"]');\n                }\n            };\n            for (var clientPropName in object) {\n                _loop_1(clientPropName);\n            }\n        }\n        return payload;\n    }\n    return object;\n}\nfunction isSpecialXmlProperty(propertyName) {\n    return [\"$\", \"_\"].includes(propertyName);\n}\nfunction deserializeCompositeType(serializer, mapper, responseBody, objectName) {\n    if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n        mapper = getPolymorphicMapper(serializer, mapper, responseBody, \"serializedName\");\n    }\n    var modelProps = resolveModelProperties(serializer, mapper, objectName);\n    var instance = {};\n    var handledPropertyNames = [];\n    for (var _i = 0, _a = Object.keys(modelProps); _i < _a.length; _i++) {\n        var key = _a[_i];\n        var propertyMapper = modelProps[key];\n        var paths = splitSerializeName(modelProps[key].serializedName);\n        handledPropertyNames.push(paths[0]);\n        var serializedName = propertyMapper.serializedName, xmlName = propertyMapper.xmlName, xmlElementName = propertyMapper.xmlElementName;\n        var propertyObjectName = objectName;\n        if (serializedName !== \"\" && serializedName !== undefined) {\n            propertyObjectName = objectName + \".\" + serializedName;\n        }\n        var headerCollectionPrefix = propertyMapper.headerCollectionPrefix;\n        if (headerCollectionPrefix) {\n            var dictionary = {};\n            for (var _b = 0, _c = Object.keys(responseBody); _b < _c.length; _b++) {\n                var headerKey = _c[_b];\n                if (headerKey.startsWith(headerCollectionPrefix)) {\n                    dictionary[headerKey.substring(headerCollectionPrefix.length)] = serializer.deserialize(propertyMapper.type.value, responseBody[headerKey], propertyObjectName);\n                }\n                handledPropertyNames.push(headerKey);\n            }\n            instance[key] = dictionary;\n        }\n        else if (serializer.isXML) {\n            if (propertyMapper.xmlIsAttribute && responseBody.$) {\n                instance[key] = serializer.deserialize(propertyMapper, responseBody.$[xmlName], propertyObjectName);\n            }\n            else {\n                var propertyName = xmlElementName || xmlName || serializedName;\n                var unwrappedProperty = responseBody[propertyName];\n                if (propertyMapper.xmlIsWrapped) {\n                    unwrappedProperty = responseBody[xmlName];\n                    unwrappedProperty = unwrappedProperty && unwrappedProperty[xmlElementName];\n                    var isEmptyWrappedList = unwrappedProperty === undefined;\n                    if (isEmptyWrappedList) {\n                        unwrappedProperty = [];\n                    }\n                }\n                instance[key] = serializer.deserialize(propertyMapper, unwrappedProperty, propertyObjectName);\n            }\n        }\n        else {\n            // deserialize the property if it is present in the provided responseBody instance\n            var propertyInstance = void 0;\n            var res = responseBody;\n            // traversing the object step by step.\n            for (var _d = 0, paths_2 = paths; _d < paths_2.length; _d++) {\n                var item = paths_2[_d];\n                if (!res)\n                    break;\n                res = res[item];\n            }\n            propertyInstance = res;\n            var polymorphicDiscriminator = mapper.type.polymorphicDiscriminator;\n            // checking that the model property name (key)(ex: \"fishtype\") and the\n            // clientName of the polymorphicDiscriminator {metadata} (ex: \"fishtype\")\n            // instead of the serializedName of the polymorphicDiscriminator (ex: \"fish.type\")\n            // is a better approach. The generator is not consistent with escaping '\\.' in the\n            // serializedName of the property (ex: \"fish\\.type\") that is marked as polymorphic discriminator\n            // and the serializedName of the metadata polymorphicDiscriminator (ex: \"fish.type\"). However,\n            // the clientName transformation of the polymorphicDiscriminator (ex: \"fishtype\") and\n            // the transformation of model property name (ex: \"fishtype\") is done consistently.\n            // Hence, it is a safer bet to rely on the clientName of the polymorphicDiscriminator.\n            if (polymorphicDiscriminator &&\n                key === polymorphicDiscriminator.clientName &&\n                propertyInstance == undefined) {\n                propertyInstance = mapper.serializedName;\n            }\n            var serializedValue = void 0;\n            // paging\n            if (Array.isArray(responseBody[key]) && modelProps[key].serializedName === \"\") {\n                propertyInstance = responseBody[key];\n                instance = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName);\n            }\n            else if (propertyInstance !== undefined || propertyMapper.defaultValue !== undefined) {\n                serializedValue = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName);\n                instance[key] = serializedValue;\n            }\n        }\n    }\n    var additionalPropertiesMapper = mapper.type.additionalProperties;\n    if (additionalPropertiesMapper) {\n        var isAdditionalProperty = function (responsePropName) {\n            for (var clientPropName in modelProps) {\n                var paths = splitSerializeName(modelProps[clientPropName].serializedName);\n                if (paths[0] === responsePropName) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        for (var responsePropName in responseBody) {\n            if (isAdditionalProperty(responsePropName)) {\n                instance[responsePropName] = serializer.deserialize(additionalPropertiesMapper, responseBody[responsePropName], objectName + '[\"' + responsePropName + '\"]');\n            }\n        }\n    }\n    else if (responseBody) {\n        for (var _e = 0, _f = Object.keys(responseBody); _e < _f.length; _e++) {\n            var key = _f[_e];\n            if (instance[key] === undefined &&\n                !handledPropertyNames.includes(key) &&\n                !isSpecialXmlProperty(key)) {\n                instance[key] = responseBody[key];\n            }\n        }\n    }\n    return instance;\n}\nfunction deserializeDictionaryType(serializer, mapper, responseBody, objectName) {\n    var value = mapper.type.value;\n    if (!value || typeof value !== \"object\") {\n        throw new Error(\"\\\"value\\\" metadata for a Dictionary must be defined in the \" +\n            (\"mapper and it must of type \\\"object\\\" in \" + objectName));\n    }\n    if (responseBody) {\n        var tempDictionary = {};\n        for (var _i = 0, _a = Object.keys(responseBody); _i < _a.length; _i++) {\n            var key = _a[_i];\n            tempDictionary[key] = serializer.deserialize(value, responseBody[key], objectName);\n        }\n        return tempDictionary;\n    }\n    return responseBody;\n}\nfunction deserializeSequenceType(serializer, mapper, responseBody, objectName) {\n    var element = mapper.type.element;\n    if (!element || typeof element !== \"object\") {\n        throw new Error(\"element\\\" metadata for an Array must be defined in the \" +\n            (\"mapper and it must of type \\\"object\\\" in \" + objectName));\n    }\n    if (responseBody) {\n        if (!Array.isArray(responseBody)) {\n            // xml2js will interpret a single element array as just the element, so force it to be an array\n            responseBody = [responseBody];\n        }\n        var tempArray = [];\n        for (var i = 0; i < responseBody.length; i++) {\n            tempArray[i] = serializer.deserialize(element, responseBody[i], objectName + \"[\" + i + \"]\");\n        }\n        return tempArray;\n    }\n    return responseBody;\n}\nfunction getPolymorphicMapper(serializer, mapper, object, polymorphicPropertyName) {\n    var polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n    if (polymorphicDiscriminator) {\n        var discriminatorName = polymorphicDiscriminator[polymorphicPropertyName];\n        if (discriminatorName != undefined) {\n            var discriminatorValue = object[discriminatorName];\n            if (discriminatorValue != undefined) {\n                var typeName = mapper.type.uberParent || mapper.type.className;\n                var indexDiscriminator = discriminatorValue === typeName\n                    ? discriminatorValue\n                    : typeName + \".\" + discriminatorValue;\n                var polymorphicMapper = serializer.modelMappers.discriminators[indexDiscriminator];\n                if (polymorphicMapper) {\n                    mapper = polymorphicMapper;\n                }\n            }\n        }\n    }\n    return mapper;\n}\nfunction getPolymorphicDiscriminatorRecursively(serializer, mapper) {\n    return (mapper.type.polymorphicDiscriminator ||\n        getPolymorphicDiscriminatorSafely(serializer, mapper.type.uberParent) ||\n        getPolymorphicDiscriminatorSafely(serializer, mapper.type.className));\n}\nfunction getPolymorphicDiscriminatorSafely(serializer, typeName) {\n    return (typeName &&\n        serializer.modelMappers[typeName] &&\n        serializer.modelMappers[typeName].type.polymorphicDiscriminator);\n}\n// TODO: why is this here?\nfunction serializeObject(toSerialize) {\n    if (toSerialize == undefined)\n        return undefined;\n    if (toSerialize instanceof Uint8Array) {\n        toSerialize = encodeByteArray(toSerialize);\n        return toSerialize;\n    }\n    else if (toSerialize instanceof Date) {\n        return toSerialize.toISOString();\n    }\n    else if (Array.isArray(toSerialize)) {\n        var array = [];\n        for (var i = 0; i < toSerialize.length; i++) {\n            array.push(serializeObject(toSerialize[i]));\n        }\n        return array;\n    }\n    else if (typeof toSerialize === \"object\") {\n        var dictionary = {};\n        for (var property in toSerialize) {\n            dictionary[property] = serializeObject(toSerialize[property]);\n        }\n        return dictionary;\n    }\n    return toSerialize;\n}\n/**\n * Utility function to create a K:V from a list of strings\n */\nfunction strEnum(o) {\n    var result = {};\n    for (var _i = 0, o_1 = o; _i < o_1.length; _i++) {\n        var key = o_1[_i];\n        result[key] = key;\n    }\n    return result;\n}\nvar MapperType = strEnum([\n    \"Base64Url\",\n    \"Boolean\",\n    \"ByteArray\",\n    \"Composite\",\n    \"Date\",\n    \"DateTime\",\n    \"DateTimeRfc1123\",\n    \"Dictionary\",\n    \"Enum\",\n    \"Number\",\n    \"Object\",\n    \"Sequence\",\n    \"String\",\n    \"Stream\",\n    \"TimeSpan\",\n    \"UnixTime\"\n]);\n\n// Copyright (c) Microsoft Corporation.\nfunction isWebResourceLike(object) {\n    if (typeof object !== \"object\") {\n        return false;\n    }\n    if (typeof object.url === \"string\" &&\n        typeof object.method === \"string\" &&\n        typeof object.headers === \"object\" &&\n        isHttpHeadersLike(object.headers) &&\n        typeof object.validateRequestProperties === \"function\" &&\n        typeof object.prepare === \"function\" &&\n        typeof object.clone === \"function\") {\n        return true;\n    }\n    return false;\n}\n/**\n * Creates a new WebResource object.\n *\n * This class provides an abstraction over a REST call by being library / implementation agnostic and wrapping the necessary\n * properties to initiate a request.\n *\n * @constructor\n */\nvar WebResource = /** @class */ (function () {\n    function WebResource(url, method, body, query, headers, streamResponseBody, withCredentials, abortSignal, timeout, onUploadProgress, onDownloadProgress, proxySettings, keepAlive, decompressResponse) {\n        this.streamResponseBody = streamResponseBody;\n        this.url = url || \"\";\n        this.method = method || \"GET\";\n        this.headers = isHttpHeadersLike(headers) ? headers : new HttpHeaders(headers);\n        this.body = body;\n        this.query = query;\n        this.formData = undefined;\n        this.withCredentials = withCredentials || false;\n        this.abortSignal = abortSignal;\n        this.timeout = timeout || 0;\n        this.onUploadProgress = onUploadProgress;\n        this.onDownloadProgress = onDownloadProgress;\n        this.proxySettings = proxySettings;\n        this.keepAlive = keepAlive;\n        this.decompressResponse = decompressResponse;\n        this.requestId = this.headers.get(\"x-ms-client-request-id\") || generateUuid();\n    }\n    /**\n     * Validates that the required properties such as method, url, headers[\"Content-Type\"],\n     * headers[\"accept-language\"] are defined. It will throw an error if one of the above\n     * mentioned properties are not defined.\n     */\n    WebResource.prototype.validateRequestProperties = function () {\n        if (!this.method) {\n            throw new Error(\"WebResource.method is required.\");\n        }\n        if (!this.url) {\n            throw new Error(\"WebResource.url is required.\");\n        }\n    };\n    /**\n     * Prepares the request.\n     * @param {RequestPrepareOptions} options Options to provide for preparing the request.\n     * @returns {WebResource} Returns the prepared WebResource (HTTP Request) object that needs to be given to the request pipeline.\n     */\n    WebResource.prototype.prepare = function (options) {\n        if (!options) {\n            throw new Error(\"options object is required\");\n        }\n        if (options.method === undefined ||\n            options.method === null ||\n            typeof options.method.valueOf() !== \"string\") {\n            throw new Error(\"options.method must be a string.\");\n        }\n        if (options.url && options.pathTemplate) {\n            throw new Error(\"options.url and options.pathTemplate are mutually exclusive. Please provide exactly one of them.\");\n        }\n        if ((options.pathTemplate === undefined ||\n            options.pathTemplate === null ||\n            typeof options.pathTemplate.valueOf() !== \"string\") &&\n            (options.url === undefined ||\n                options.url === null ||\n                typeof options.url.valueOf() !== \"string\")) {\n            throw new Error(\"Please provide exactly one of options.pathTemplate or options.url.\");\n        }\n        // set the url if it is provided.\n        if (options.url) {\n            if (typeof options.url !== \"string\") {\n                throw new Error('options.url must be of type \"string\".');\n            }\n            this.url = options.url;\n        }\n        // set the method\n        if (options.method) {\n            var validMethods = [\"GET\", \"PUT\", \"HEAD\", \"DELETE\", \"OPTIONS\", \"POST\", \"PATCH\", \"TRACE\"];\n            if (validMethods.indexOf(options.method.toUpperCase()) === -1) {\n                throw new Error('The provided method \"' +\n                    options.method +\n                    '\" is invalid. Supported HTTP methods are: ' +\n                    JSON.stringify(validMethods));\n            }\n        }\n        this.method = options.method.toUpperCase();\n        // construct the url if path template is provided\n        if (options.pathTemplate) {\n            var pathTemplate_1 = options.pathTemplate, pathParameters_1 = options.pathParameters;\n            if (typeof pathTemplate_1 !== \"string\") {\n                throw new Error('options.pathTemplate must be of type \"string\".');\n            }\n            if (!options.baseUrl) {\n                options.baseUrl = \"https://management.azure.com\";\n            }\n            var baseUrl = options.baseUrl;\n            var url_1 = baseUrl +\n                (baseUrl.endsWith(\"/\") ? \"\" : \"/\") +\n                (pathTemplate_1.startsWith(\"/\") ? pathTemplate_1.slice(1) : pathTemplate_1);\n            var segments = url_1.match(/({[\\w-]*\\s*[\\w-]*})/gi);\n            if (segments && segments.length) {\n                if (!pathParameters_1) {\n                    throw new Error(\"pathTemplate: \" + pathTemplate_1 + \" has been provided. Hence, options.pathParameters must also be provided.\");\n                }\n                segments.forEach(function (item) {\n                    var pathParamName = item.slice(1, -1);\n                    var pathParam = pathParameters_1[pathParamName];\n                    if (pathParam === null ||\n                        pathParam === undefined ||\n                        !(typeof pathParam === \"string\" || typeof pathParam === \"object\")) {\n                        var stringifiedPathParameters = JSON.stringify(pathParameters_1, undefined, 2);\n                        throw new Error(\"pathTemplate: \" + pathTemplate_1 + \" contains the path parameter \" + pathParamName +\n                            (\" however, it is not present in parameters: \" + stringifiedPathParameters + \".\") +\n                            (\"The value of the path parameter can either be a \\\"string\\\" of the form { \" + pathParamName + \": \\\"some sample value\\\" } or \") +\n                            (\"it can be an \\\"object\\\" of the form { \\\"\" + pathParamName + \"\\\": { value: \\\"some sample value\\\", skipUrlEncoding: true } }.\"));\n                    }\n                    if (typeof pathParam.valueOf() === \"string\") {\n                        url_1 = url_1.replace(item, encodeURIComponent(pathParam));\n                    }\n                    if (typeof pathParam.valueOf() === \"object\") {\n                        if (!pathParam.value) {\n                            throw new Error(\"options.pathParameters[\" + pathParamName + \"] is of type \\\"object\\\" but it does not contain a \\\"value\\\" property.\");\n                        }\n                        if (pathParam.skipUrlEncoding) {\n                            url_1 = url_1.replace(item, pathParam.value);\n                        }\n                        else {\n                            url_1 = url_1.replace(item, encodeURIComponent(pathParam.value));\n                        }\n                    }\n                });\n            }\n            this.url = url_1;\n        }\n        // append query parameters to the url if they are provided. They can be provided with pathTemplate or url option.\n        if (options.queryParameters) {\n            var queryParameters = options.queryParameters;\n            if (typeof queryParameters !== \"object\") {\n                throw new Error(\"options.queryParameters must be of type object. It should be a JSON object \" +\n                    \"of \\\"query-parameter-name\\\" as the key and the \\\"query-parameter-value\\\" as the value. \" +\n                    \"The \\\"query-parameter-value\\\" may be fo type \\\"string\\\" or an \\\"object\\\" of the form { value: \\\"query-parameter-value\\\", skipUrlEncoding: true }.\");\n            }\n            // append question mark if it is not present in the url\n            if (this.url && this.url.indexOf(\"?\") === -1) {\n                this.url += \"?\";\n            }\n            // construct queryString\n            var queryParams = [];\n            // We need to populate this.query as a dictionary if the request is being used for Sway's validateRequest().\n            this.query = {};\n            for (var queryParamName in queryParameters) {\n                var queryParam = queryParameters[queryParamName];\n                if (queryParam) {\n                    if (typeof queryParam === \"string\") {\n                        queryParams.push(queryParamName + \"=\" + encodeURIComponent(queryParam));\n                        this.query[queryParamName] = encodeURIComponent(queryParam);\n                    }\n                    else if (typeof queryParam === \"object\") {\n                        if (!queryParam.value) {\n                            throw new Error(\"options.queryParameters[\" + queryParamName + \"] is of type \\\"object\\\" but it does not contain a \\\"value\\\" property.\");\n                        }\n                        if (queryParam.skipUrlEncoding) {\n                            queryParams.push(queryParamName + \"=\" + queryParam.value);\n                            this.query[queryParamName] = queryParam.value;\n                        }\n                        else {\n                            queryParams.push(queryParamName + \"=\" + encodeURIComponent(queryParam.value));\n                            this.query[queryParamName] = encodeURIComponent(queryParam.value);\n                        }\n                    }\n                }\n            } // end-of-for\n            // append the queryString\n            this.url += queryParams.join(\"&\");\n        }\n        // add headers to the request if they are provided\n        if (options.headers) {\n            var headers = options.headers;\n            for (var _i = 0, _a = Object.keys(options.headers); _i < _a.length; _i++) {\n                var headerName = _a[_i];\n                this.headers.set(headerName, headers[headerName]);\n            }\n        }\n        // ensure accept-language is set correctly\n        if (!this.headers.get(\"accept-language\")) {\n            this.headers.set(\"accept-language\", \"en-US\");\n        }\n        // ensure the request-id is set correctly\n        if (!this.headers.get(\"x-ms-client-request-id\") && !options.disableClientRequestId) {\n            this.headers.set(\"x-ms-client-request-id\", this.requestId);\n        }\n        // default\n        if (!this.headers.get(\"Content-Type\")) {\n            this.headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n        }\n        // set the request body. request.js automatically sets the Content-Length request header, so we need not set it explicilty\n        this.body = options.body;\n        if (options.body !== undefined && options.body !== null) {\n            // body as a stream special case. set the body as-is and check for some special request headers specific to sending a stream.\n            if (options.bodyIsStream) {\n                if (!this.headers.get(\"Transfer-Encoding\")) {\n                    this.headers.set(\"Transfer-Encoding\", \"chunked\");\n                }\n                if (this.headers.get(\"Content-Type\") !== \"application/octet-stream\") {\n                    this.headers.set(\"Content-Type\", \"application/octet-stream\");\n                }\n            }\n            else {\n                if (options.serializationMapper) {\n                    this.body = new Serializer(options.mappers).serialize(options.serializationMapper, options.body, \"requestBody\");\n                }\n                if (!options.disableJsonStringifyOnBody) {\n                    this.body = JSON.stringify(options.body);\n                }\n            }\n        }\n        if (options.spanOptions) {\n            this.spanOptions = options.spanOptions;\n        }\n        this.abortSignal = options.abortSignal;\n        this.onDownloadProgress = options.onDownloadProgress;\n        this.onUploadProgress = options.onUploadProgress;\n        return this;\n    };\n    /**\n     * Clone this WebResource HTTP request object.\n     * @returns {WebResource} The clone of this WebResource HTTP request object.\n     */\n    WebResource.prototype.clone = function () {\n        var result = new WebResource(this.url, this.method, this.body, this.query, this.headers && this.headers.clone(), this.streamResponseBody, this.withCredentials, this.abortSignal, this.timeout, this.onUploadProgress, this.onDownloadProgress, this.proxySettings, this.keepAlive, this.decompressResponse);\n        if (this.formData) {\n            result.formData = this.formData;\n        }\n        if (this.operationSpec) {\n            result.operationSpec = this.operationSpec;\n        }\n        if (this.shouldDeserialize) {\n            result.shouldDeserialize = this.shouldDeserialize;\n        }\n        if (this.operationResponseGetter) {\n            result.operationResponseGetter = this.operationResponseGetter;\n        }\n        return result;\n    };\n    return WebResource;\n}());\n\n// Copyright (c) Microsoft Corporation.\nvar custom = util.inspect.custom;\n\n// Copyright (c) Microsoft Corporation.\n/**\n * A class that handles the query portion of a URLBuilder.\n */\nvar URLQuery = /** @class */ (function () {\n    function URLQuery() {\n        this._rawQuery = {};\n    }\n    /**\n     * Get whether or not there any query parameters in this URLQuery.\n     */\n    URLQuery.prototype.any = function () {\n        return Object.keys(this._rawQuery).length > 0;\n    };\n    /**\n     * Get the keys of the query string.\n     */\n    URLQuery.prototype.keys = function () {\n        return Object.keys(this._rawQuery);\n    };\n    /**\n     * Set a query parameter with the provided name and value. If the parameterValue is undefined or\n     * empty, then this will attempt to remove an existing query parameter with the provided\n     * parameterName.\n     */\n    URLQuery.prototype.set = function (parameterName, parameterValue) {\n        if (parameterName) {\n            if (parameterValue !== undefined && parameterValue !== null) {\n                var newValue = Array.isArray(parameterValue) ? parameterValue : parameterValue.toString();\n                this._rawQuery[parameterName] = newValue;\n            }\n            else {\n                delete this._rawQuery[parameterName];\n            }\n        }\n    };\n    /**\n     * Get the value of the query parameter with the provided name. If no parameter exists with the\n     * provided parameter name, then undefined will be returned.\n     */\n    URLQuery.prototype.get = function (parameterName) {\n        return parameterName ? this._rawQuery[parameterName] : undefined;\n    };\n    /**\n     * Get the string representation of this query. The return value will not start with a \"?\".\n     */\n    URLQuery.prototype.toString = function () {\n        var result = \"\";\n        for (var parameterName in this._rawQuery) {\n            if (result) {\n                result += \"&\";\n            }\n            var parameterValue = this._rawQuery[parameterName];\n            if (Array.isArray(parameterValue)) {\n                var parameterStrings = [];\n                for (var _i = 0, parameterValue_1 = parameterValue; _i < parameterValue_1.length; _i++) {\n                    var parameterValueElement = parameterValue_1[_i];\n                    parameterStrings.push(parameterName + \"=\" + parameterValueElement);\n                }\n                result += parameterStrings.join(\"&\");\n            }\n            else {\n                result += parameterName + \"=\" + parameterValue;\n            }\n        }\n        return result;\n    };\n    /**\n     * Parse a URLQuery from the provided text.\n     */\n    URLQuery.parse = function (text) {\n        var result = new URLQuery();\n        if (text) {\n            if (text.startsWith(\"?\")) {\n                text = text.substring(1);\n            }\n            var currentState = \"ParameterName\";\n            var parameterName = \"\";\n            var parameterValue = \"\";\n            for (var i = 0; i < text.length; ++i) {\n                var currentCharacter = text[i];\n                switch (currentState) {\n                    case \"ParameterName\":\n                        switch (currentCharacter) {\n                            case \"=\":\n                                currentState = \"ParameterValue\";\n                                break;\n                            case \"&\":\n                                parameterName = \"\";\n                                parameterValue = \"\";\n                                break;\n                            default:\n                                parameterName += currentCharacter;\n                                break;\n                        }\n                        break;\n                    case \"ParameterValue\":\n                        switch (currentCharacter) {\n                            case \"=\":\n                                parameterName = \"\";\n                                parameterValue = \"\";\n                                currentState = \"Invalid\";\n                                break;\n                            case \"&\":\n                                result.set(parameterName, parameterValue);\n                                parameterName = \"\";\n                                parameterValue = \"\";\n                                currentState = \"ParameterName\";\n                                break;\n                            default:\n                                parameterValue += currentCharacter;\n                                break;\n                        }\n                        break;\n                    case \"Invalid\":\n                        if (currentCharacter === \"&\") {\n                            currentState = \"ParameterName\";\n                        }\n                        break;\n                    default:\n                        throw new Error(\"Unrecognized URLQuery parse state: \" + currentState);\n                }\n            }\n            if (currentState === \"ParameterValue\") {\n                result.set(parameterName, parameterValue);\n            }\n        }\n        return result;\n    };\n    return URLQuery;\n}());\n/**\n * A class that handles creating, modifying, and parsing URLs.\n */\nvar URLBuilder = /** @class */ (function () {\n    function URLBuilder() {\n    }\n    /**\n     * Set the scheme/protocol for this URL. If the provided scheme contains other parts of a URL\n     * (such as a host, port, path, or query), those parts will be added to this URL as well.\n     */\n    URLBuilder.prototype.setScheme = function (scheme) {\n        if (!scheme) {\n            this._scheme = undefined;\n        }\n        else {\n            this.set(scheme, \"SCHEME\");\n        }\n    };\n    /**\n     * Get the scheme that has been set in this URL.\n     */\n    URLBuilder.prototype.getScheme = function () {\n        return this._scheme;\n    };\n    /**\n     * Set the host for this URL. If the provided host contains other parts of a URL (such as a\n     * port, path, or query), those parts will be added to this URL as well.\n     */\n    URLBuilder.prototype.setHost = function (host) {\n        if (!host) {\n            this._host = undefined;\n        }\n        else {\n            this.set(host, \"SCHEME_OR_HOST\");\n        }\n    };\n    /**\n     * Get the host that has been set in this URL.\n     */\n    URLBuilder.prototype.getHost = function () {\n        return this._host;\n    };\n    /**\n     * Set the port for this URL. If the provided port contains other parts of a URL (such as a\n     * path or query), those parts will be added to this URL as well.\n     */\n    URLBuilder.prototype.setPort = function (port) {\n        if (port === undefined || port === null || port === \"\") {\n            this._port = undefined;\n        }\n        else {\n            this.set(port.toString(), \"PORT\");\n        }\n    };\n    /**\n     * Get the port that has been set in this URL.\n     */\n    URLBuilder.prototype.getPort = function () {\n        return this._port;\n    };\n    /**\n     * Set the path for this URL. If the provided path contains a query, then it will be added to\n     * this URL as well.\n     */\n    URLBuilder.prototype.setPath = function (path) {\n        if (!path) {\n            this._path = undefined;\n        }\n        else {\n            var schemeIndex = path.indexOf(\"://\");\n            if (schemeIndex !== -1) {\n                var schemeStart = path.lastIndexOf(\"/\", schemeIndex);\n                // Make sure to only grab the URL part of the path before setting the state back to SCHEME\n                // this will handle cases such as \"/a/b/c/https://microsoft.com\" => \"https://microsoft.com\"\n                this.set(schemeStart === -1 ? path : path.substr(schemeStart + 1), \"SCHEME\");\n            }\n            else {\n                this.set(path, \"PATH\");\n            }\n        }\n    };\n    /**\n     * Append the provided path to this URL's existing path. If the provided path contains a query,\n     * then it will be added to this URL as well.\n     */\n    URLBuilder.prototype.appendPath = function (path) {\n        if (path) {\n            var currentPath = this.getPath();\n            if (currentPath) {\n                if (!currentPath.endsWith(\"/\")) {\n                    currentPath += \"/\";\n                }\n                if (path.startsWith(\"/\")) {\n                    path = path.substring(1);\n                }\n                path = currentPath + path;\n            }\n            this.set(path, \"PATH\");\n        }\n    };\n    /**\n     * Get the path that has been set in this URL.\n     */\n    URLBuilder.prototype.getPath = function () {\n        return this._path;\n    };\n    /**\n     * Set the query in this URL.\n     */\n    URLBuilder.prototype.setQuery = function (query) {\n        if (!query) {\n            this._query = undefined;\n        }\n        else {\n            this._query = URLQuery.parse(query);\n        }\n    };\n    /**\n     * Set a query parameter with the provided name and value in this URL's query. If the provided\n     * query parameter value is undefined or empty, then the query parameter will be removed if it\n     * existed.\n     */\n    URLBuilder.prototype.setQueryParameter = function (queryParameterName, queryParameterValue) {\n        if (queryParameterName) {\n            if (!this._query) {\n                this._query = new URLQuery();\n            }\n            this._query.set(queryParameterName, queryParameterValue);\n        }\n    };\n    /**\n     * Get the value of the query parameter with the provided query parameter name. If no query\n     * parameter exists with the provided name, then undefined will be returned.\n     */\n    URLBuilder.prototype.getQueryParameterValue = function (queryParameterName) {\n        return this._query ? this._query.get(queryParameterName) : undefined;\n    };\n    /**\n     * Get the query in this URL.\n     */\n    URLBuilder.prototype.getQuery = function () {\n        return this._query ? this._query.toString() : undefined;\n    };\n    /**\n     * Set the parts of this URL by parsing the provided text using the provided startState.\n     */\n    URLBuilder.prototype.set = function (text, startState) {\n        var tokenizer = new URLTokenizer(text, startState);\n        while (tokenizer.next()) {\n            var token = tokenizer.current();\n            var tokenPath = void 0;\n            if (token) {\n                switch (token.type) {\n                    case \"SCHEME\":\n                        this._scheme = token.text || undefined;\n                        break;\n                    case \"HOST\":\n                        this._host = token.text || undefined;\n                        break;\n                    case \"PORT\":\n                        this._port = token.text || undefined;\n                        break;\n                    case \"PATH\":\n                        tokenPath = token.text || undefined;\n                        if (!this._path || this._path === \"/\" || tokenPath !== \"/\") {\n                            this._path = tokenPath;\n                        }\n                        break;\n                    case \"QUERY\":\n                        this._query = URLQuery.parse(token.text);\n                        break;\n                    default:\n                        throw new Error(\"Unrecognized URLTokenType: \" + token.type);\n                }\n            }\n        }\n    };\n    URLBuilder.prototype.toString = function () {\n        var result = \"\";\n        if (this._scheme) {\n            result += this._scheme + \"://\";\n        }\n        if (this._host) {\n            result += this._host;\n        }\n        if (this._port) {\n            result += \":\" + this._port;\n        }\n        if (this._path) {\n            if (!this._path.startsWith(\"/\")) {\n                result += \"/\";\n            }\n            result += this._path;\n        }\n        if (this._query && this._query.any()) {\n            result += \"?\" + this._query.toString();\n        }\n        return result;\n    };\n    /**\n     * If the provided searchValue is found in this URLBuilder, then replace it with the provided\n     * replaceValue.\n     */\n    URLBuilder.prototype.replaceAll = function (searchValue, replaceValue) {\n        if (searchValue) {\n            this.setScheme(replaceAll(this.getScheme(), searchValue, replaceValue));\n            this.setHost(replaceAll(this.getHost(), searchValue, replaceValue));\n            this.setPort(replaceAll(this.getPort(), searchValue, replaceValue));\n            this.setPath(replaceAll(this.getPath(), searchValue, replaceValue));\n            this.setQuery(replaceAll(this.getQuery(), searchValue, replaceValue));\n        }\n    };\n    URLBuilder.parse = function (text) {\n        var result = new URLBuilder();\n        result.set(text, \"SCHEME_OR_HOST\");\n        return result;\n    };\n    return URLBuilder;\n}());\nvar URLToken = /** @class */ (function () {\n    function URLToken(text, type) {\n        this.text = text;\n        this.type = type;\n    }\n    URLToken.scheme = function (text) {\n        return new URLToken(text, \"SCHEME\");\n    };\n    URLToken.host = function (text) {\n        return new URLToken(text, \"HOST\");\n    };\n    URLToken.port = function (text) {\n        return new URLToken(text, \"PORT\");\n    };\n    URLToken.path = function (text) {\n        return new URLToken(text, \"PATH\");\n    };\n    URLToken.query = function (text) {\n        return new URLToken(text, \"QUERY\");\n    };\n    return URLToken;\n}());\n/**\n * Get whether or not the provided character (single character string) is an alphanumeric (letter or\n * digit) character.\n */\nfunction isAlphaNumericCharacter(character) {\n    var characterCode = character.charCodeAt(0);\n    return ((48 /* '0' */ <= characterCode && characterCode <= 57) /* '9' */ ||\n        (65 /* 'A' */ <= characterCode && characterCode <= 90) /* 'Z' */ ||\n        (97 /* 'a' */ <= characterCode && characterCode <= 122) /* 'z' */);\n}\n/**\n * A class that tokenizes URL strings.\n */\nvar URLTokenizer = /** @class */ (function () {\n    function URLTokenizer(_text, state) {\n        this._text = _text;\n        this._textLength = _text ? _text.length : 0;\n        this._currentState = state !== undefined && state !== null ? state : \"SCHEME_OR_HOST\";\n        this._currentIndex = 0;\n    }\n    /**\n     * Get the current URLToken this URLTokenizer is pointing at, or undefined if the URLTokenizer\n     * hasn't started or has finished tokenizing.\n     */\n    URLTokenizer.prototype.current = function () {\n        return this._currentToken;\n    };\n    /**\n     * Advance to the next URLToken and return whether or not a URLToken was found.\n     */\n    URLTokenizer.prototype.next = function () {\n        if (!hasCurrentCharacter(this)) {\n            this._currentToken = undefined;\n        }\n        else {\n            switch (this._currentState) {\n                case \"SCHEME\":\n                    nextScheme(this);\n                    break;\n                case \"SCHEME_OR_HOST\":\n                    nextSchemeOrHost(this);\n                    break;\n                case \"HOST\":\n                    nextHost(this);\n                    break;\n                case \"PORT\":\n                    nextPort(this);\n                    break;\n                case \"PATH\":\n                    nextPath(this);\n                    break;\n                case \"QUERY\":\n                    nextQuery(this);\n                    break;\n                default:\n                    throw new Error(\"Unrecognized URLTokenizerState: \" + this._currentState);\n            }\n        }\n        return !!this._currentToken;\n    };\n    return URLTokenizer;\n}());\n/**\n * Read the remaining characters from this Tokenizer's character stream.\n */\nfunction readRemaining(tokenizer) {\n    var result = \"\";\n    if (tokenizer._currentIndex < tokenizer._textLength) {\n        result = tokenizer._text.substring(tokenizer._currentIndex);\n        tokenizer._currentIndex = tokenizer._textLength;\n    }\n    return result;\n}\n/**\n * Whether or not this URLTokenizer has a current character.\n */\nfunction hasCurrentCharacter(tokenizer) {\n    return tokenizer._currentIndex < tokenizer._textLength;\n}\n/**\n * Get the character in the text string at the current index.\n */\nfunction getCurrentCharacter(tokenizer) {\n    return tokenizer._text[tokenizer._currentIndex];\n}\n/**\n * Advance to the character in text that is \"step\" characters ahead. If no step value is provided,\n * then step will default to 1.\n */\nfunction nextCharacter(tokenizer, step) {\n    if (hasCurrentCharacter(tokenizer)) {\n        if (!step) {\n            step = 1;\n        }\n        tokenizer._currentIndex += step;\n    }\n}\n/**\n * Starting with the current character, peek \"charactersToPeek\" number of characters ahead in this\n * Tokenizer's stream of characters.\n */\nfunction peekCharacters(tokenizer, charactersToPeek) {\n    var endIndex = tokenizer._currentIndex + charactersToPeek;\n    if (tokenizer._textLength < endIndex) {\n        endIndex = tokenizer._textLength;\n    }\n    return tokenizer._text.substring(tokenizer._currentIndex, endIndex);\n}\n/**\n * Read characters from this Tokenizer until the end of the stream or until the provided condition\n * is false when provided the current character.\n */\nfunction readWhile(tokenizer, condition) {\n    var result = \"\";\n    while (hasCurrentCharacter(tokenizer)) {\n        var currentCharacter = getCurrentCharacter(tokenizer);\n        if (!condition(currentCharacter)) {\n            break;\n        }\n        else {\n            result += currentCharacter;\n            nextCharacter(tokenizer);\n        }\n    }\n    return result;\n}\n/**\n * Read characters from this Tokenizer until a non-alphanumeric character or the end of the\n * character stream is reached.\n */\nfunction readWhileLetterOrDigit(tokenizer) {\n    return readWhile(tokenizer, function (character) { return isAlphaNumericCharacter(character); });\n}\n/**\n * Read characters from this Tokenizer until one of the provided terminating characters is read or\n * the end of the character stream is reached.\n */\nfunction readUntilCharacter(tokenizer) {\n    var terminatingCharacters = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        terminatingCharacters[_i - 1] = arguments[_i];\n    }\n    return readWhile(tokenizer, function (character) { return terminatingCharacters.indexOf(character) === -1; });\n}\nfunction nextScheme(tokenizer) {\n    var scheme = readWhileLetterOrDigit(tokenizer);\n    tokenizer._currentToken = URLToken.scheme(scheme);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else {\n        tokenizer._currentState = \"HOST\";\n    }\n}\nfunction nextSchemeOrHost(tokenizer) {\n    var schemeOrHost = readUntilCharacter(tokenizer, \":\", \"/\", \"?\");\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentToken = URLToken.host(schemeOrHost);\n        tokenizer._currentState = \"DONE\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \":\") {\n        if (peekCharacters(tokenizer, 3) === \"://\") {\n            tokenizer._currentToken = URLToken.scheme(schemeOrHost);\n            tokenizer._currentState = \"HOST\";\n        }\n        else {\n            tokenizer._currentToken = URLToken.host(schemeOrHost);\n            tokenizer._currentState = \"PORT\";\n        }\n    }\n    else {\n        tokenizer._currentToken = URLToken.host(schemeOrHost);\n        if (getCurrentCharacter(tokenizer) === \"/\") {\n            tokenizer._currentState = \"PATH\";\n        }\n        else {\n            tokenizer._currentState = \"QUERY\";\n        }\n    }\n}\nfunction nextHost(tokenizer) {\n    if (peekCharacters(tokenizer, 3) === \"://\") {\n        nextCharacter(tokenizer, 3);\n    }\n    var host = readUntilCharacter(tokenizer, \":\", \"/\", \"?\");\n    tokenizer._currentToken = URLToken.host(host);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \":\") {\n        tokenizer._currentState = \"PORT\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \"/\") {\n        tokenizer._currentState = \"PATH\";\n    }\n    else {\n        tokenizer._currentState = \"QUERY\";\n    }\n}\nfunction nextPort(tokenizer) {\n    if (getCurrentCharacter(tokenizer) === \":\") {\n        nextCharacter(tokenizer);\n    }\n    var port = readUntilCharacter(tokenizer, \"/\", \"?\");\n    tokenizer._currentToken = URLToken.port(port);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \"/\") {\n        tokenizer._currentState = \"PATH\";\n    }\n    else {\n        tokenizer._currentState = \"QUERY\";\n    }\n}\nfunction nextPath(tokenizer) {\n    var path = readUntilCharacter(tokenizer, \"?\");\n    tokenizer._currentToken = URLToken.path(path);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else {\n        tokenizer._currentState = \"QUERY\";\n    }\n}\nfunction nextQuery(tokenizer) {\n    if (getCurrentCharacter(tokenizer) === \"?\") {\n        nextCharacter(tokenizer);\n    }\n    var query = readRemaining(tokenizer);\n    tokenizer._currentToken = URLToken.query(query);\n    tokenizer._currentState = \"DONE\";\n}\n\n// Copyright (c) Microsoft Corporation.\nvar RedactedString = \"REDACTED\";\nvar defaultAllowedHeaderNames = [\n    \"x-ms-client-request-id\",\n    \"x-ms-return-client-request-id\",\n    \"x-ms-useragent\",\n    \"x-ms-correlation-request-id\",\n    \"x-ms-request-id\",\n    \"client-request-id\",\n    \"return-client-request-id\",\n    \"traceparent\",\n    \"Access-Control-Allow-Credentials\",\n    \"Access-Control-Allow-Headers\",\n    \"Access-Control-Allow-Methods\",\n    \"Access-Control-Allow-Origin\",\n    \"Access-Control-Expose-Headers\",\n    \"Access-Control-Max-Age\",\n    \"Access-Control-Request-Headers\",\n    \"Access-Control-Request-Method\",\n    \"Origin\",\n    \"Accept\",\n    \"Cache-Control\",\n    \"Connection\",\n    \"Content-Length\",\n    \"Content-Type\",\n    \"Date\",\n    \"ETag\",\n    \"Expires\",\n    \"If-Match\",\n    \"If-Modified-Since\",\n    \"If-None-Match\",\n    \"If-Unmodified-Since\",\n    \"Last-Modified\",\n    \"Pragma\",\n    \"Request-Id\",\n    \"Retry-After\",\n    \"Server\",\n    \"Transfer-Encoding\",\n    \"User-Agent\"\n];\nvar defaultAllowedQueryParameters = [\"api-version\"];\nvar Sanitizer = /** @class */ (function () {\n    function Sanitizer(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.allowedHeaderNames, allowedHeaderNames = _c === void 0 ? [] : _c, _d = _b.allowedQueryParameters, allowedQueryParameters = _d === void 0 ? [] : _d;\n        allowedHeaderNames = Array.isArray(allowedHeaderNames)\n            ? defaultAllowedHeaderNames.concat(allowedHeaderNames)\n            : defaultAllowedHeaderNames;\n        allowedQueryParameters = Array.isArray(allowedQueryParameters)\n            ? defaultAllowedQueryParameters.concat(allowedQueryParameters)\n            : defaultAllowedQueryParameters;\n        this.allowedHeaderNames = new Set(allowedHeaderNames.map(function (n) { return n.toLowerCase(); }));\n        this.allowedQueryParameters = new Set(allowedQueryParameters.map(function (p) { return p.toLowerCase(); }));\n    }\n    Sanitizer.prototype.sanitize = function (obj) {\n        return JSON.stringify(obj, this.replacer.bind(this), 2);\n    };\n    Sanitizer.prototype.replacer = function (key, value) {\n        // Ensure Errors include their interesting non-enumerable members\n        if (value instanceof Error) {\n            return tslib.__assign(tslib.__assign({}, value), { name: value.name, message: value.message });\n        }\n        if (key === \"_headersMap\") {\n            return this.sanitizeHeaders(key, value);\n        }\n        else if (key === \"url\") {\n            return this.sanitizeUrl(value);\n        }\n        else if (key === \"query\") {\n            return this.sanitizeQuery(value);\n        }\n        else if (key === \"body\") {\n            // Don't log the request body\n            return undefined;\n        }\n        else if (key === \"response\") {\n            // Don't log response again\n            return undefined;\n        }\n        else if (key === \"operationSpec\") {\n            // When using sendOperationRequest, the request carries a massive\n            // field with the autorest spec. No need to log it.\n            return undefined;\n        }\n        return value;\n    };\n    Sanitizer.prototype.sanitizeHeaders = function (_, value) {\n        return this.sanitizeObject(value, this.allowedHeaderNames, function (v, k) { return v[k].value; });\n    };\n    Sanitizer.prototype.sanitizeQuery = function (value) {\n        return this.sanitizeObject(value, this.allowedQueryParameters, function (v, k) { return v[k]; });\n    };\n    Sanitizer.prototype.sanitizeObject = function (value, allowedKeys, accessor) {\n        if (typeof value !== \"object\" || value === null) {\n            return value;\n        }\n        var sanitized = {};\n        for (var _i = 0, _a = Object.keys(value); _i < _a.length; _i++) {\n            var k = _a[_i];\n            if (allowedKeys.has(k.toLowerCase())) {\n                sanitized[k] = accessor(value, k);\n            }\n            else {\n                sanitized[k] = RedactedString;\n            }\n        }\n        return sanitized;\n    };\n    Sanitizer.prototype.sanitizeUrl = function (value) {\n        if (typeof value !== \"string\" || value === null) {\n            return value;\n        }\n        var urlBuilder = URLBuilder.parse(value);\n        var queryString = urlBuilder.getQuery();\n        if (!queryString) {\n            return value;\n        }\n        var query = URLQuery.parse(queryString);\n        for (var _i = 0, _a = query.keys(); _i < _a.length; _i++) {\n            var k = _a[_i];\n            if (!this.allowedQueryParameters.has(k.toLowerCase())) {\n                query.set(k, RedactedString);\n            }\n        }\n        urlBuilder.setQuery(query.toString());\n        return urlBuilder.toString();\n    };\n    return Sanitizer;\n}());\n\n// Copyright (c) Microsoft Corporation.\nvar errorSanitizer = new Sanitizer();\nvar RestError = /** @class */ (function (_super) {\n    tslib.__extends(RestError, _super);\n    function RestError(message, code, statusCode, request, response) {\n        var _this = _super.call(this, message) || this;\n        _this.name = \"RestError\";\n        _this.code = code;\n        _this.statusCode = statusCode;\n        _this.request = request;\n        _this.response = response;\n        Object.setPrototypeOf(_this, RestError.prototype);\n        return _this;\n    }\n    /**\n     * Logging method for util.inspect in Node\n     */\n    RestError.prototype[custom] = function () {\n        return \"RestError: \" + this.message + \" \\n \" + errorSanitizer.sanitize(this);\n    };\n    RestError.REQUEST_SEND_ERROR = \"REQUEST_SEND_ERROR\";\n    RestError.PARSE_ERROR = \"PARSE_ERROR\";\n    return RestError;\n}(Error));\n\n// Copyright (c) Microsoft Corporation.\nvar ReportTransform = /** @class */ (function (_super) {\n    tslib.__extends(ReportTransform, _super);\n    function ReportTransform(progressCallback) {\n        var _this = _super.call(this) || this;\n        _this.progressCallback = progressCallback;\n        _this.loadedBytes = 0;\n        return _this;\n    }\n    ReportTransform.prototype._transform = function (chunk, _encoding, callback) {\n        this.push(chunk);\n        this.loadedBytes += chunk.length;\n        this.progressCallback({ loadedBytes: this.loadedBytes });\n        callback(undefined);\n    };\n    return ReportTransform;\n}(stream.Transform));\nvar FetchHttpClient = /** @class */ (function () {\n    function FetchHttpClient() {\n    }\n    FetchHttpClient.prototype.sendRequest = function (httpRequest) {\n        return tslib.__awaiter(this, void 0, void 0, function () {\n            var abortController$1, abortListener, formData, requestForm_1, appendFormValue, _i, _a, formKey, formValue, j, contentType, body, onUploadProgress, uploadReportStream, platformSpecificRequestInit, requestInit, response, headers, operationResponse, _b, _c, onDownloadProgress, responseBody, downloadReportStream, length_1, error_1, fetchError;\n            return tslib.__generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        if (!httpRequest && typeof httpRequest !== \"object\") {\n                            throw new Error(\"'httpRequest' (WebResourceLike) cannot be null or undefined and must be of type object.\");\n                        }\n                        abortController$1 = new abortController.AbortController();\n                        if (httpRequest.abortSignal) {\n                            if (httpRequest.abortSignal.aborted) {\n                                throw new abortController.AbortError(\"The operation was aborted.\");\n                            }\n                            abortListener = function (event) {\n                                if (event.type === \"abort\") {\n                                    abortController$1.abort();\n                                }\n                            };\n                            httpRequest.abortSignal.addEventListener(\"abort\", abortListener);\n                        }\n                        if (httpRequest.timeout) {\n                            setTimeout(function () {\n                                abortController$1.abort();\n                            }, httpRequest.timeout);\n                        }\n                        if (httpRequest.formData) {\n                            formData = httpRequest.formData;\n                            requestForm_1 = new FormData();\n                            appendFormValue = function (key, value) {\n                                // value function probably returns a stream so we can provide a fresh stream on each retry\n                                if (typeof value === \"function\") {\n                                    value = value();\n                                }\n                                // eslint-disable-next-line no-prototype-builtins\n                                if (value && value.hasOwnProperty(\"value\") && value.hasOwnProperty(\"options\")) {\n                                    requestForm_1.append(key, value.value, value.options);\n                                }\n                                else {\n                                    requestForm_1.append(key, value);\n                                }\n                            };\n                            for (_i = 0, _a = Object.keys(formData); _i < _a.length; _i++) {\n                                formKey = _a[_i];\n                                formValue = formData[formKey];\n                                if (Array.isArray(formValue)) {\n                                    for (j = 0; j < formValue.length; j++) {\n                                        appendFormValue(formKey, formValue[j]);\n                                    }\n                                }\n                                else {\n                                    appendFormValue(formKey, formValue);\n                                }\n                            }\n                            httpRequest.body = requestForm_1;\n                            httpRequest.formData = undefined;\n                            contentType = httpRequest.headers.get(\"Content-Type\");\n                            if (contentType && contentType.indexOf(\"multipart/form-data\") !== -1) {\n                                if (typeof requestForm_1.getBoundary === \"function\") {\n                                    httpRequest.headers.set(\"Content-Type\", \"multipart/form-data; boundary=\" + requestForm_1.getBoundary());\n                                }\n                                else {\n                                    // browser will automatically apply a suitable content-type header\n                                    httpRequest.headers.remove(\"Content-Type\");\n                                }\n                            }\n                        }\n                        body = httpRequest.body\n                            ? typeof httpRequest.body === \"function\"\n                                ? httpRequest.body()\n                                : httpRequest.body\n                            : undefined;\n                        if (httpRequest.onUploadProgress && httpRequest.body) {\n                            onUploadProgress = httpRequest.onUploadProgress;\n                            uploadReportStream = new ReportTransform(onUploadProgress);\n                            if (isReadableStream(body)) {\n                                body.pipe(uploadReportStream);\n                            }\n                            else {\n                                uploadReportStream.end(body);\n                            }\n                            body = uploadReportStream;\n                        }\n                        return [4 /*yield*/, this.prepareRequest(httpRequest)];\n                    case 1:\n                        platformSpecificRequestInit = _d.sent();\n                        requestInit = tslib.__assign({ body: body, headers: httpRequest.headers.rawHeaders(), method: httpRequest.method, signal: abortController$1.signal }, platformSpecificRequestInit);\n                        _d.label = 2;\n                    case 2:\n                        _d.trys.push([2, 8, 9, 10]);\n                        return [4 /*yield*/, this.fetch(httpRequest.url, requestInit)];\n                    case 3:\n                        response = _d.sent();\n                        headers = parseHeaders(response.headers);\n                        _b = {\n                            headers: headers,\n                            request: httpRequest,\n                            status: response.status,\n                            readableStreamBody: httpRequest.streamResponseBody\n                                ? response.body\n                                : undefined\n                        };\n                        if (!!httpRequest.streamResponseBody) return [3 /*break*/, 5];\n                        return [4 /*yield*/, response.text()];\n                    case 4:\n                        _c = _d.sent();\n                        return [3 /*break*/, 6];\n                    case 5:\n                        _c = undefined;\n                        _d.label = 6;\n                    case 6:\n                        operationResponse = (_b.bodyAsText = _c,\n                            _b);\n                        onDownloadProgress = httpRequest.onDownloadProgress;\n                        if (onDownloadProgress) {\n                            responseBody = response.body || undefined;\n                            if (isReadableStream(responseBody)) {\n                                downloadReportStream = new ReportTransform(onDownloadProgress);\n                                responseBody.pipe(downloadReportStream);\n                                operationResponse.readableStreamBody = downloadReportStream;\n                            }\n                            else {\n                                length_1 = parseInt(headers.get(\"Content-Length\")) || undefined;\n                                if (length_1) {\n                                    // Calling callback for non-stream response for consistency with browser\n                                    onDownloadProgress({ loadedBytes: length_1 });\n                                }\n                            }\n                        }\n                        return [4 /*yield*/, this.processRequest(operationResponse)];\n                    case 7:\n                        _d.sent();\n                        return [2 /*return*/, operationResponse];\n                    case 8:\n                        error_1 = _d.sent();\n                        fetchError = error_1;\n                        if (fetchError.code === \"ENOTFOUND\") {\n                            throw new RestError(fetchError.message, RestError.REQUEST_SEND_ERROR, undefined, httpRequest);\n                        }\n                        else if (fetchError.type === \"aborted\") {\n                            throw new abortController.AbortError(\"The operation was aborted.\");\n                        }\n                        throw fetchError;\n                    case 9:\n                        // clean up event listener\n                        if (httpRequest.abortSignal && abortListener) {\n                            httpRequest.abortSignal.removeEventListener(\"abort\", abortListener);\n                        }\n                        return [7 /*endfinally*/];\n                    case 10: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return FetchHttpClient;\n}());\nfunction isReadableStream(body) {\n    return body && typeof body.pipe === \"function\";\n}\nfunction parseHeaders(headers) {\n    var httpHeaders = new HttpHeaders();\n    headers.forEach(function (value, key) {\n        httpHeaders.set(key, value);\n    });\n    return httpHeaders;\n}\n\n// Copyright (c) Microsoft Corporation.\nfunction createProxyAgent(requestUrl, proxySettings, headers) {\n    var host = URLBuilder.parse(proxySettings.host).getHost();\n    if (!host) {\n        throw new Error(\"Expecting a non-empty host in proxy settings.\");\n    }\n    if (!isValidPort(proxySettings.port)) {\n        throw new Error(\"Expecting a valid port number in the range of [0, 65535] in proxy settings.\");\n    }\n    var tunnelOptions = {\n        proxy: {\n            host: host,\n            port: proxySettings.port,\n            headers: (headers && headers.rawHeaders()) || {}\n        }\n    };\n    if (proxySettings.username && proxySettings.password) {\n        tunnelOptions.proxy.proxyAuth = proxySettings.username + \":\" + proxySettings.password;\n    }\n    var isRequestHttps = isUrlHttps(requestUrl);\n    var isProxyHttps = isUrlHttps(proxySettings.host);\n    var proxyAgent = {\n        isHttps: isRequestHttps,\n        agent: createTunnel(isRequestHttps, isProxyHttps, tunnelOptions)\n    };\n    return proxyAgent;\n}\nfunction isUrlHttps(url) {\n    var urlScheme = URLBuilder.parse(url).getScheme() || \"\";\n    return urlScheme.toLowerCase() === \"https\";\n}\nfunction createTunnel(isRequestHttps, isProxyHttps, tunnelOptions) {\n    if (isRequestHttps && isProxyHttps) {\n        return tunnel.httpsOverHttps(tunnelOptions);\n    }\n    else if (isRequestHttps && !isProxyHttps) {\n        return tunnel.httpsOverHttp(tunnelOptions);\n    }\n    else if (!isRequestHttps && isProxyHttps) {\n        return tunnel.httpOverHttps(tunnelOptions);\n    }\n    else {\n        return tunnel.httpOverHttp(tunnelOptions);\n    }\n}\nfunction isValidPort(port) {\n    // any port in 0-65535 range is valid (RFC 793) even though almost all implementations\n    // will reserve 0 for a specific purpose, and a range of numbers for ephemeral ports\n    return 0 <= port && port <= 65535;\n}\n\n// Copyright (c) Microsoft Corporation.\nfunction getCachedAgent(isHttps, agentCache) {\n    return isHttps ? agentCache.httpsAgent : agentCache.httpAgent;\n}\nvar NodeFetchHttpClient = /** @class */ (function (_super) {\n    tslib.__extends(NodeFetchHttpClient, _super);\n    function NodeFetchHttpClient() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.proxyAgents = {};\n        _this.keepAliveAgents = {};\n        _this.cookieJar = new tough.CookieJar(undefined, { looseMode: true });\n        return _this;\n    }\n    NodeFetchHttpClient.prototype.getOrCreateAgent = function (httpRequest) {\n        var isHttps = isUrlHttps(httpRequest.url);\n        // At the moment, proxy settings and keepAlive are mutually\n        // exclusive because the 'tunnel' library currently lacks the\n        // ability to create a proxy with keepAlive turned on.\n        if (httpRequest.proxySettings) {\n            var agent = getCachedAgent(isHttps, this.proxyAgents);\n            if (agent) {\n                return agent;\n            }\n            var tunnel = createProxyAgent(httpRequest.url, httpRequest.proxySettings, httpRequest.headers);\n            agent = tunnel.agent;\n            if (tunnel.isHttps) {\n                this.proxyAgents.httpsAgent = tunnel.agent;\n            }\n            else {\n                this.proxyAgents.httpAgent = tunnel.agent;\n            }\n            return agent;\n        }\n        else if (httpRequest.keepAlive) {\n            var agent = getCachedAgent(isHttps, this.keepAliveAgents);\n            if (agent) {\n                return agent;\n            }\n            var agentOptions = {\n                keepAlive: httpRequest.keepAlive\n            };\n            if (isHttps) {\n                agent = this.keepAliveAgents.httpsAgent = new https.Agent(agentOptions);\n            }\n            else {\n                agent = this.keepAliveAgents.httpAgent = new http.Agent(agentOptions);\n            }\n            return agent;\n        }\n        else {\n            return isHttps ? https.globalAgent : http.globalAgent;\n        }\n    };\n    // eslint-disable-next-line @azure/azure-sdk/ts-apisurface-standardized-verbs\n    NodeFetchHttpClient.prototype.fetch = function (input, init) {\n        return tslib.__awaiter(this, void 0, void 0, function () {\n            return tslib.__generator(this, function (_a) {\n                return [2 /*return*/, node_fetch(input, init)];\n            });\n        });\n    };\n    NodeFetchHttpClient.prototype.prepareRequest = function (httpRequest) {\n        return tslib.__awaiter(this, void 0, void 0, function () {\n            var requestInit, cookieString;\n            var _this = this;\n            return tslib.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        requestInit = {};\n                        if (!(this.cookieJar && !httpRequest.headers.get(\"Cookie\"))) return [3 /*break*/, 2];\n                        return [4 /*yield*/, new Promise(function (resolve, reject) {\n                                _this.cookieJar.getCookieString(httpRequest.url, function (err, cookie) {\n                                    if (err) {\n                                        reject(err);\n                                    }\n                                    else {\n                                        resolve(cookie);\n                                    }\n                                });\n                            })];\n                    case 1:\n                        cookieString = _a.sent();\n                        httpRequest.headers.set(\"Cookie\", cookieString);\n                        _a.label = 2;\n                    case 2:\n                        // Set the http(s) agent\n                        requestInit.agent = this.getOrCreateAgent(httpRequest);\n                        requestInit.compress = httpRequest.decompressResponse;\n                        return [2 /*return*/, requestInit];\n                }\n            });\n        });\n    };\n    NodeFetchHttpClient.prototype.processRequest = function (operationResponse) {\n        return tslib.__awaiter(this, void 0, void 0, function () {\n            var setCookieHeader_1;\n            var _this = this;\n            return tslib.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.cookieJar) return [3 /*break*/, 2];\n                        setCookieHeader_1 = operationResponse.headers.get(\"Set-Cookie\");\n                        if (!(setCookieHeader_1 !== undefined)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, new Promise(function (resolve, reject) {\n                                _this.cookieJar.setCookie(setCookieHeader_1, operationResponse.request.url, { ignoreError: true }, function (err) {\n                                    if (err) {\n                                        reject(err);\n                                    }\n                                    else {\n                                        resolve();\n                                    }\n                                });\n                            })];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return NodeFetchHttpClient;\n}(FetchHttpClient));\n\n// Copyright (c) Microsoft Corporation.\n(function (HttpPipelineLogLevel) {\n    /**\n     * A log level that indicates that no logs will be logged.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"OFF\"] = 0] = \"OFF\";\n    /**\n     * An error log.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"ERROR\"] = 1] = \"ERROR\";\n    /**\n     * A warning log.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"WARNING\"] = 2] = \"WARNING\";\n    /**\n     * An information log.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"INFO\"] = 3] = \"INFO\";\n})(exports.HttpPipelineLogLevel || (exports.HttpPipelineLogLevel = {}));\n\n/**\n * Converts an OperationOptions to a RequestOptionsBase\n *\n * @param opts OperationOptions object to convert to RequestOptionsBase\n */\nfunction operationOptionsToRequestOptionsBase(opts) {\n    var requestOptions = opts.requestOptions, tracingOptions = opts.tracingOptions, additionalOptions = tslib.__rest(opts, [\"requestOptions\", \"tracingOptions\"]);\n    var result = additionalOptions;\n    if (requestOptions) {\n        result = tslib.__assign(tslib.__assign({}, result), requestOptions);\n    }\n    if (tracingOptions) {\n        result.spanOptions = tracingOptions.spanOptions;\n    }\n    return result;\n}\n\n// Copyright (c) Microsoft Corporation.\nvar BaseRequestPolicy = /** @class */ (function () {\n    function BaseRequestPolicy(_nextPolicy, _options) {\n        this._nextPolicy = _nextPolicy;\n        this._options = _options;\n    }\n    /**\n     * Get whether or not a log with the provided log level should be logged.\n     * @param logLevel The log level of the log that will be logged.\n     * @returns Whether or not a log with the provided log level should be logged.\n     */\n    BaseRequestPolicy.prototype.shouldLog = function (logLevel) {\n        return this._options.shouldLog(logLevel);\n    };\n    /**\n     * Attempt to log the provided message to the provided logger. If no logger was provided or if\n     * the log level does not meat the logger's threshold, then nothing will be logged.\n     * @param logLevel The log level of this log.\n     * @param message The message of this log.\n     */\n    BaseRequestPolicy.prototype.log = function (logLevel, message) {\n        this._options.log(logLevel, message);\n    };\n    return BaseRequestPolicy;\n}());\n/**\n * Optional properties that can be used when creating a RequestPolicy.\n */\nvar RequestPolicyOptions = /** @class */ (function () {\n    function RequestPolicyOptions(_logger) {\n        this._logger = _logger;\n    }\n    /**\n     * Get whether or not a log with the provided log level should be logged.\n     * @param logLevel The log level of the log that will be logged.\n     * @returns Whether or not a log with the provided log level should be logged.\n     */\n    RequestPolicyOptions.prototype.shouldLog = function (logLevel) {\n        return (!!this._logger &&\n            logLevel !== exports.HttpPipelineLogLevel.OFF &&\n            logLevel <= this._logger.minimumLogLevel);\n    };\n    /**\n     * Attempt to log the provided message to the provided logger. If no logger was provided or if\n     * the log level does not meet the logger's threshold, then nothing will be logged.\n     * @param logLevel The log level of this log.\n     * @param message The message of this log.\n     */\n    RequestPolicyOptions.prototype.log = function (logLevel, message) {\n        if (this._logger && this.shouldLog(logLevel)) {\n            this._logger.log(logLevel, message);\n        }\n    };\n    return RequestPolicyOptions;\n}());\n\n// Copyright (c) Microsoft Corporation.\nvar logger = logger$1.createClientLogger(\"core-http\");\n\n// Copyright (c) Microsoft Corporation.\nfunction logPolicy(loggingOptions) {\n    if (loggingOptions === void 0) { loggingOptions = {}; }\n    return {\n        create: function (nextPolicy, options) {\n            return new LogPolicy(nextPolicy, options, loggingOptions);\n        }\n    };\n}\nvar LogPolicy = /** @class */ (function (_super) {\n    tslib.__extends(LogPolicy, _super);\n    function LogPolicy(nextPolicy, options, _a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.logger, logger$1 = _c === void 0 ? logger.info : _c, _d = _b.allowedHeaderNames, allowedHeaderNames = _d === void 0 ? [] : _d, _e = _b.allowedQueryParameters, allowedQueryParameters = _e === void 0 ? [] : _e;\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.logger = logger$1;\n        _this.sanitizer = new Sanitizer({ allowedHeaderNames: allowedHeaderNames, allowedQueryParameters: allowedQueryParameters });\n        return _this;\n    }\n    Object.defineProperty(LogPolicy.prototype, \"allowedHeaderNames\", {\n        /**\n         * Header names whose values will be logged when logging is enabled. Defaults to\n         * Date, traceparent, x-ms-client-request-id, and x-ms-request id.  Any headers\n         * specified in this field will be added to that list.  Any other values will\n         * be written to logs as \"REDACTED\".\n         * @deprecated Pass these into the constructor instead.\n         */\n        get: function () {\n            return this.sanitizer.allowedHeaderNames;\n        },\n        /**\n         * Header names whose values will be logged when logging is enabled. Defaults to\n         * Date, traceparent, x-ms-client-request-id, and x-ms-request id.  Any headers\n         * specified in this field will be added to that list.  Any other values will\n         * be written to logs as \"REDACTED\".\n         * @deprecated Pass these into the constructor instead.\n         */\n        set: function (allowedHeaderNames) {\n            this.sanitizer.allowedHeaderNames = allowedHeaderNames;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LogPolicy.prototype, \"allowedQueryParameters\", {\n        /**\n         * Query string names whose values will be logged when logging is enabled. By default no\n         * query string values are logged.\n         * @deprecated Pass these into the constructor instead.\n         */\n        get: function () {\n            return this.sanitizer.allowedQueryParameters;\n        },\n        /**\n         * Query string names whose values will be logged when logging is enabled. By default no\n         * query string values are logged.\n         * @deprecated Pass these into the constructor instead.\n         */\n        set: function (allowedQueryParameters) {\n            this.sanitizer.allowedQueryParameters = allowedQueryParameters;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LogPolicy.prototype.sendRequest = function (request) {\n        var _this = this;\n        if (!this.logger.enabled)\n            return this._nextPolicy.sendRequest(request);\n        this.logRequest(request);\n        return this._nextPolicy.sendRequest(request).then(function (response) { return _this.logResponse(response); });\n    };\n    LogPolicy.prototype.logRequest = function (request) {\n        this.logger(\"Request: \" + this.sanitizer.sanitize(request));\n    };\n    LogPolicy.prototype.logResponse = function (response) {\n        this.logger(\"Response status code: \" + response.status);\n        this.logger(\"Headers: \" + this.sanitizer.sanitize(response.headers));\n        return response;\n    };\n    return LogPolicy;\n}(BaseRequestPolicy));\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Get the path to this parameter's value as a dotted string (a.b.c).\n * @param parameter The parameter to get the path string for.\n * @returns The path to this parameter's value as a dotted string.\n */\nfunction getPathStringFromParameter(parameter) {\n    return getPathStringFromParameterPath(parameter.parameterPath, parameter.mapper);\n}\nfunction getPathStringFromParameterPath(parameterPath, mapper) {\n    var result;\n    if (typeof parameterPath === \"string\") {\n        result = parameterPath;\n    }\n    else if (Array.isArray(parameterPath)) {\n        result = parameterPath.join(\".\");\n    }\n    else {\n        result = mapper.serializedName;\n    }\n    return result;\n}\n\n// Copyright (c) Microsoft Corporation.\nfunction isStreamOperation(operationSpec) {\n    var result = false;\n    for (var statusCode in operationSpec.responses) {\n        var operationResponse = operationSpec.responses[statusCode];\n        if (operationResponse.bodyMapper &&\n            operationResponse.bodyMapper.type.name === MapperType.Stream) {\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\n\n// Copyright (c) Microsoft Corporation.\n// Note: The reason we re-define all of the xml2js default settings (version 2.0) here is because the default settings object exposed\n// by the xm2js library is mutable. See https://github.com/Leonidas-from-XIV/node-xml2js/issues/536\n// By creating a new copy of the settings each time we instantiate the parser,\n// we are safeguarding against the possibility of the default settings being mutated elsewhere unintentionally.\nvar xml2jsDefaultOptionsV2 = {\n    explicitCharkey: false,\n    trim: false,\n    normalize: false,\n    normalizeTags: false,\n    attrkey: \"$\",\n    charkey: \"_\",\n    explicitArray: true,\n    ignoreAttrs: false,\n    mergeAttrs: false,\n    explicitRoot: true,\n    validator: null,\n    xmlns: false,\n    explicitChildren: false,\n    preserveChildrenOrder: false,\n    childkey: \"$$\",\n    charsAsChildren: false,\n    includeWhiteChars: false,\n    async: false,\n    strict: true,\n    attrNameProcessors: null,\n    attrValueProcessors: null,\n    tagNameProcessors: null,\n    valueProcessors: null,\n    rootName: \"root\",\n    xmldec: {\n        version: \"1.0\",\n        encoding: \"UTF-8\",\n        standalone: true\n    },\n    doctype: null,\n    renderOpts: {\n        pretty: true,\n        indent: \"  \",\n        newline: \"\\n\"\n    },\n    headless: false,\n    chunkSize: 10000,\n    emptyTag: \"\",\n    cdata: false\n};\n// The xml2js settings for general XML parsing operations.\nvar xml2jsParserSettings = Object.assign({}, xml2jsDefaultOptionsV2);\nxml2jsParserSettings.explicitArray = false;\n// The xml2js settings for general XML building operations.\nvar xml2jsBuilderSettings = Object.assign({}, xml2jsDefaultOptionsV2);\nxml2jsBuilderSettings.explicitArray = false;\nxml2jsBuilderSettings.renderOpts = {\n    pretty: false\n};\n/**\n * Converts given JSON object to XML string\n * @param obj JSON object to be converted into XML string\n * @param opts Options that govern the parsing of given JSON object\n * `rootName` indicates the name of the root element in the resulting XML\n */\nfunction stringifyXML(obj, opts) {\n    xml2jsBuilderSettings.rootName = (opts || {}).rootName;\n    var builder = new xml2js.Builder(xml2jsBuilderSettings);\n    return builder.buildObject(obj);\n}\n/**\n * Converts given XML string into JSON\n * @param str String containing the XML content to be parsed into JSON\n * @param opts Options that govern the parsing of given xml string\n * `includeRoot` indicates whether the root element is to be included or not in the output\n */\nfunction parseXML(str, opts) {\n    xml2jsParserSettings.explicitRoot = !!(opts && opts.includeRoot);\n    var xmlParser = new xml2js.Parser(xml2jsParserSettings);\n    return new Promise(function (resolve, reject) {\n        if (!str) {\n            reject(new Error(\"Document is empty\"));\n        }\n        else {\n            xmlParser.parseString(str, function (err, res) {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(res);\n                }\n            });\n        }\n    });\n}\n\n// Copyright (c) Microsoft Corporation.\n/**\n * Create a new serialization RequestPolicyCreator that will serialized HTTP request bodies as they\n * pass through the HTTP pipeline.\n */\nfunction deserializationPolicy(deserializationContentTypes) {\n    return {\n        create: function (nextPolicy, options) {\n            return new DeserializationPolicy(nextPolicy, deserializationContentTypes, options);\n        }\n    };\n}\nvar defaultJsonContentTypes = [\"application/json\", \"text/json\"];\nvar defaultXmlContentTypes = [\"application/xml\", \"application/atom+xml\"];\nvar DefaultDeserializationOptions = {\n    expectedContentTypes: {\n        json: defaultJsonContentTypes,\n        xml: defaultXmlContentTypes\n    }\n};\n/**\n * A RequestPolicy that will deserialize HTTP response bodies and headers as they pass through the\n * HTTP pipeline.\n */\nvar DeserializationPolicy = /** @class */ (function (_super) {\n    tslib.__extends(DeserializationPolicy, _super);\n    function DeserializationPolicy(nextPolicy, deserializationContentTypes, options) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.jsonContentTypes =\n            (deserializationContentTypes && deserializationContentTypes.json) || defaultJsonContentTypes;\n        _this.xmlContentTypes =\n            (deserializationContentTypes && deserializationContentTypes.xml) || defaultXmlContentTypes;\n        return _this;\n    }\n    DeserializationPolicy.prototype.sendRequest = function (request) {\n        return tslib.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib.__generator(this, function (_a) {\n                return [2 /*return*/, this._nextPolicy\n                        .sendRequest(request)\n                        .then(function (response) {\n                        return deserializeResponseBody(_this.jsonContentTypes, _this.xmlContentTypes, response);\n                    })];\n            });\n        });\n    };\n    return DeserializationPolicy;\n}(BaseRequestPolicy));\nfunction getOperationResponse(parsedResponse) {\n    var result;\n    var request = parsedResponse.request;\n    var operationSpec = request.operationSpec;\n    if (operationSpec) {\n        var operationResponseGetter = request.operationResponseGetter;\n        if (!operationResponseGetter) {\n            result = operationSpec.responses[parsedResponse.status];\n        }\n        else {\n            result = operationResponseGetter(operationSpec, parsedResponse);\n        }\n    }\n    return result;\n}\nfunction shouldDeserializeResponse(parsedResponse) {\n    var shouldDeserialize = parsedResponse.request.shouldDeserialize;\n    var result;\n    if (shouldDeserialize === undefined) {\n        result = true;\n    }\n    else if (typeof shouldDeserialize === \"boolean\") {\n        result = shouldDeserialize;\n    }\n    else {\n        result = shouldDeserialize(parsedResponse);\n    }\n    return result;\n}\nfunction deserializeResponseBody(jsonContentTypes, xmlContentTypes, response) {\n    return parse(jsonContentTypes, xmlContentTypes, response).then(function (parsedResponse) {\n        if (!shouldDeserializeResponse(parsedResponse)) {\n            return parsedResponse;\n        }\n        var operationSpec = parsedResponse.request.operationSpec;\n        if (!operationSpec || !operationSpec.responses) {\n            return parsedResponse;\n        }\n        var responseSpec = getOperationResponse(parsedResponse);\n        var expectedStatusCodes = Object.keys(operationSpec.responses);\n        var hasNoExpectedStatusCodes = expectedStatusCodes.length === 0 ||\n            (expectedStatusCodes.length === 1 && expectedStatusCodes[0] === \"default\");\n        var isExpectedStatusCode = hasNoExpectedStatusCodes\n            ? 200 <= parsedResponse.status && parsedResponse.status < 300\n            : !!responseSpec;\n        // There is no operation response spec for current status code.\n        // So, treat it as an error case and use the default response spec to deserialize the response.\n        if (!isExpectedStatusCode) {\n            var defaultResponseSpec = operationSpec.responses.default;\n            if (!defaultResponseSpec) {\n                return parsedResponse;\n            }\n            var defaultBodyMapper = defaultResponseSpec.bodyMapper;\n            var defaultHeadersMapper = defaultResponseSpec.headersMapper;\n            var initialErrorMessage = isStreamOperation(operationSpec)\n                ? \"Unexpected status code: \" + parsedResponse.status\n                : parsedResponse.bodyAsText;\n            var error = new RestError(initialErrorMessage, undefined, parsedResponse.status, parsedResponse.request, parsedResponse);\n            try {\n                // If error response has a body, try to extract error code & message from it\n                // Then try to deserialize it using default body mapper\n                if (parsedResponse.parsedBody) {\n                    var parsedBody = parsedResponse.parsedBody;\n                    var internalError = parsedBody.error || parsedBody;\n                    error.code = internalError.code;\n                    if (internalError.message) {\n                        error.message = internalError.message;\n                    }\n                    if (defaultBodyMapper) {\n                        var valueToDeserialize = parsedBody;\n                        if (operationSpec.isXML && defaultBodyMapper.type.name === MapperType.Sequence) {\n                            valueToDeserialize =\n                                typeof parsedBody === \"object\" ? parsedBody[defaultBodyMapper.xmlElementName] : [];\n                        }\n                        error.response.parsedBody = operationSpec.serializer.deserialize(defaultBodyMapper, valueToDeserialize, \"error.response.parsedBody\");\n                    }\n                }\n                // If error response has headers, try to deserialize it using default header mapper\n                if (parsedResponse.headers && defaultHeadersMapper) {\n                    error.response.parsedHeaders = operationSpec.serializer.deserialize(defaultHeadersMapper, parsedResponse.headers.rawHeaders(), \"operationRes.parsedHeaders\");\n                }\n            }\n            catch (defaultError) {\n                error.message = \"Error \\\"\" + defaultError.message + \"\\\" occurred in deserializing the responseBody - \\\"\" + parsedResponse.bodyAsText + \"\\\" for the default response.\";\n            }\n            throw error;\n        }\n        // An operation response spec does exist for current status code, so\n        // use it to deserialize the response.\n        if (responseSpec) {\n            if (responseSpec.bodyMapper) {\n                var valueToDeserialize = parsedResponse.parsedBody;\n                if (operationSpec.isXML && responseSpec.bodyMapper.type.name === MapperType.Sequence) {\n                    valueToDeserialize =\n                        typeof valueToDeserialize === \"object\"\n                            ? valueToDeserialize[responseSpec.bodyMapper.xmlElementName]\n                            : [];\n                }\n                try {\n                    parsedResponse.parsedBody = operationSpec.serializer.deserialize(responseSpec.bodyMapper, valueToDeserialize, \"operationRes.parsedBody\");\n                }\n                catch (error) {\n                    var restError = new RestError(\"Error \" + error + \" occurred in deserializing the responseBody - \" + parsedResponse.bodyAsText, undefined, parsedResponse.status, parsedResponse.request, parsedResponse);\n                    throw restError;\n                }\n            }\n            else if (operationSpec.httpMethod === \"HEAD\") {\n                // head methods never have a body, but we return a boolean to indicate presence/absence of the resource\n                parsedResponse.parsedBody = response.status >= 200 && response.status < 300;\n            }\n            if (responseSpec.headersMapper) {\n                parsedResponse.parsedHeaders = operationSpec.serializer.deserialize(responseSpec.headersMapper, parsedResponse.headers.rawHeaders(), \"operationRes.parsedHeaders\");\n            }\n        }\n        return parsedResponse;\n    });\n}\nfunction parse(jsonContentTypes, xmlContentTypes, operationResponse) {\n    var errorHandler = function (err) {\n        var msg = \"Error \\\"\" + err + \"\\\" occurred while parsing the response body - \" + operationResponse.bodyAsText + \".\";\n        var errCode = err.code || RestError.PARSE_ERROR;\n        var e = new RestError(msg, errCode, operationResponse.status, operationResponse.request, operationResponse);\n        return Promise.reject(e);\n    };\n    if (!operationResponse.request.streamResponseBody && operationResponse.bodyAsText) {\n        var text_1 = operationResponse.bodyAsText;\n        var contentType = operationResponse.headers.get(\"Content-Type\") || \"\";\n        var contentComponents = !contentType\n            ? []\n            : contentType.split(\";\").map(function (component) { return component.toLowerCase(); });\n        if (contentComponents.length === 0 ||\n            contentComponents.some(function (component) { return jsonContentTypes.indexOf(component) !== -1; })) {\n            return new Promise(function (resolve) {\n                operationResponse.parsedBody = JSON.parse(text_1);\n                resolve(operationResponse);\n            }).catch(errorHandler);\n        }\n        else if (contentComponents.some(function (component) { return xmlContentTypes.indexOf(component) !== -1; })) {\n            return parseXML(text_1)\n                .then(function (body) {\n                operationResponse.parsedBody = body;\n                return operationResponse;\n            })\n                .catch(errorHandler);\n        }\n    }\n    return Promise.resolve(operationResponse);\n}\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nvar DEFAULT_CLIENT_RETRY_COUNT = 3;\n// intervals are in ms\nvar DEFAULT_CLIENT_RETRY_INTERVAL = 1000 * 30;\nvar DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 90;\nvar DEFAULT_CLIENT_MIN_RETRY_INTERVAL = 1000 * 3;\nfunction isNumber(n) {\n    return typeof n === \"number\";\n}\n/**\n * @internal\n * Determines if the operation should be retried.\n *\n * @param {number} retryLimit Specifies the max number of retries.\n * @param {(response?: HttpOperationResponse, error?: RetryError) => boolean} predicate Initial chekck on whether to retry based on given responses or errors\n * @param {RetryData} retryData  The retry data.\n * @return {boolean} True if the operation qualifies for a retry; false otherwise.\n */\nfunction shouldRetry(retryLimit, predicate, retryData, response, error) {\n    if (!predicate(response, error)) {\n        return false;\n    }\n    return retryData.retryCount < retryLimit;\n}\n/**\n * @internal\n * Updates the retry data for the next attempt.\n *\n * @param {RetryPolicyOptions} retryOptions specifies retry interval, and its lower bound and upper bound.\n * @param {RetryData} [retryData]  The retry data.\n * @param {RetryError} [err] The operation\"s error, if any.\n */\nfunction updateRetryData(retryOptions, retryData, err) {\n    if (retryData === void 0) { retryData = { retryCount: 0, retryInterval: 0 }; }\n    if (err) {\n        if (retryData.error) {\n            err.innerError = retryData.error;\n        }\n        retryData.error = err;\n    }\n    // Adjust retry count\n    retryData.retryCount++;\n    // Adjust retry interval\n    var incrementDelta = Math.pow(2, retryData.retryCount - 1) - 1;\n    var boundedRandDelta = retryOptions.retryInterval * 0.8 +\n        Math.floor(Math.random() * (retryOptions.retryInterval * 0.4));\n    incrementDelta *= boundedRandDelta;\n    retryData.retryInterval = Math.min(retryOptions.minRetryInterval + incrementDelta, retryOptions.maxRetryInterval);\n    return retryData;\n}\n\n// Copyright (c) Microsoft Corporation.\nfunction exponentialRetryPolicy(retryCount, retryInterval, maxRetryInterval) {\n    return {\n        create: function (nextPolicy, options) {\n            return new ExponentialRetryPolicy(nextPolicy, options, retryCount, retryInterval, maxRetryInterval);\n        }\n    };\n}\n(function (RetryMode) {\n    RetryMode[RetryMode[\"Exponential\"] = 0] = \"Exponential\";\n})(exports.RetryMode || (exports.RetryMode = {}));\nvar DefaultRetryOptions = {\n    maxRetries: DEFAULT_CLIENT_RETRY_COUNT,\n    retryDelayInMs: DEFAULT_CLIENT_RETRY_INTERVAL,\n    maxRetryDelayInMs: DEFAULT_CLIENT_MAX_RETRY_INTERVAL\n};\n/**\n * @class\n * Instantiates a new \"ExponentialRetryPolicyFilter\" instance.\n */\nvar ExponentialRetryPolicy = /** @class */ (function (_super) {\n    tslib.__extends(ExponentialRetryPolicy, _super);\n    /**\n     * @constructor\n     * @param {RequestPolicy} nextPolicy The next RequestPolicy in the pipeline chain.\n     * @param {RequestPolicyOptions} options The options for this RequestPolicy.\n     * @param {number} [retryCount]        The client retry count.\n     * @param {number} [retryInterval]     The client retry interval, in milliseconds.\n     * @param {number} [minRetryInterval]  The minimum retry interval, in milliseconds.\n     * @param {number} [maxRetryInterval]  The maximum retry interval, in milliseconds.\n     */\n    function ExponentialRetryPolicy(nextPolicy, options, retryCount, retryInterval, maxRetryInterval) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.retryCount = isNumber(retryCount) ? retryCount : DEFAULT_CLIENT_RETRY_COUNT;\n        _this.retryInterval = isNumber(retryInterval) ? retryInterval : DEFAULT_CLIENT_RETRY_INTERVAL;\n        _this.maxRetryInterval = isNumber(maxRetryInterval)\n            ? maxRetryInterval\n            : DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n        return _this;\n    }\n    ExponentialRetryPolicy.prototype.sendRequest = function (request) {\n        var _this = this;\n        return this._nextPolicy\n            .sendRequest(request.clone())\n            .then(function (response) { return retry(_this, request, response); })\n            .catch(function (error) { return retry(_this, request, error.response, undefined, error); });\n    };\n    return ExponentialRetryPolicy;\n}(BaseRequestPolicy));\nfunction retry(policy, request, response, retryData, requestError) {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n        function shouldPolicyRetry(response) {\n            var statusCode = response === null || response === void 0 ? void 0 : response.status;\n            if (statusCode === undefined ||\n                (statusCode < 500 && statusCode !== 408) ||\n                statusCode === 501 ||\n                statusCode === 505) {\n                return false;\n            }\n            return true;\n        }\n        var isAborted, res, err_1, err;\n        return tslib.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    retryData = updateRetryData({\n                        retryInterval: policy.retryInterval,\n                        minRetryInterval: 0,\n                        maxRetryInterval: policy.maxRetryInterval\n                    }, retryData, requestError);\n                    isAborted = request.abortSignal && request.abortSignal.aborted;\n                    if (!(!isAborted && shouldRetry(policy.retryCount, shouldPolicyRetry, retryData, response))) return [3 /*break*/, 6];\n                    logger.info(\"Retrying request in \" + retryData.retryInterval);\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 4, , 5]);\n                    return [4 /*yield*/, delay(retryData.retryInterval)];\n                case 2:\n                    _a.sent();\n                    return [4 /*yield*/, policy._nextPolicy.sendRequest(request.clone())];\n                case 3:\n                    res = _a.sent();\n                    return [2 /*return*/, retry(policy, request, res, retryData)];\n                case 4:\n                    err_1 = _a.sent();\n                    return [2 /*return*/, retry(policy, request, response, retryData, err_1)];\n                case 5: return [3 /*break*/, 7];\n                case 6:\n                    if (isAborted || requestError || !response) {\n                        err = retryData.error ||\n                            new RestError(\"Failed to send the request.\", RestError.REQUEST_SEND_ERROR, response && response.status, response && response.request, response);\n                        throw err;\n                    }\n                    else {\n                        return [2 /*return*/, response];\n                    }\n                case 7: return [2 /*return*/];\n            }\n        });\n    });\n}\n\n// Copyright (c) Microsoft Corporation.\nfunction generateClientRequestIdPolicy(requestIdHeaderName) {\n    if (requestIdHeaderName === void 0) { requestIdHeaderName = \"x-ms-client-request-id\"; }\n    return {\n        create: function (nextPolicy, options) {\n            return new GenerateClientRequestIdPolicy(nextPolicy, options, requestIdHeaderName);\n        }\n    };\n}\nvar GenerateClientRequestIdPolicy = /** @class */ (function (_super) {\n    tslib.__extends(GenerateClientRequestIdPolicy, _super);\n    function GenerateClientRequestIdPolicy(nextPolicy, options, _requestIdHeaderName) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this._requestIdHeaderName = _requestIdHeaderName;\n        return _this;\n    }\n    GenerateClientRequestIdPolicy.prototype.sendRequest = function (request) {\n        if (!request.headers.contains(this._requestIdHeaderName)) {\n            request.headers.set(this._requestIdHeaderName, request.requestId);\n        }\n        return this._nextPolicy.sendRequest(request);\n    };\n    return GenerateClientRequestIdPolicy;\n}(BaseRequestPolicy));\n\n// Copyright (c) Microsoft Corporation.\nfunction getDefaultUserAgentKey() {\n    return Constants.HeaderConstants.USER_AGENT;\n}\nfunction getPlatformSpecificData() {\n    var runtimeInfo = {\n        key: \"Node\",\n        value: process.version\n    };\n    var osInfo = {\n        key: \"OS\",\n        value: \"(\" + os.arch() + \"-\" + os.type() + \"-\" + os.release() + \")\"\n    };\n    return [runtimeInfo, osInfo];\n}\n\n// Copyright (c) Microsoft Corporation.\nfunction getRuntimeInfo() {\n    var msRestRuntime = {\n        key: \"core-http\",\n        value: Constants.coreHttpVersion\n    };\n    return [msRestRuntime];\n}\nfunction getUserAgentString(telemetryInfo, keySeparator, valueSeparator) {\n    if (keySeparator === void 0) { keySeparator = \" \"; }\n    if (valueSeparator === void 0) { valueSeparator = \"/\"; }\n    return telemetryInfo\n        .map(function (info) {\n        var value = info.value ? \"\" + valueSeparator + info.value : \"\";\n        return \"\" + info.key + value;\n    })\n        .join(keySeparator);\n}\nvar getDefaultUserAgentHeaderName = getDefaultUserAgentKey;\nfunction getDefaultUserAgentValue() {\n    var runtimeInfo = getRuntimeInfo();\n    var platformSpecificData = getPlatformSpecificData();\n    var userAgent = getUserAgentString(runtimeInfo.concat(platformSpecificData));\n    return userAgent;\n}\nfunction userAgentPolicy(userAgentData) {\n    var key = !userAgentData || userAgentData.key === undefined || userAgentData.key === null\n        ? getDefaultUserAgentKey()\n        : userAgentData.key;\n    var value = !userAgentData || userAgentData.value === undefined || userAgentData.value === null\n        ? getDefaultUserAgentValue()\n        : userAgentData.value;\n    return {\n        create: function (nextPolicy, options) {\n            return new UserAgentPolicy(nextPolicy, options, key, value);\n        }\n    };\n}\nvar UserAgentPolicy = /** @class */ (function (_super) {\n    tslib.__extends(UserAgentPolicy, _super);\n    function UserAgentPolicy(_nextPolicy, _options, headerKey, headerValue) {\n        var _this = _super.call(this, _nextPolicy, _options) || this;\n        _this._nextPolicy = _nextPolicy;\n        _this._options = _options;\n        _this.headerKey = headerKey;\n        _this.headerValue = headerValue;\n        return _this;\n    }\n    UserAgentPolicy.prototype.sendRequest = function (request) {\n        this.addUserAgentHeader(request);\n        return this._nextPolicy.sendRequest(request);\n    };\n    UserAgentPolicy.prototype.addUserAgentHeader = function (request) {\n        if (!request.headers) {\n            request.headers = new HttpHeaders();\n        }\n        if (!request.headers.get(this.headerKey) && this.headerValue) {\n            request.headers.set(this.headerKey, this.headerValue);\n        }\n    };\n    return UserAgentPolicy;\n}(BaseRequestPolicy));\n\n// Copyright (c) Microsoft Corporation.\nvar DefaultRedirectOptions = {\n    handleRedirects: true,\n    maxRetries: 20\n};\nfunction redirectPolicy(maximumRetries) {\n    if (maximumRetries === void 0) { maximumRetries = 20; }\n    return {\n        create: function (nextPolicy, options) {\n            return new RedirectPolicy(nextPolicy, options, maximumRetries);\n        }\n    };\n}\nvar RedirectPolicy = /** @class */ (function (_super) {\n    tslib.__extends(RedirectPolicy, _super);\n    function RedirectPolicy(nextPolicy, options, maxRetries) {\n        if (maxRetries === void 0) { maxRetries = 20; }\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.maxRetries = maxRetries;\n        return _this;\n    }\n    RedirectPolicy.prototype.sendRequest = function (request) {\n        var _this = this;\n        return this._nextPolicy\n            .sendRequest(request)\n            .then(function (response) { return handleRedirect(_this, response, 0); });\n    };\n    return RedirectPolicy;\n}(BaseRequestPolicy));\nfunction handleRedirect(policy, response, currentRetries) {\n    var request = response.request, status = response.status;\n    var locationHeader = response.headers.get(\"location\");\n    if (locationHeader &&\n        (status === 300 || status === 307 || (status === 303 && request.method === \"POST\")) &&\n        (!policy.maxRetries || currentRetries < policy.maxRetries)) {\n        var builder = URLBuilder.parse(request.url);\n        builder.setPath(locationHeader);\n        request.url = builder.toString();\n        // POST request with Status code 303 should be converted into a\n        // redirected GET request if the redirect url is present in the location header\n        if (status === 303) {\n            request.method = \"GET\";\n        }\n        return policy._nextPolicy\n            .sendRequest(request)\n            .then(function (res) { return handleRedirect(policy, res, currentRetries + 1); });\n    }\n    return Promise.resolve(response);\n}\n\n// Copyright (c) Microsoft Corporation.\nfunction rpRegistrationPolicy(retryTimeout) {\n    if (retryTimeout === void 0) { retryTimeout = 30; }\n    return {\n        create: function (nextPolicy, options) {\n            return new RPRegistrationPolicy(nextPolicy, options, retryTimeout);\n        }\n    };\n}\nvar RPRegistrationPolicy = /** @class */ (function (_super) {\n    tslib.__extends(RPRegistrationPolicy, _super);\n    function RPRegistrationPolicy(nextPolicy, options, _retryTimeout) {\n        if (_retryTimeout === void 0) { _retryTimeout = 30; }\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this._retryTimeout = _retryTimeout;\n        return _this;\n    }\n    RPRegistrationPolicy.prototype.sendRequest = function (request) {\n        var _this = this;\n        return this._nextPolicy\n            .sendRequest(request.clone())\n            .then(function (response) { return registerIfNeeded(_this, request, response); });\n    };\n    return RPRegistrationPolicy;\n}(BaseRequestPolicy));\nfunction registerIfNeeded(policy, request, response) {\n    if (response.status === 409) {\n        var rpName = checkRPNotRegisteredError(response.bodyAsText);\n        if (rpName) {\n            var urlPrefix = extractSubscriptionUrl(request.url);\n            return (registerRP(policy, urlPrefix, rpName, request)\n                // Autoregistration of ${provider} failed for some reason. We will not return this error\n                // instead will return the initial response with 409 status code back to the user.\n                // do nothing here as we are returning the original response at the end of this method.\n                .catch(function () { return false; })\n                .then(function (registrationStatus) {\n                if (registrationStatus) {\n                    // Retry the original request. We have to change the x-ms-client-request-id\n                    // otherwise Azure endpoint will return the initial 409 (cached) response.\n                    request.headers.set(\"x-ms-client-request-id\", generateUuid());\n                    return policy._nextPolicy.sendRequest(request.clone());\n                }\n                return response;\n            }));\n        }\n    }\n    return Promise.resolve(response);\n}\n/**\n * Reuses the headers of the original request and url (if specified).\n * @param {WebResourceLike} originalRequest The original request\n * @param {boolean} reuseUrlToo Should the url from the original request be reused as well. Default false.\n * @returns {object} A new request object with desired headers.\n */\nfunction getRequestEssentials(originalRequest, reuseUrlToo) {\n    if (reuseUrlToo === void 0) { reuseUrlToo = false; }\n    var reqOptions = originalRequest.clone();\n    if (reuseUrlToo) {\n        reqOptions.url = originalRequest.url;\n    }\n    // We have to change the x-ms-client-request-id otherwise Azure endpoint\n    // will return the initial 409 (cached) response.\n    reqOptions.headers.set(\"x-ms-client-request-id\", generateUuid());\n    // Set content-type to application/json\n    reqOptions.headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n    return reqOptions;\n}\n/**\n * Validates the error code and message associated with 409 response status code. If it matches to that of\n * RP not registered then it returns the name of the RP else returns undefined.\n * @param {string} body The response body received after making the original request.\n * @returns {string} The name of the RP if condition is satisfied else undefined.\n */\nfunction checkRPNotRegisteredError(body) {\n    var result, responseBody;\n    if (body) {\n        try {\n            responseBody = JSON.parse(body);\n        }\n        catch (err) {\n            // do nothing;\n        }\n        if (responseBody &&\n            responseBody.error &&\n            responseBody.error.message &&\n            responseBody.error.code &&\n            responseBody.error.code === \"MissingSubscriptionRegistration\") {\n            var matchRes = responseBody.error.message.match(/.*'(.*)'/i);\n            if (matchRes) {\n                result = matchRes.pop();\n            }\n        }\n    }\n    return result;\n}\n/**\n * Extracts the first part of the URL, just after subscription:\n * https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/\n * @param {string} url The original request url\n * @returns {string} The url prefix as explained above.\n */\nfunction extractSubscriptionUrl(url) {\n    var result;\n    var matchRes = url.match(/.*\\/subscriptions\\/[a-f0-9-]+\\//gi);\n    if (matchRes && matchRes[0]) {\n        result = matchRes[0];\n    }\n    else {\n        throw new Error(\"Unable to extract subscriptionId from the given url - \" + url + \".\");\n    }\n    return result;\n}\n/**\n * Registers the given provider.\n * @param {RPRegistrationPolicy} policy The RPRegistrationPolicy this function is being called against.\n * @param {string} urlPrefix https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/\n * @param {string} provider The provider name to be registered.\n * @param {WebResourceLike} originalRequest The original request sent by the user that returned a 409 response\n * with a message that the provider is not registered.\n * @param {registrationCallback} callback The callback that handles the RP registration\n */\nfunction registerRP(policy, urlPrefix, provider, originalRequest) {\n    var postUrl = urlPrefix + \"providers/\" + provider + \"/register?api-version=2016-02-01\";\n    var getUrl = urlPrefix + \"providers/\" + provider + \"?api-version=2016-02-01\";\n    var reqOptions = getRequestEssentials(originalRequest);\n    reqOptions.method = \"POST\";\n    reqOptions.url = postUrl;\n    return policy._nextPolicy.sendRequest(reqOptions).then(function (response) {\n        if (response.status !== 200) {\n            throw new Error(\"Autoregistration of \" + provider + \" failed. Please try registering manually.\");\n        }\n        return getRegistrationStatus(policy, getUrl, originalRequest);\n    });\n}\n/**\n * Polls the registration status of the provider that was registered. Polling happens at an interval of 30 seconds.\n * Polling will happen till the registrationState property of the response body is \"Registered\".\n * @param {RPRegistrationPolicy} policy The RPRegistrationPolicy this function is being called against.\n * @param {string} url The request url for polling\n * @param {WebResourceLike} originalRequest The original request sent by the user that returned a 409 response\n * with a message that the provider is not registered.\n * @returns {Promise<boolean>} True if RP Registration is successful.\n */\nfunction getRegistrationStatus(policy, url, originalRequest) {\n    var reqOptions = getRequestEssentials(originalRequest);\n    reqOptions.url = url;\n    reqOptions.method = \"GET\";\n    return policy._nextPolicy.sendRequest(reqOptions).then(function (res) {\n        var obj = res.parsedBody;\n        if (res.parsedBody && obj.registrationState && obj.registrationState === \"Registered\") {\n            return true;\n        }\n        else {\n            return delay(policy._retryTimeout * 1000)\n                .then(function () { return getRegistrationStatus(policy, url, originalRequest); });\n        }\n    });\n}\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Defines the default token refresh buffer duration.\n */\nvar TokenRefreshBufferMs = 2 * 60 * 1000; // 2 Minutes\n/**\n * Provides an {@link AccessTokenCache} implementation which clears\n * the cached {@link AccessToken}'s after the expiresOnTimestamp has\n * passed.\n */\nvar ExpiringAccessTokenCache = /** @class */ (function () {\n    /**\n     * Constructs an instance of {@link ExpiringAccessTokenCache} with\n     * an optional expiration buffer time.\n     */\n    function ExpiringAccessTokenCache(tokenRefreshBufferMs) {\n        if (tokenRefreshBufferMs === void 0) { tokenRefreshBufferMs = TokenRefreshBufferMs; }\n        this.cachedToken = undefined;\n        this.tokenRefreshBufferMs = tokenRefreshBufferMs;\n    }\n    ExpiringAccessTokenCache.prototype.setCachedToken = function (accessToken) {\n        this.cachedToken = accessToken;\n    };\n    ExpiringAccessTokenCache.prototype.getCachedToken = function () {\n        if (this.cachedToken &&\n            Date.now() + this.tokenRefreshBufferMs >= this.cachedToken.expiresOnTimestamp) {\n            this.cachedToken = undefined;\n        }\n        return this.cachedToken;\n    };\n    return ExpiringAccessTokenCache;\n}());\n\n// Copyright (c) Microsoft Corporation.\n/**\n * Helps the core-http token authentication policies with requesting a new token if we're not currently waiting for a new token.\n */\nvar AccessTokenRefresher = /** @class */ (function () {\n    function AccessTokenRefresher(credential, scopes, requiredMillisecondsBeforeNewRefresh) {\n        if (requiredMillisecondsBeforeNewRefresh === void 0) { requiredMillisecondsBeforeNewRefresh = 30000; }\n        this.credential = credential;\n        this.scopes = scopes;\n        this.requiredMillisecondsBeforeNewRefresh = requiredMillisecondsBeforeNewRefresh;\n        this.lastCalled = 0;\n    }\n    /**\n     * Returns true if the required milliseconds(defaulted to 30000) have been passed signifying\n     * that we are ready for a new refresh.\n     *\n     * @returns {boolean}\n     */\n    AccessTokenRefresher.prototype.isReady = function () {\n        // We're only ready for a new refresh if the required milliseconds have passed.\n        return (!this.lastCalled || Date.now() - this.lastCalled > this.requiredMillisecondsBeforeNewRefresh);\n    };\n    /**\n     * Stores the time in which it is called,\n     * then requests a new token,\n     * then sets this.promise to undefined,\n     * then returns the token.\n     * @param options getToken options\n     */\n    AccessTokenRefresher.prototype.getToken = function (options) {\n        return tslib.__awaiter(this, void 0, void 0, function () {\n            var token;\n            return tslib.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.lastCalled = Date.now();\n                        return [4 /*yield*/, this.credential.getToken(this.scopes, options)];\n                    case 1:\n                        token = _a.sent();\n                        this.promise = undefined;\n                        return [2 /*return*/, token || undefined];\n                }\n            });\n        });\n    };\n    /**\n     * Requests a new token if we're not currently waiting for a new token.\n     * Returns null if the required time between each call hasn't been reached.\n     * @param options getToken options\n     */\n    AccessTokenRefresher.prototype.refresh = function (options) {\n        if (!this.promise) {\n            this.promise = this.getToken(options);\n        }\n        return this.promise;\n    };\n    return AccessTokenRefresher;\n}());\n\n// Copyright (c) Microsoft Corporation.\n/**\n * Creates a new BearerTokenAuthenticationPolicy factory.\n *\n * @param credential The TokenCredential implementation that can supply the bearer token.\n * @param scopes The scopes for which the bearer token applies.\n */\nfunction bearerTokenAuthenticationPolicy(credential, scopes) {\n    var tokenCache = new ExpiringAccessTokenCache();\n    var tokenRefresher = new AccessTokenRefresher(credential, scopes, timeBetweenRefreshAttemptsInMs);\n    return {\n        create: function (nextPolicy, options) {\n            return new BearerTokenAuthenticationPolicy(nextPolicy, options, tokenCache, tokenRefresher);\n        }\n    };\n}\n/**\n * The automated token refresh will only start to happen at the\n * expiration date minus the value of timeBetweenRefreshAttemptsInMs,\n * which is by default 30 seconds.\n */\nvar timeBetweenRefreshAttemptsInMs = 30000;\n/**\n *\n * Provides a RequestPolicy that can request a token from a TokenCredential\n * implementation and then apply it to the Authorization header of a request\n * as a Bearer token.\n *\n */\nvar BearerTokenAuthenticationPolicy = /** @class */ (function (_super) {\n    tslib.__extends(BearerTokenAuthenticationPolicy, _super);\n    /**\n     * Creates a new BearerTokenAuthenticationPolicy object.\n     *\n     * @param nextPolicy The next RequestPolicy in the request pipeline.\n     * @param options Options for this RequestPolicy.\n     * @param credential The TokenCredential implementation that can supply the bearer token.\n     * @param scopes The scopes for which the bearer token applies.\n     * @param tokenCache The cache for the most recent AccessToken returned from the TokenCredential.\n     */\n    function BearerTokenAuthenticationPolicy(nextPolicy, options, tokenCache, tokenRefresher) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.tokenCache = tokenCache;\n        _this.tokenRefresher = tokenRefresher;\n        return _this;\n    }\n    /**\n     * Applies the Bearer token to the request through the Authorization header.\n     * @param webResource\n     */\n    BearerTokenAuthenticationPolicy.prototype.sendRequest = function (webResource) {\n        return tslib.__awaiter(this, void 0, void 0, function () {\n            var token;\n            return tslib.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!webResource.headers)\n                            webResource.headers = new HttpHeaders();\n                        return [4 /*yield*/, this.getToken({\n                                abortSignal: webResource.abortSignal,\n                                tracingOptions: {\n                                    spanOptions: webResource.spanOptions\n                                }\n                            })];\n                    case 1:\n                        token = _a.sent();\n                        webResource.headers.set(Constants.HeaderConstants.AUTHORIZATION, \"Bearer \" + token);\n                        return [2 /*return*/, this._nextPolicy.sendRequest(webResource)];\n                }\n            });\n        });\n    };\n    /**\n     * Attempts a token update if any other time related conditionals have been reached based on the tokenRefresher class.\n     */\n    BearerTokenAuthenticationPolicy.prototype.updateTokenIfNeeded = function (options) {\n        return tslib.__awaiter(this, void 0, void 0, function () {\n            var accessToken;\n            return tslib.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.tokenRefresher.isReady()) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.tokenRefresher.refresh(options)];\n                    case 1:\n                        accessToken = _a.sent();\n                        this.tokenCache.setCachedToken(accessToken);\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    BearerTokenAuthenticationPolicy.prototype.getToken = function (options) {\n        return tslib.__awaiter(this, void 0, void 0, function () {\n            var accessToken;\n            return tslib.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        accessToken = this.tokenCache.getCachedToken();\n                        if (!(accessToken === undefined)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.tokenRefresher.refresh(options)];\n                    case 1:\n                        // Waiting for the next refresh only if the cache is unable to retrieve the access token,\n                        // which means that it has expired, or it has never been set.\n                        accessToken = _a.sent();\n                        this.tokenCache.setCachedToken(accessToken);\n                        return [3 /*break*/, 3];\n                    case 2:\n                        // If we still have a cached access token,\n                        // And any other time related conditionals have been reached based on the tokenRefresher class,\n                        // then attempt to refresh without waiting.\n                        this.updateTokenIfNeeded(options);\n                        _a.label = 3;\n                    case 3: return [2 /*return*/, accessToken ? accessToken.token : undefined];\n                }\n            });\n        });\n    };\n    return BearerTokenAuthenticationPolicy;\n}(BaseRequestPolicy));\n\n// Copyright (c) Microsoft Corporation.\nfunction systemErrorRetryPolicy(retryCount, retryInterval, minRetryInterval, maxRetryInterval) {\n    return {\n        create: function (nextPolicy, options) {\n            return new SystemErrorRetryPolicy(nextPolicy, options, retryCount, retryInterval, minRetryInterval, maxRetryInterval);\n        }\n    };\n}\n/**\n * @class\n * Instantiates a new \"ExponentialRetryPolicyFilter\" instance.\n *\n * @constructor\n * @param {number} retryCount        The client retry count.\n * @param {number} retryInterval     The client retry interval, in milliseconds.\n * @param {number} minRetryInterval  The minimum retry interval, in milliseconds.\n * @param {number} maxRetryInterval  The maximum retry interval, in milliseconds.\n */\nvar SystemErrorRetryPolicy = /** @class */ (function (_super) {\n    tslib.__extends(SystemErrorRetryPolicy, _super);\n    function SystemErrorRetryPolicy(nextPolicy, options, retryCount, retryInterval, minRetryInterval, maxRetryInterval) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.retryCount = isNumber(retryCount) ? retryCount : DEFAULT_CLIENT_RETRY_COUNT;\n        _this.retryInterval = isNumber(retryInterval) ? retryInterval : DEFAULT_CLIENT_RETRY_INTERVAL;\n        _this.minRetryInterval = isNumber(minRetryInterval)\n            ? minRetryInterval\n            : DEFAULT_CLIENT_MIN_RETRY_INTERVAL;\n        _this.maxRetryInterval = isNumber(maxRetryInterval)\n            ? maxRetryInterval\n            : DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n        return _this;\n    }\n    SystemErrorRetryPolicy.prototype.sendRequest = function (request) {\n        var _this = this;\n        return this._nextPolicy\n            .sendRequest(request.clone())\n            .catch(function (error) { return retry$1(_this, request, error.response, error); });\n    };\n    return SystemErrorRetryPolicy;\n}(BaseRequestPolicy));\nfunction retry$1(policy, request, operationResponse, err, retryData) {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n        function shouldPolicyRetry(_response, error) {\n            if (error &&\n                error.code &&\n                (error.code === \"ETIMEDOUT\" ||\n                    error.code === \"ESOCKETTIMEDOUT\" ||\n                    error.code === \"ECONNREFUSED\" ||\n                    error.code === \"ECONNRESET\" ||\n                    error.code === \"ENOENT\")) {\n                return true;\n            }\n            return false;\n        }\n        var err_1;\n        return tslib.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    retryData = updateRetryData(policy, retryData, err);\n                    if (!shouldRetry(policy.retryCount, shouldPolicyRetry, retryData, operationResponse, err)) return [3 /*break*/, 5];\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, delay(retryData.retryInterval)];\n                case 2:\n                    _a.sent();\n                    return [2 /*return*/, policy._nextPolicy.sendRequest(request.clone())];\n                case 3:\n                    err_1 = _a.sent();\n                    return [2 /*return*/, retry$1(policy, request, operationResponse, err_1, retryData)];\n                case 4: return [3 /*break*/, 6];\n                case 5:\n                    if (err) {\n                        // If the operation failed in the end, return all errors instead of just the last one\n                        return [2 /*return*/, Promise.reject(retryData.error)];\n                    }\n                    return [2 /*return*/, operationResponse];\n                case 6: return [2 /*return*/];\n            }\n        });\n    });\n}\n\n// Copyright (c) Microsoft Corporation.\n(function (QueryCollectionFormat) {\n    QueryCollectionFormat[\"Csv\"] = \",\";\n    QueryCollectionFormat[\"Ssv\"] = \" \";\n    QueryCollectionFormat[\"Tsv\"] = \"\\t\";\n    QueryCollectionFormat[\"Pipes\"] = \"|\";\n    QueryCollectionFormat[\"Multi\"] = \"Multi\";\n})(exports.QueryCollectionFormat || (exports.QueryCollectionFormat = {}));\n\n// Copyright (c) Microsoft Corporation.\nfunction loadEnvironmentProxyValue() {\n    if (!process) {\n        return undefined;\n    }\n    if (process.env[Constants.HTTPS_PROXY]) {\n        return process.env[Constants.HTTPS_PROXY];\n    }\n    else if (process.env[Constants.HTTPS_PROXY.toLowerCase()]) {\n        return process.env[Constants.HTTPS_PROXY.toLowerCase()];\n    }\n    else if (process.env[Constants.HTTP_PROXY]) {\n        return process.env[Constants.HTTP_PROXY];\n    }\n    else if (process.env[Constants.HTTP_PROXY.toLowerCase()]) {\n        return process.env[Constants.HTTP_PROXY.toLowerCase()];\n    }\n    return undefined;\n}\nfunction getDefaultProxySettings(proxyUrl) {\n    if (!proxyUrl) {\n        proxyUrl = loadEnvironmentProxyValue();\n        if (!proxyUrl) {\n            return undefined;\n        }\n    }\n    var _a = extractAuthFromUrl(proxyUrl), username = _a.username, password = _a.password, urlWithoutAuth = _a.urlWithoutAuth;\n    var parsedUrl = URLBuilder.parse(urlWithoutAuth);\n    var schema = parsedUrl.getScheme() ? parsedUrl.getScheme() + \"://\" : \"\";\n    return {\n        host: schema + parsedUrl.getHost(),\n        port: Number.parseInt(parsedUrl.getPort() || \"80\"),\n        username: username,\n        password: password\n    };\n}\nfunction proxyPolicy(proxySettings) {\n    if (!proxySettings) {\n        proxySettings = getDefaultProxySettings();\n    }\n    return {\n        create: function (nextPolicy, options) {\n            return new ProxyPolicy(nextPolicy, options, proxySettings);\n        }\n    };\n}\nfunction extractAuthFromUrl(url) {\n    var atIndex = url.indexOf(\"@\");\n    if (atIndex === -1) {\n        return { urlWithoutAuth: url };\n    }\n    var schemeIndex = url.indexOf(\"://\");\n    var authStart = schemeIndex !== -1 ? schemeIndex + 3 : 0;\n    var auth = url.substring(authStart, atIndex);\n    var colonIndex = auth.indexOf(\":\");\n    var hasPassword = colonIndex !== -1;\n    var username = hasPassword ? auth.substring(0, colonIndex) : auth;\n    var password = hasPassword ? auth.substring(colonIndex + 1) : undefined;\n    var urlWithoutAuth = url.substring(0, authStart) + url.substring(atIndex + 1);\n    return {\n        username: username,\n        password: password,\n        urlWithoutAuth: urlWithoutAuth\n    };\n}\nvar ProxyPolicy = /** @class */ (function (_super) {\n    tslib.__extends(ProxyPolicy, _super);\n    function ProxyPolicy(nextPolicy, options, proxySettings) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.proxySettings = proxySettings;\n        return _this;\n    }\n    ProxyPolicy.prototype.sendRequest = function (request) {\n        if (!request.proxySettings) {\n            request.proxySettings = this.proxySettings;\n        }\n        return this._nextPolicy.sendRequest(request);\n    };\n    return ProxyPolicy;\n}(BaseRequestPolicy));\n\n// Copyright (c) Microsoft Corporation.\nvar StatusCodes = Constants.HttpConstants.StatusCodes;\nfunction throttlingRetryPolicy() {\n    return {\n        create: function (nextPolicy, options) {\n            return new ThrottlingRetryPolicy(nextPolicy, options);\n        }\n    };\n}\n/**\n * To learn more, please refer to\n * https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-request-limits,\n * https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits and\n * https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n */\nvar ThrottlingRetryPolicy = /** @class */ (function (_super) {\n    tslib.__extends(ThrottlingRetryPolicy, _super);\n    function ThrottlingRetryPolicy(nextPolicy, options, _handleResponse) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this._handleResponse = _handleResponse || _this._defaultResponseHandler;\n        return _this;\n    }\n    ThrottlingRetryPolicy.prototype.sendRequest = function (httpRequest) {\n        return tslib.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib.__generator(this, function (_a) {\n                return [2 /*return*/, this._nextPolicy.sendRequest(httpRequest.clone()).then(function (response) {\n                        if (response.status !== StatusCodes.TooManyRequests) {\n                            return response;\n                        }\n                        else {\n                            return _this._handleResponse(httpRequest, response);\n                        }\n                    })];\n            });\n        });\n    };\n    ThrottlingRetryPolicy.prototype._defaultResponseHandler = function (httpRequest, httpResponse) {\n        return tslib.__awaiter(this, void 0, void 0, function () {\n            var retryAfterHeader, delayInMs;\n            var _this = this;\n            return tslib.__generator(this, function (_a) {\n                retryAfterHeader = httpResponse.headers.get(Constants.HeaderConstants.RETRY_AFTER);\n                if (retryAfterHeader) {\n                    delayInMs = ThrottlingRetryPolicy.parseRetryAfterHeader(retryAfterHeader);\n                    if (delayInMs) {\n                        return [2 /*return*/, delay(delayInMs).then(function (_) { return _this._nextPolicy.sendRequest(httpRequest); })];\n                    }\n                }\n                return [2 /*return*/, httpResponse];\n            });\n        });\n    };\n    ThrottlingRetryPolicy.parseRetryAfterHeader = function (headerValue) {\n        var retryAfterInSeconds = Number(headerValue);\n        if (Number.isNaN(retryAfterInSeconds)) {\n            return ThrottlingRetryPolicy.parseDateRetryAfterHeader(headerValue);\n        }\n        else {\n            return retryAfterInSeconds * 1000;\n        }\n    };\n    ThrottlingRetryPolicy.parseDateRetryAfterHeader = function (headerValue) {\n        try {\n            var now = Date.now();\n            var date = Date.parse(headerValue);\n            var diff = date - now;\n            return Number.isNaN(diff) ? undefined : diff;\n        }\n        catch (error) {\n            return undefined;\n        }\n    };\n    return ThrottlingRetryPolicy;\n}(BaseRequestPolicy));\n\n// Copyright (c) Microsoft Corporation.\nfunction signingPolicy(authenticationProvider) {\n    return {\n        create: function (nextPolicy, options) {\n            return new SigningPolicy(nextPolicy, options, authenticationProvider);\n        }\n    };\n}\nvar SigningPolicy = /** @class */ (function (_super) {\n    tslib.__extends(SigningPolicy, _super);\n    function SigningPolicy(nextPolicy, options, authenticationProvider) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.authenticationProvider = authenticationProvider;\n        return _this;\n    }\n    SigningPolicy.prototype.signRequest = function (request) {\n        return this.authenticationProvider.signRequest(request);\n    };\n    SigningPolicy.prototype.sendRequest = function (request) {\n        var _this = this;\n        return this.signRequest(request).then(function (nextRequest) {\n            return _this._nextPolicy.sendRequest(nextRequest);\n        });\n    };\n    return SigningPolicy;\n}(BaseRequestPolicy));\n\n// Copyright (c) Microsoft Corporation.\nvar DefaultKeepAliveOptions = {\n    enable: true\n};\nfunction keepAlivePolicy(keepAliveOptions) {\n    return {\n        create: function (nextPolicy, options) {\n            return new KeepAlivePolicy(nextPolicy, options, keepAliveOptions || DefaultKeepAliveOptions);\n        }\n    };\n}\n/**\n * KeepAlivePolicy is a policy used to control keep alive settings for every request.\n */\nvar KeepAlivePolicy = /** @class */ (function (_super) {\n    tslib.__extends(KeepAlivePolicy, _super);\n    /**\n     * Creates an instance of KeepAlivePolicy.\n     *\n     * @param {RequestPolicy} nextPolicy\n     * @param {RequestPolicyOptions} options\n     * @param {KeepAliveOptions} [keepAliveOptions]\n     */\n    function KeepAlivePolicy(nextPolicy, options, keepAliveOptions) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.keepAliveOptions = keepAliveOptions;\n        return _this;\n    }\n    /**\n     * Sends out request.\n     *\n     * @param {WebResourceLike} request\n     * @returns {Promise<HttpOperationResponse>}\n     * @memberof KeepAlivePolicy\n     */\n    KeepAlivePolicy.prototype.sendRequest = function (request) {\n        return tslib.__awaiter(this, void 0, void 0, function () {\n            return tslib.__generator(this, function (_a) {\n                request.keepAlive = this.keepAliveOptions.enable;\n                return [2 /*return*/, this._nextPolicy.sendRequest(request)];\n            });\n        });\n    };\n    return KeepAlivePolicy;\n}(BaseRequestPolicy));\n\n// Copyright (c) Microsoft Corporation.\nfunction tracingPolicy(tracingOptions) {\n    if (tracingOptions === void 0) { tracingOptions = {}; }\n    return {\n        create: function (nextPolicy, options) {\n            return new TracingPolicy(nextPolicy, options, tracingOptions);\n        }\n    };\n}\nvar TracingPolicy = /** @class */ (function (_super) {\n    tslib.__extends(TracingPolicy, _super);\n    function TracingPolicy(nextPolicy, options, tracingOptions) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.userAgent = tracingOptions.userAgent;\n        return _this;\n    }\n    TracingPolicy.prototype.sendRequest = function (request) {\n        return tslib.__awaiter(this, void 0, void 0, function () {\n            var tracer, spanOptions, path, span, spanContext, traceParentHeader, traceState, response, serviceRequestId, err_1;\n            return tslib.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!request.spanOptions || !request.spanOptions.parent) {\n                            return [2 /*return*/, this._nextPolicy.sendRequest(request)];\n                        }\n                        tracer = coreTracing.getTracer();\n                        spanOptions = tslib.__assign(tslib.__assign({}, request.spanOptions), { kind: api.SpanKind.CLIENT });\n                        path = URLBuilder.parse(request.url).getPath() || \"/\";\n                        span = tracer.startSpan(path, spanOptions);\n                        span.setAttributes({\n                            \"http.method\": request.method,\n                            \"http.url\": request.url,\n                            requestId: request.requestId\n                        });\n                        if (this.userAgent) {\n                            span.setAttribute(\"http.user_agent\", this.userAgent);\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        spanContext = span.context();\n                        traceParentHeader = coreTracing.getTraceParentHeader(spanContext);\n                        if (traceParentHeader) {\n                            request.headers.set(\"traceparent\", traceParentHeader);\n                            traceState = spanContext.traceState && spanContext.traceState.serialize();\n                            // if tracestate is set, traceparent MUST be set, so only set tracestate after traceparent\n                            if (traceState) {\n                                request.headers.set(\"tracestate\", traceState);\n                            }\n                        }\n                        return [4 /*yield*/, this._nextPolicy.sendRequest(request)];\n                    case 2:\n                        response = _a.sent();\n                        span.setAttribute(\"http.status_code\", response.status);\n                        serviceRequestId = response.headers.get(\"x-ms-request-id\");\n                        if (serviceRequestId) {\n                            span.setAttribute(\"serviceRequestId\", serviceRequestId);\n                        }\n                        span.end();\n                        return [2 /*return*/, response];\n                    case 3:\n                        err_1 = _a.sent();\n                        span.end();\n                        throw err_1;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return TracingPolicy;\n}(BaseRequestPolicy));\n\n// Copyright (c) Microsoft Corporation.\n/**\n * Returns a request policy factory that can be used to create an instance of\n * {@link DisableResponseDecompressionPolicy}.\n */\nfunction disableResponseDecompressionPolicy() {\n    return {\n        create: function (nextPolicy, options) {\n            return new DisableResponseDecompressionPolicy(nextPolicy, options);\n        }\n    };\n}\n/**\n * A policy to disable response decompression according to Accept-Encoding header\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Encoding\n */\nvar DisableResponseDecompressionPolicy = /** @class */ (function (_super) {\n    tslib.__extends(DisableResponseDecompressionPolicy, _super);\n    /**\n     * Creates an instance of DisableResponseDecompressionPolicy.\n     *\n     * @param {RequestPolicy} nextPolicy\n     * @param {RequestPolicyOptions} options\n     */\n    // The parent constructor is protected.\n    /* eslint-disable-next-line @typescript-eslint/no-useless-constructor */\n    function DisableResponseDecompressionPolicy(nextPolicy, options) {\n        return _super.call(this, nextPolicy, options) || this;\n    }\n    /**\n     * Sends out request.\n     *\n     * @param {WebResource} request\n     * @returns {Promise<HttpOperationResponse>}\n     */\n    DisableResponseDecompressionPolicy.prototype.sendRequest = function (request) {\n        return tslib.__awaiter(this, void 0, void 0, function () {\n            return tslib.__generator(this, function (_a) {\n                request.decompressResponse = false;\n                return [2 /*return*/, this._nextPolicy.sendRequest(request)];\n            });\n        });\n    };\n    return DisableResponseDecompressionPolicy;\n}(BaseRequestPolicy));\n\n// Copyright (c) Microsoft Corporation.\n/**\n * @class\n * Initializes a new instance of the ServiceClient.\n */\nvar ServiceClient = /** @class */ (function () {\n    /**\n     * The ServiceClient constructor\n     * @constructor\n     * @param credentials The credentials used for authentication with the service.\n     * @param options The service client options that govern the behavior of the client.\n     */\n    function ServiceClient(credentials, \n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n    options) {\n        var _this = this;\n        if (!options) {\n            options = {};\n        }\n        this._withCredentials = options.withCredentials || false;\n        this._httpClient = options.httpClient || new NodeFetchHttpClient();\n        this._requestPolicyOptions = new RequestPolicyOptions(options.httpPipelineLogger);\n        var requestPolicyFactories;\n        if (Array.isArray(options.requestPolicyFactories)) {\n            logger.info(\"ServiceClient: using custom request policies\");\n            requestPolicyFactories = options.requestPolicyFactories;\n        }\n        else {\n            var authPolicyFactory = undefined;\n            if (coreAuth.isTokenCredential(credentials)) {\n                logger.info(\"ServiceClient: creating bearer token authentication policy from provided credentials\");\n                // Create a wrapped RequestPolicyFactory here so that we can provide the\n                // correct scope to the BearerTokenAuthenticationPolicy at the first time\n                // one is requested.  This is needed because generated ServiceClient\n                // implementations do not set baseUri until after ServiceClient's constructor\n                // is finished, leaving baseUri empty at the time when it is needed to\n                // build the correct scope name.\n                var wrappedPolicyFactory = function () {\n                    var bearerTokenPolicyFactory = undefined;\n                    // eslint-disable-next-line @typescript-eslint/no-this-alias\n                    var serviceClient = _this;\n                    return {\n                        create: function (nextPolicy, options) {\n                            if (bearerTokenPolicyFactory === undefined || bearerTokenPolicyFactory === null) {\n                                bearerTokenPolicyFactory = bearerTokenAuthenticationPolicy(credentials, (serviceClient.baseUri || \"\") + \"/.default\");\n                            }\n                            return bearerTokenPolicyFactory.create(nextPolicy, options);\n                        }\n                    };\n                };\n                authPolicyFactory = wrappedPolicyFactory();\n            }\n            else if (credentials && typeof credentials.signRequest === \"function\") {\n                logger.info(\"ServiceClient: creating signing policy from provided credentials\");\n                authPolicyFactory = signingPolicy(credentials);\n            }\n            else if (credentials !== undefined && credentials !== null) {\n                throw new Error(\"The credentials argument must implement the TokenCredential interface\");\n            }\n            logger.info(\"ServiceClient: using default request policies\");\n            requestPolicyFactories = createDefaultRequestPolicyFactories(authPolicyFactory, options);\n            if (options.requestPolicyFactories) {\n                // options.requestPolicyFactories can also be a function that manipulates\n                // the default requestPolicyFactories array\n                var newRequestPolicyFactories = options.requestPolicyFactories(requestPolicyFactories);\n                if (newRequestPolicyFactories) {\n                    requestPolicyFactories = newRequestPolicyFactories;\n                }\n            }\n        }\n        this._requestPolicyFactories = requestPolicyFactories;\n    }\n    /**\n     * Send the provided httpRequest.\n     */\n    ServiceClient.prototype.sendRequest = function (options) {\n        if (options === null || options === undefined || typeof options !== \"object\") {\n            throw new Error(\"options cannot be null or undefined and it must be of type object.\");\n        }\n        var httpRequest;\n        try {\n            if (isWebResourceLike(options)) {\n                options.validateRequestProperties();\n                httpRequest = options;\n            }\n            else {\n                httpRequest = new WebResource();\n                httpRequest = httpRequest.prepare(options);\n            }\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n        var httpPipeline = this._httpClient;\n        if (this._requestPolicyFactories && this._requestPolicyFactories.length > 0) {\n            for (var i = this._requestPolicyFactories.length - 1; i >= 0; --i) {\n                httpPipeline = this._requestPolicyFactories[i].create(httpPipeline, this._requestPolicyOptions);\n            }\n        }\n        return httpPipeline.sendRequest(httpRequest);\n    };\n    /**\n     * Send an HTTP request that is populated using the provided OperationSpec.\n     * @param {OperationArguments} operationArguments The arguments that the HTTP request's templated values will be populated from.\n     * @param {OperationSpec} operationSpec The OperationSpec to use to populate the httpRequest.\n     * @param {ServiceCallback} callback The callback to call when the response is received.\n     */\n    ServiceClient.prototype.sendOperationRequest = function (operationArguments, operationSpec, callback) {\n        return tslib.__awaiter(this, void 0, void 0, function () {\n            var httpRequest, result, baseUri, requestUrl, _i, _a, urlParameter, urlParameterValue, _b, _c, queryParameter, queryParameterValue, index, item, index, contentType, _d, _e, headerParameter, headerValue, headerCollectionPrefix, _f, _g, key, options, customHeaderName, rawResponse, sendRequestError, error_1, error_2, cb;\n            return tslib.__generator(this, function (_h) {\n                switch (_h.label) {\n                    case 0:\n                        if (typeof operationArguments.options === \"function\") {\n                            callback = operationArguments.options;\n                            operationArguments.options = undefined;\n                        }\n                        httpRequest = new WebResource();\n                        _h.label = 1;\n                    case 1:\n                        _h.trys.push([1, 6, , 7]);\n                        baseUri = operationSpec.baseUrl || this.baseUri;\n                        if (!baseUri) {\n                            throw new Error(\"If operationSpec.baseUrl is not specified, then the ServiceClient must have a baseUri string property that contains the base URL to use.\");\n                        }\n                        httpRequest.method = operationSpec.httpMethod;\n                        httpRequest.operationSpec = operationSpec;\n                        requestUrl = URLBuilder.parse(baseUri);\n                        if (operationSpec.path) {\n                            requestUrl.appendPath(operationSpec.path);\n                        }\n                        if (operationSpec.urlParameters && operationSpec.urlParameters.length > 0) {\n                            for (_i = 0, _a = operationSpec.urlParameters; _i < _a.length; _i++) {\n                                urlParameter = _a[_i];\n                                urlParameterValue = getOperationArgumentValueFromParameter(this, operationArguments, urlParameter, operationSpec.serializer);\n                                urlParameterValue = operationSpec.serializer.serialize(urlParameter.mapper, urlParameterValue, getPathStringFromParameter(urlParameter));\n                                if (!urlParameter.skipEncoding) {\n                                    urlParameterValue = encodeURIComponent(urlParameterValue);\n                                }\n                                requestUrl.replaceAll(\"{\" + (urlParameter.mapper.serializedName || getPathStringFromParameter(urlParameter)) + \"}\", urlParameterValue);\n                            }\n                        }\n                        if (operationSpec.queryParameters && operationSpec.queryParameters.length > 0) {\n                            for (_b = 0, _c = operationSpec.queryParameters; _b < _c.length; _b++) {\n                                queryParameter = _c[_b];\n                                queryParameterValue = getOperationArgumentValueFromParameter(this, operationArguments, queryParameter, operationSpec.serializer);\n                                if (queryParameterValue !== undefined && queryParameterValue !== null) {\n                                    queryParameterValue = operationSpec.serializer.serialize(queryParameter.mapper, queryParameterValue, getPathStringFromParameter(queryParameter));\n                                    if (queryParameter.collectionFormat !== undefined &&\n                                        queryParameter.collectionFormat !== null) {\n                                        if (queryParameter.collectionFormat === exports.QueryCollectionFormat.Multi) {\n                                            if (queryParameterValue.length === 0) {\n                                                queryParameterValue = \"\";\n                                            }\n                                            else {\n                                                for (index in queryParameterValue) {\n                                                    item = queryParameterValue[index];\n                                                    queryParameterValue[index] =\n                                                        item === undefined || item === null ? \"\" : item.toString();\n                                                }\n                                            }\n                                        }\n                                        else if (queryParameter.collectionFormat === exports.QueryCollectionFormat.Ssv ||\n                                            queryParameter.collectionFormat === exports.QueryCollectionFormat.Tsv) {\n                                            queryParameterValue = queryParameterValue.join(queryParameter.collectionFormat);\n                                        }\n                                    }\n                                    if (!queryParameter.skipEncoding) {\n                                        if (Array.isArray(queryParameterValue)) {\n                                            for (index in queryParameterValue) {\n                                                if (queryParameterValue[index] !== undefined &&\n                                                    queryParameterValue[index] !== null) {\n                                                    queryParameterValue[index] = encodeURIComponent(queryParameterValue[index]);\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            queryParameterValue = encodeURIComponent(queryParameterValue);\n                                        }\n                                    }\n                                    if (queryParameter.collectionFormat !== undefined &&\n                                        queryParameter.collectionFormat !== null &&\n                                        queryParameter.collectionFormat !== exports.QueryCollectionFormat.Multi &&\n                                        queryParameter.collectionFormat !== exports.QueryCollectionFormat.Ssv &&\n                                        queryParameter.collectionFormat !== exports.QueryCollectionFormat.Tsv) {\n                                        queryParameterValue = queryParameterValue.join(queryParameter.collectionFormat);\n                                    }\n                                    requestUrl.setQueryParameter(queryParameter.mapper.serializedName || getPathStringFromParameter(queryParameter), queryParameterValue);\n                                }\n                            }\n                        }\n                        httpRequest.url = requestUrl.toString();\n                        contentType = operationSpec.contentType || this.requestContentType;\n                        if (contentType) {\n                            httpRequest.headers.set(\"Content-Type\", contentType);\n                        }\n                        if (operationSpec.headerParameters) {\n                            for (_d = 0, _e = operationSpec.headerParameters; _d < _e.length; _d++) {\n                                headerParameter = _e[_d];\n                                headerValue = getOperationArgumentValueFromParameter(this, operationArguments, headerParameter, operationSpec.serializer);\n                                if (headerValue !== undefined && headerValue !== null) {\n                                    headerValue = operationSpec.serializer.serialize(headerParameter.mapper, headerValue, getPathStringFromParameter(headerParameter));\n                                    headerCollectionPrefix = headerParameter.mapper\n                                        .headerCollectionPrefix;\n                                    if (headerCollectionPrefix) {\n                                        for (_f = 0, _g = Object.keys(headerValue); _f < _g.length; _f++) {\n                                            key = _g[_f];\n                                            httpRequest.headers.set(headerCollectionPrefix + key, headerValue[key]);\n                                        }\n                                    }\n                                    else {\n                                        httpRequest.headers.set(headerParameter.mapper.serializedName ||\n                                            getPathStringFromParameter(headerParameter), headerValue);\n                                    }\n                                }\n                            }\n                        }\n                        options = operationArguments.options;\n                        if (options) {\n                            if (options.customHeaders) {\n                                for (customHeaderName in options.customHeaders) {\n                                    httpRequest.headers.set(customHeaderName, options.customHeaders[customHeaderName]);\n                                }\n                            }\n                            if (options.abortSignal) {\n                                httpRequest.abortSignal = options.abortSignal;\n                            }\n                            if (options.timeout) {\n                                httpRequest.timeout = options.timeout;\n                            }\n                            if (options.onUploadProgress) {\n                                httpRequest.onUploadProgress = options.onUploadProgress;\n                            }\n                            if (options.onDownloadProgress) {\n                                httpRequest.onDownloadProgress = options.onDownloadProgress;\n                            }\n                            if (options.spanOptions) {\n                                httpRequest.spanOptions = options.spanOptions;\n                            }\n                            if (options.shouldDeserialize !== undefined && options.shouldDeserialize !== null) {\n                                httpRequest.shouldDeserialize = options.shouldDeserialize;\n                            }\n                        }\n                        httpRequest.withCredentials = this._withCredentials;\n                        serializeRequestBody(this, httpRequest, operationArguments, operationSpec);\n                        if (httpRequest.streamResponseBody === undefined || httpRequest.streamResponseBody === null) {\n                            httpRequest.streamResponseBody = isStreamOperation(operationSpec);\n                        }\n                        rawResponse = void 0;\n                        sendRequestError = void 0;\n                        _h.label = 2;\n                    case 2:\n                        _h.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, this.sendRequest(httpRequest)];\n                    case 3:\n                        rawResponse = _h.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        error_1 = _h.sent();\n                        sendRequestError = error_1;\n                        return [3 /*break*/, 5];\n                    case 5:\n                        if (sendRequestError) {\n                            if (sendRequestError.response) {\n                                sendRequestError.details = flattenResponse(sendRequestError.response, operationSpec.responses[sendRequestError.statusCode] ||\n                                    operationSpec.responses[\"default\"]);\n                            }\n                            result = Promise.reject(sendRequestError);\n                        }\n                        else {\n                            result = Promise.resolve(flattenResponse(rawResponse, operationSpec.responses[rawResponse.status]));\n                        }\n                        return [3 /*break*/, 7];\n                    case 6:\n                        error_2 = _h.sent();\n                        result = Promise.reject(error_2);\n                        return [3 /*break*/, 7];\n                    case 7:\n                        cb = callback;\n                        if (cb) {\n                            result\n                                // tslint:disable-next-line:no-null-keyword\n                                .then(function (res) { return cb(null, res._response.parsedBody, res._response.request, res._response); })\n                                .catch(function (err) { return cb(err); });\n                        }\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    return ServiceClient;\n}());\nfunction serializeRequestBody(serviceClient, httpRequest, operationArguments, operationSpec) {\n    var _a;\n    if (operationSpec.requestBody && operationSpec.requestBody.mapper) {\n        httpRequest.body = getOperationArgumentValueFromParameter(serviceClient, operationArguments, operationSpec.requestBody, operationSpec.serializer);\n        var bodyMapper = operationSpec.requestBody.mapper;\n        var required = bodyMapper.required, xmlName = bodyMapper.xmlName, xmlElementName = bodyMapper.xmlElementName, serializedName = bodyMapper.serializedName;\n        var typeName = bodyMapper.type.name;\n        try {\n            if ((httpRequest.body !== undefined && httpRequest.body !== null) || required) {\n                var requestBodyParameterPathString = getPathStringFromParameter(operationSpec.requestBody);\n                httpRequest.body = operationSpec.serializer.serialize(bodyMapper, httpRequest.body, requestBodyParameterPathString);\n                var isStream = typeName === MapperType.Stream;\n                if (operationSpec.isXML) {\n                    if (typeName === MapperType.Sequence) {\n                        httpRequest.body = stringifyXML(prepareXMLRootList(httpRequest.body, xmlElementName || xmlName || serializedName), { rootName: xmlName || serializedName });\n                    }\n                    else if (!isStream) {\n                        httpRequest.body = stringifyXML(httpRequest.body, {\n                            rootName: xmlName || serializedName\n                        });\n                    }\n                }\n                else if (typeName === MapperType.String &&\n                    (((_a = operationSpec.contentType) === null || _a === void 0 ? void 0 : _a.match(\"text/plain\")) || operationSpec.mediaType === \"text\")) {\n                    // the String serializer has validated that request body is a string\n                    // so just send the string.\n                    return;\n                }\n                else if (!isStream) {\n                    httpRequest.body = JSON.stringify(httpRequest.body);\n                }\n            }\n        }\n        catch (error) {\n            throw new Error(\"Error \\\"\" + error.message + \"\\\" occurred in serializing the payload - \" + JSON.stringify(serializedName, undefined, \"  \") + \".\");\n        }\n    }\n    else if (operationSpec.formDataParameters && operationSpec.formDataParameters.length > 0) {\n        httpRequest.formData = {};\n        for (var _i = 0, _b = operationSpec.formDataParameters; _i < _b.length; _i++) {\n            var formDataParameter = _b[_i];\n            var formDataParameterValue = getOperationArgumentValueFromParameter(serviceClient, operationArguments, formDataParameter, operationSpec.serializer);\n            if (formDataParameterValue !== undefined && formDataParameterValue !== null) {\n                var formDataParameterPropertyName = formDataParameter.mapper.serializedName || getPathStringFromParameter(formDataParameter);\n                httpRequest.formData[formDataParameterPropertyName] = operationSpec.serializer.serialize(formDataParameter.mapper, formDataParameterValue, getPathStringFromParameter(formDataParameter));\n            }\n        }\n    }\n}\nfunction getValueOrFunctionResult(value, defaultValueCreator) {\n    var result;\n    if (typeof value === \"string\") {\n        result = value;\n    }\n    else {\n        result = defaultValueCreator();\n        if (typeof value === \"function\") {\n            result = value(result);\n        }\n    }\n    return result;\n}\nfunction createDefaultRequestPolicyFactories(authPolicyFactory, options) {\n    var factories = [];\n    if (options.generateClientRequestIdHeader) {\n        factories.push(generateClientRequestIdPolicy(options.clientRequestIdHeaderName));\n    }\n    if (authPolicyFactory) {\n        factories.push(authPolicyFactory);\n    }\n    var userAgentHeaderName = getValueOrFunctionResult(options.userAgentHeaderName, getDefaultUserAgentHeaderName);\n    var userAgentHeaderValue = getValueOrFunctionResult(options.userAgent, getDefaultUserAgentValue);\n    if (userAgentHeaderName && userAgentHeaderValue) {\n        factories.push(userAgentPolicy({ key: userAgentHeaderName, value: userAgentHeaderValue }));\n    }\n    factories.push(redirectPolicy());\n    factories.push(rpRegistrationPolicy(options.rpRegistrationRetryTimeout));\n    if (!options.noRetryPolicy) {\n        factories.push(exponentialRetryPolicy());\n        factories.push(systemErrorRetryPolicy());\n        factories.push(throttlingRetryPolicy());\n    }\n    factories.push(deserializationPolicy(options.deserializationContentTypes));\n    {\n        factories.push(proxyPolicy(options.proxySettings));\n    }\n    factories.push(logPolicy({ logger: logger.info }));\n    return factories;\n}\nfunction createPipelineFromOptions(pipelineOptions, authPolicyFactory) {\n    var requestPolicyFactories = [];\n    var userAgentValue = undefined;\n    if (pipelineOptions.userAgentOptions && pipelineOptions.userAgentOptions.userAgentPrefix) {\n        var userAgentInfo = [];\n        userAgentInfo.push(pipelineOptions.userAgentOptions.userAgentPrefix);\n        // Add the default user agent value if it isn't already specified\n        // by the userAgentPrefix option.\n        var defaultUserAgentInfo = getDefaultUserAgentValue();\n        if (userAgentInfo.indexOf(defaultUserAgentInfo) === -1) {\n            userAgentInfo.push(defaultUserAgentInfo);\n        }\n        userAgentValue = userAgentInfo.join(\" \");\n    }\n    var keepAliveOptions = tslib.__assign(tslib.__assign({}, DefaultKeepAliveOptions), pipelineOptions.keepAliveOptions);\n    var retryOptions = tslib.__assign(tslib.__assign({}, DefaultRetryOptions), pipelineOptions.retryOptions);\n    var redirectOptions = tslib.__assign(tslib.__assign({}, DefaultRedirectOptions), pipelineOptions.redirectOptions);\n    {\n        requestPolicyFactories.push(proxyPolicy(pipelineOptions.proxyOptions));\n    }\n    var deserializationOptions = tslib.__assign(tslib.__assign({}, DefaultDeserializationOptions), pipelineOptions.deserializationOptions);\n    var loggingOptions = tslib.__assign({}, pipelineOptions.loggingOptions);\n    requestPolicyFactories.push(tracingPolicy({ userAgent: userAgentValue }), keepAlivePolicy(keepAliveOptions), userAgentPolicy({ value: userAgentValue }), generateClientRequestIdPolicy(), deserializationPolicy(deserializationOptions.expectedContentTypes), throttlingRetryPolicy(), systemErrorRetryPolicy(), exponentialRetryPolicy(retryOptions.maxRetries, retryOptions.retryDelayInMs, retryOptions.maxRetryDelayInMs));\n    if (redirectOptions.handleRedirects) {\n        requestPolicyFactories.push(redirectPolicy(redirectOptions.maxRetries));\n    }\n    if (authPolicyFactory) {\n        requestPolicyFactories.push(authPolicyFactory);\n    }\n    requestPolicyFactories.push(logPolicy(loggingOptions));\n    if (isNode && pipelineOptions.decompressResponse === false) {\n        requestPolicyFactories.push(disableResponseDecompressionPolicy());\n    }\n    return {\n        httpClient: pipelineOptions.httpClient,\n        requestPolicyFactories: requestPolicyFactories\n    };\n}\nfunction getOperationArgumentValueFromParameter(serviceClient, operationArguments, parameter, serializer) {\n    return getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, parameter.parameterPath, parameter.mapper, serializer);\n}\nfunction getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, parameterPath, parameterMapper, serializer) {\n    var value;\n    if (typeof parameterPath === \"string\") {\n        parameterPath = [parameterPath];\n    }\n    if (Array.isArray(parameterPath)) {\n        if (parameterPath.length > 0) {\n            if (parameterMapper.isConstant) {\n                value = parameterMapper.defaultValue;\n            }\n            else {\n                var propertySearchResult = getPropertyFromParameterPath(operationArguments, parameterPath);\n                if (!propertySearchResult.propertyFound) {\n                    propertySearchResult = getPropertyFromParameterPath(serviceClient, parameterPath);\n                }\n                var useDefaultValue = false;\n                if (!propertySearchResult.propertyFound) {\n                    useDefaultValue =\n                        parameterMapper.required ||\n                            (parameterPath[0] === \"options\" && parameterPath.length === 2);\n                }\n                value = useDefaultValue ? parameterMapper.defaultValue : propertySearchResult.propertyValue;\n            }\n            // Serialize just for validation purposes.\n            var parameterPathString = getPathStringFromParameterPath(parameterPath, parameterMapper);\n            serializer.serialize(parameterMapper, value, parameterPathString);\n        }\n    }\n    else {\n        if (parameterMapper.required) {\n            value = {};\n        }\n        for (var propertyName in parameterPath) {\n            var propertyMapper = parameterMapper.type.modelProperties[propertyName];\n            var propertyPath = parameterPath[propertyName];\n            var propertyValue = getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, propertyPath, propertyMapper, serializer);\n            // Serialize just for validation purposes.\n            var propertyPathString = getPathStringFromParameterPath(propertyPath, propertyMapper);\n            serializer.serialize(propertyMapper, propertyValue, propertyPathString);\n            if (propertyValue !== undefined && propertyValue !== null) {\n                if (!value) {\n                    value = {};\n                }\n                value[propertyName] = propertyValue;\n            }\n        }\n    }\n    return value;\n}\nfunction getPropertyFromParameterPath(parent, parameterPath) {\n    var result = { propertyFound: false };\n    var i = 0;\n    for (; i < parameterPath.length; ++i) {\n        var parameterPathPart = parameterPath[i];\n        // Make sure to check inherited properties too, so don't use hasOwnProperty().\n        if (parent !== undefined && parent !== null && parameterPathPart in parent) {\n            parent = parent[parameterPathPart];\n        }\n        else {\n            break;\n        }\n    }\n    if (i === parameterPath.length) {\n        result.propertyValue = parent;\n        result.propertyFound = true;\n    }\n    return result;\n}\nfunction flattenResponse(_response, responseSpec) {\n    var parsedHeaders = _response.parsedHeaders;\n    var bodyMapper = responseSpec && responseSpec.bodyMapper;\n    var addOperationResponse = function (obj) {\n        return Object.defineProperty(obj, \"_response\", {\n            value: _response\n        });\n    };\n    if (bodyMapper) {\n        var typeName = bodyMapper.type.name;\n        if (typeName === \"Stream\") {\n            return addOperationResponse(tslib.__assign(tslib.__assign({}, parsedHeaders), { blobBody: _response.blobBody, readableStreamBody: _response.readableStreamBody }));\n        }\n        var modelProperties_1 = (typeName === \"Composite\" && bodyMapper.type.modelProperties) || {};\n        var isPageableResponse = Object.keys(modelProperties_1).some(function (k) { return modelProperties_1[k].serializedName === \"\"; });\n        if (typeName === \"Sequence\" || isPageableResponse) {\n            var arrayResponse = tslib.__spreadArrays((_response.parsedBody || []));\n            for (var _i = 0, _a = Object.keys(modelProperties_1); _i < _a.length; _i++) {\n                var key = _a[_i];\n                if (modelProperties_1[key].serializedName) {\n                    arrayResponse[key] = _response.parsedBody[key];\n                }\n            }\n            if (parsedHeaders) {\n                for (var _b = 0, _c = Object.keys(parsedHeaders); _b < _c.length; _b++) {\n                    var key = _c[_b];\n                    arrayResponse[key] = parsedHeaders[key];\n                }\n            }\n            addOperationResponse(arrayResponse);\n            return arrayResponse;\n        }\n        if (typeName === \"Composite\" || typeName === \"Dictionary\") {\n            return addOperationResponse(tslib.__assign(tslib.__assign({}, parsedHeaders), _response.parsedBody));\n        }\n    }\n    if (bodyMapper ||\n        _response.request.method === \"HEAD\" ||\n        isPrimitiveType(_response.parsedBody)) {\n        // primitive body types and HEAD booleans\n        return addOperationResponse(tslib.__assign(tslib.__assign({}, parsedHeaders), { body: _response.parsedBody }));\n    }\n    return addOperationResponse(tslib.__assign(tslib.__assign({}, parsedHeaders), _response.parsedBody));\n}\n\n// Copyright (c) Microsoft Corporation.\nvar HeaderConstants = Constants.HeaderConstants;\nvar DEFAULT_AUTHORIZATION_SCHEME = \"Basic\";\nvar BasicAuthenticationCredentials = /** @class */ (function () {\n    /**\n     * Creates a new BasicAuthenticationCredentials object.\n     *\n     * @constructor\n     * @param {string} userName User name.\n     * @param {string} password Password.\n     * @param {string} [authorizationScheme] The authorization scheme.\n     */\n    function BasicAuthenticationCredentials(userName, password, authorizationScheme) {\n        if (authorizationScheme === void 0) { authorizationScheme = DEFAULT_AUTHORIZATION_SCHEME; }\n        this.authorizationScheme = DEFAULT_AUTHORIZATION_SCHEME;\n        if (userName === null || userName === undefined || typeof userName.valueOf() !== \"string\") {\n            throw new Error(\"userName cannot be null or undefined and must be of type string.\");\n        }\n        if (password === null || password === undefined || typeof password.valueOf() !== \"string\") {\n            throw new Error(\"password cannot be null or undefined and must be of type string.\");\n        }\n        this.userName = userName;\n        this.password = password;\n        this.authorizationScheme = authorizationScheme;\n    }\n    /**\n     * Signs a request with the Authentication header.\n     *\n     * @param {WebResourceLike} webResource The WebResourceLike to be signed.\n     * @returns {Promise<WebResourceLike>} The signed request object.\n     */\n    BasicAuthenticationCredentials.prototype.signRequest = function (webResource) {\n        var credentials = this.userName + \":\" + this.password;\n        var encodedCredentials = this.authorizationScheme + \" \" + encodeString(credentials);\n        if (!webResource.headers)\n            webResource.headers = new HttpHeaders();\n        webResource.headers.set(HeaderConstants.AUTHORIZATION, encodedCredentials);\n        return Promise.resolve(webResource);\n    };\n    return BasicAuthenticationCredentials;\n}());\n\n// Copyright (c) Microsoft Corporation.\n/**\n * Authenticates to a service using an API key.\n */\nvar ApiKeyCredentials = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param {object} options   Specifies the options to be provided for auth. Either header or query needs to be provided.\n     */\n    function ApiKeyCredentials(options) {\n        if (!options || (options && !options.inHeader && !options.inQuery)) {\n            throw new Error(\"options cannot be null or undefined. Either \\\"inHeader\\\" or \\\"inQuery\\\" property of the options object needs to be provided.\");\n        }\n        this.inHeader = options.inHeader;\n        this.inQuery = options.inQuery;\n    }\n    /**\n     * Signs a request with the values provided in the inHeader and inQuery parameter.\n     *\n     * @param {WebResourceLike} webResource The WebResourceLike to be signed.\n     * @returns {Promise<WebResourceLike>} The signed request object.\n     */\n    ApiKeyCredentials.prototype.signRequest = function (webResource) {\n        if (!webResource) {\n            return Promise.reject(new Error(\"webResource cannot be null or undefined and must be of type \\\"object\\\".\"));\n        }\n        if (this.inHeader) {\n            if (!webResource.headers) {\n                webResource.headers = new HttpHeaders();\n            }\n            for (var headerName in this.inHeader) {\n                webResource.headers.set(headerName, this.inHeader[headerName]);\n            }\n        }\n        if (this.inQuery) {\n            if (!webResource.url) {\n                return Promise.reject(new Error(\"url cannot be null in the request object.\"));\n            }\n            if (webResource.url.indexOf(\"?\") < 0) {\n                webResource.url += \"?\";\n            }\n            for (var key in this.inQuery) {\n                if (!webResource.url.endsWith(\"?\")) {\n                    webResource.url += \"&\";\n                }\n                webResource.url += key + \"=\" + this.inQuery[key];\n            }\n        }\n        return Promise.resolve(webResource);\n    };\n    return ApiKeyCredentials;\n}());\n\n// Copyright (c) Microsoft Corporation.\nvar TopicCredentials = /** @class */ (function (_super) {\n    tslib.__extends(TopicCredentials, _super);\n    /**\n     * Creates a new EventGrid TopicCredentials object.\n     *\n     * @constructor\n     * @param {string} topicKey   The EventGrid topic key\n     */\n    function TopicCredentials(topicKey) {\n        var _this = this;\n        if (!topicKey || (topicKey && typeof topicKey !== \"string\")) {\n            throw new Error(\"topicKey cannot be null or undefined and must be of type string.\");\n        }\n        var options = {\n            inHeader: {\n                \"aeg-sas-key\": topicKey\n            }\n        };\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    return TopicCredentials;\n}(ApiKeyCredentials));\n\nObject.defineProperty(exports, 'isTokenCredential', {\n    enumerable: true,\n    get: function () {\n        return coreAuth.isTokenCredential;\n    }\n});\nexports.AccessTokenRefresher = AccessTokenRefresher;\nexports.ApiKeyCredentials = ApiKeyCredentials;\nexports.BaseRequestPolicy = BaseRequestPolicy;\nexports.BasicAuthenticationCredentials = BasicAuthenticationCredentials;\nexports.Constants = Constants;\nexports.DefaultHttpClient = NodeFetchHttpClient;\nexports.ExpiringAccessTokenCache = ExpiringAccessTokenCache;\nexports.HttpHeaders = HttpHeaders;\nexports.MapperType = MapperType;\nexports.RequestPolicyOptions = RequestPolicyOptions;\nexports.RestError = RestError;\nexports.Serializer = Serializer;\nexports.ServiceClient = ServiceClient;\nexports.TopicCredentials = TopicCredentials;\nexports.URLBuilder = URLBuilder;\nexports.URLQuery = URLQuery;\nexports.WebResource = WebResource;\nexports.applyMixins = applyMixins;\nexports.bearerTokenAuthenticationPolicy = bearerTokenAuthenticationPolicy;\nexports.createPipelineFromOptions = createPipelineFromOptions;\nexports.delay = delay;\nexports.deserializationPolicy = deserializationPolicy;\nexports.deserializeResponseBody = deserializeResponseBody;\nexports.disableResponseDecompressionPolicy = disableResponseDecompressionPolicy;\nexports.encodeUri = encodeUri;\nexports.executePromisesSequentially = executePromisesSequentially;\nexports.exponentialRetryPolicy = exponentialRetryPolicy;\nexports.flattenResponse = flattenResponse;\nexports.generateClientRequestIdPolicy = generateClientRequestIdPolicy;\nexports.generateUuid = generateUuid;\nexports.getDefaultProxySettings = getDefaultProxySettings;\nexports.getDefaultUserAgentValue = getDefaultUserAgentValue;\nexports.isDuration = isDuration;\nexports.isNode = isNode;\nexports.isValidUuid = isValidUuid;\nexports.keepAlivePolicy = keepAlivePolicy;\nexports.logPolicy = logPolicy;\nexports.operationOptionsToRequestOptionsBase = operationOptionsToRequestOptionsBase;\nexports.parseXML = parseXML;\nexports.promiseToCallback = promiseToCallback;\nexports.promiseToServiceCallback = promiseToServiceCallback;\nexports.proxyPolicy = proxyPolicy;\nexports.redirectPolicy = redirectPolicy;\nexports.serializeObject = serializeObject;\nexports.signingPolicy = signingPolicy;\nexports.stringifyXML = stringifyXML;\nexports.stripRequest = stripRequest;\nexports.stripResponse = stripResponse;\nexports.systemErrorRetryPolicy = systemErrorRetryPolicy;\nexports.throttlingRetryPolicy = throttlingRetryPolicy;\nexports.tracingPolicy = tracingPolicy;\nexports.userAgentPolicy = userAgentPolicy;\n//# sourceMappingURL=index.js.map\n", "\"use strict\";\n/*!\n * Copyright 2020, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Default getter which just does a simple property access. Returns\n * undefined if the key is not set.\n *\n * @param carrier\n * @param key\n */\nfunction defaultGetter(carrier, key) {\n    return carrier[key];\n}\nexports.defaultGetter = defaultGetter;\n//# sourceMappingURL=getter.js.map", "\"use strict\";\n/*!\n * Copyright 2019, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * No-op implementations of {@link HttpTextPropagator}.\n */\nclass NoopHttpTextPropagator {\n    /** Noop inject function does nothing */\n    inject(context, carrier, setter) { }\n    /** Noop extract function does nothing and returns the input context */\n    extract(context, carrier, getter) {\n        return context;\n    }\n}\nexports.NoopHttpTextPropagator = NoopHttpTextPropagator;\nexports.NOOP_HTTP_TEXT_PROPAGATOR = new NoopHttpTextPropagator();\n//# sourceMappingURL=NoopHttpTextPropagator.js.map", "\"use strict\";\n/*!\n * Copyright 2020, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Default setter which sets value via direct property access\n *\n * @param carrier\n * @param key\n */\nfunction defaultSetter(carrier, key, value) {\n    carrier[key] = value;\n}\nexports.defaultSetter = defaultSetter;\n//# sourceMappingURL=setter.js.map", "\"use strict\";\n/*!\n * Copyright 2019, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * EntryTtl is an integer that represents number of hops an entry can propagate.\n *\n * For now, ONLY special values (0 and -1) are supported.\n */\nvar EntryTtl;\n(function (EntryTtl) {\n    /**\n     * NO_PROPAGATION is considered to have local context and is used within the\n     * process it created.\n     */\n    EntryTtl[EntryTtl[\"NO_PROPAGATION\"] = 0] = \"NO_PROPAGATION\";\n    /** UNLIMITED_PROPAGATION can propagate unlimited hops. */\n    EntryTtl[EntryTtl[\"UNLIMITED_PROPAGATION\"] = -1] = \"UNLIMITED_PROPAGATION\";\n})(EntryTtl = exports.EntryTtl || (exports.EntryTtl = {}));\n//# sourceMappingURL=EntryValue.js.map", "\"use strict\";\n/*!\n * Copyright 2019, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** The Type of value. It describes how the data is reported. */\nvar ValueType;\n(function (ValueType) {\n    ValueType[ValueType[\"INT\"] = 0] = \"INT\";\n    ValueType[ValueType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n})(ValueType = exports.ValueType || (exports.ValueType = {}));\n//# sourceMappingURL=Metric.js.map", "\"use strict\";\n/*!\n * Copyright 2019, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * NoopMeter is a noop implementation of the {@link Meter} interface. It reuses\n * constant NoopMetrics for all of its methods.\n */\nclass NoopMeter {\n    constructor() { }\n    /**\n     * Returns constant noop measure.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     */\n    createMeasure(name, options) {\n        return exports.NOOP_MEASURE_METRIC;\n    }\n    /**\n     * Returns a constant noop counter.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     */\n    createCounter(name, options) {\n        return exports.NOOP_COUNTER_METRIC;\n    }\n    /**\n     * Returns constant noop observer.\n     * @param name the name of the metric.\n     * @param [options] the metric options.\n     */\n    createObserver(name, options) {\n        return exports.NOOP_OBSERVER_METRIC;\n    }\n}\nexports.NoopMeter = NoopMeter;\nclass NoopMetric {\n    constructor(instrument) {\n        this._instrument = instrument;\n    }\n    /**\n     * Returns a Bound Instrument associated with specified Labels.\n     * It is recommended to keep a reference to the Bound Instrument instead of\n     * always calling this method for every operations.\n     * @param labels key-values pairs that are associated with a specific metric\n     *     that you want to record.\n     */\n    bind(labels) {\n        return this._instrument;\n    }\n    /**\n     * Removes the Binding from the metric, if it is present.\n     * @param labels key-values pairs that are associated with a specific metric.\n     */\n    unbind(labels) {\n        return;\n    }\n    /**\n     * Clears all timeseries from the Metric.\n     */\n    clear() {\n        return;\n    }\n}\nexports.NoopMetric = NoopMetric;\nclass NoopCounterMetric extends NoopMetric {\n    add(value, labels) {\n        this.bind(labels).add(value);\n    }\n}\nexports.NoopCounterMetric = NoopCounterMetric;\nclass NoopMeasureMetric extends NoopMetric {\n    record(value, labels, correlationContext, spanContext) {\n        if (typeof correlationContext === 'undefined') {\n            this.bind(labels).record(value);\n        }\n        else if (typeof spanContext === 'undefined') {\n            this.bind(labels).record(value, correlationContext);\n        }\n        else {\n            this.bind(labels).record(value, correlationContext, spanContext);\n        }\n    }\n}\nexports.NoopMeasureMetric = NoopMeasureMetric;\nclass NoopObserverMetric extends NoopMetric {\n    setCallback(callback) { }\n}\nexports.NoopObserverMetric = NoopObserverMetric;\nclass NoopBoundCounter {\n    add(value) {\n        return;\n    }\n}\nexports.NoopBoundCounter = NoopBoundCounter;\nclass NoopBoundMeasure {\n    record(value, correlationContext, spanContext) {\n        return;\n    }\n}\nexports.NoopBoundMeasure = NoopBoundMeasure;\nclass NoopBoundObserver {\n    setCallback(callback) { }\n}\nexports.NoopBoundObserver = NoopBoundObserver;\nexports.NOOP_METER = new NoopMeter();\nexports.NOOP_BOUND_COUNTER = new NoopBoundCounter();\nexports.NOOP_COUNTER_METRIC = new NoopCounterMetric(exports.NOOP_BOUND_COUNTER);\nexports.NOOP_BOUND_MEASURE = new NoopBoundMeasure();\nexports.NOOP_MEASURE_METRIC = new NoopMeasureMetric(exports.NOOP_BOUND_MEASURE);\nexports.NOOP_BOUND_OBSERVER = new NoopBoundObserver();\nexports.NOOP_OBSERVER_METRIC = new NoopObserverMetric(exports.NOOP_BOUND_OBSERVER);\n//# sourceMappingURL=NoopMeter.js.map", "\"use strict\";\n/*!\n * Copyright 2019, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst NoopMeter_1 = require(\"./NoopMeter\");\n/**\n * An implementation of the {@link MeterProvider} which returns an impotent Meter\n * for all calls to `getMeter`\n */\nclass NoopMeterProvider {\n    getMeter(_name, _version) {\n        return NoopMeter_1.NOOP_METER;\n    }\n}\nexports.NoopMeterProvider = NoopMeterProvider;\nexports.NOOP_METER_PROVIDER = new NoopMeterProvider();\n//# sourceMappingURL=NoopMeterProvider.js.map", "\"use strict\";\n/*!\n * Copyright 2019, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * An enumeration that represents global trace flags. These flags are\n * propagated to all child {@link Span}. These determine features such as\n * whether a Span should be traced. It is implemented as a bitmask.\n */\nvar TraceFlags;\n(function (TraceFlags) {\n    /** Represents no flag set. */\n    TraceFlags[TraceFlags[\"NONE\"] = 0] = \"NONE\";\n    /** Bit to represent whether trace is sampled in trace flags. */\n    TraceFlags[TraceFlags[\"SAMPLED\"] = 1] = \"SAMPLED\";\n})(TraceFlags = exports.TraceFlags || (exports.TraceFlags = {}));\n//# sourceMappingURL=trace_flags.js.map", "\"use strict\";\n/*!\n * Copyright 2019, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst trace_flags_1 = require(\"./trace_flags\");\nexports.INVALID_TRACE_ID = '0';\nexports.INVALID_SPAN_ID = '0';\nconst INVALID_SPAN_CONTEXT = {\n    traceId: exports.INVALID_TRACE_ID,\n    spanId: exports.INVALID_SPAN_ID,\n    traceFlags: trace_flags_1.TraceFlags.NONE,\n};\n/**\n * The NoopSpan is the default {@link Span} that is used when no Span\n * implementation is available. All operations are no-op including context\n * propagation.\n */\nclass NoopSpan {\n    constructor(_spanContext = INVALID_SPAN_CONTEXT) {\n        this._spanContext = _spanContext;\n    }\n    // Returns a SpanContext.\n    context() {\n        return this._spanContext;\n    }\n    // By default does nothing\n    setAttribute(key, value) {\n        return this;\n    }\n    // By default does nothing\n    setAttributes(attributes) {\n        return this;\n    }\n    // By default does nothing\n    addEvent(name, attributes) {\n        return this;\n    }\n    // By default does nothing\n    setStatus(status) {\n        return this;\n    }\n    // By default does nothing\n    updateName(name) {\n        return this;\n    }\n    // By default does nothing\n    end(endTime) { }\n    // isRecording always returns false for noopSpan.\n    isRecording() {\n        return false;\n    }\n}\nexports.NoopSpan = NoopSpan;\nexports.NOOP_SPAN = new NoopSpan();\n//# sourceMappingURL=NoopSpan.js.map", "\"use strict\";\n/*!\n * Copyright 2020, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst NoopSpan_1 = require(\"./NoopSpan\");\n/**\n * No-op implementations of {@link Tracer}.\n */\nclass NoopTracer {\n    getCurrentSpan() {\n        return NoopSpan_1.NOOP_SPAN;\n    }\n    // startSpan starts a noop span.\n    startSpan(name, options) {\n        return NoopSpan_1.NOOP_SPAN;\n    }\n    withSpan(span, fn) {\n        return fn();\n    }\n    bind(target, span) {\n        return target;\n    }\n}\nexports.NoopTracer = NoopTracer;\nexports.NOOP_TRACER = new NoopTracer();\n//# sourceMappingURL=NoopTracer.js.map", "\"use strict\";\n/*!\n * Copyright 2019, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst NoopTracer_1 = require(\"./NoopTracer\");\n/**\n * An implementation of the {@link TracerProvider} which returns an impotent Tracer\n * for all calls to `getTracer`\n */\nclass NoopTracerProvider {\n    getTracer(_name, _version) {\n        return NoopTracer_1.NOOP_TRACER;\n    }\n}\nexports.NoopTracerProvider = NoopTracerProvider;\nexports.NOOP_TRACER_PROVIDER = new NoopTracerProvider();\n//# sourceMappingURL=NoopTracerProvider.js.map", "\"use strict\";\n/*!\n * Copyright 2019, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Type of span. Can be used to specify additional relationships between spans\n * in addition to a parent/child relationship.\n */\nvar SpanKind;\n(function (SpanKind) {\n    /** Default value. Indicates that the span is used internally. */\n    SpanKind[SpanKind[\"INTERNAL\"] = 0] = \"INTERNAL\";\n    /**\n     * Indicates that the span covers server-side handling of an RPC or other\n     * remote request.\n     */\n    SpanKind[SpanKind[\"SERVER\"] = 1] = \"SERVER\";\n    /**\n     * Indicates that the span covers the client-side wrapper around an RPC or\n     * other remote request.\n     */\n    SpanKind[SpanKind[\"CLIENT\"] = 2] = \"CLIENT\";\n    /**\n     * Indicates that the span describes producer sending a message to a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"PRODUCER\"] = 3] = \"PRODUCER\";\n    /**\n     * Indicates that the span describes consumer receiving a message from a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"CONSUMER\"] = 4] = \"CONSUMER\";\n})(SpanKind = exports.SpanKind || (exports.SpanKind = {}));\n//# sourceMappingURL=span_kind.js.map", "\"use strict\";\n/*!\n * Copyright 2019, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * An enumeration of canonical status codes.\n */\nvar CanonicalCode;\n(function (CanonicalCode) {\n    /**\n     * Not an error; returned on success\n     */\n    CanonicalCode[CanonicalCode[\"OK\"] = 0] = \"OK\";\n    /**\n     * The operation was cancelled (typically by the caller).\n     */\n    CanonicalCode[CanonicalCode[\"CANCELLED\"] = 1] = \"CANCELLED\";\n    /**\n     * Unknown error.  An example of where this error may be returned is\n     * if a status value received from another address space belongs to\n     * an error-space that is not known in this address space.  Also\n     * errors raised by APIs that do not return enough error information\n     * may be converted to this error.\n     */\n    CanonicalCode[CanonicalCode[\"UNKNOWN\"] = 2] = \"UNKNOWN\";\n    /**\n     * Client specified an invalid argument.  Note that this differs\n     * from FAILED_PRECONDITION.  INVALID_ARGUMENT indicates arguments\n     * that are problematic regardless of the state of the system\n     * (e.g., a malformed file name).\n     */\n    CanonicalCode[CanonicalCode[\"INVALID_ARGUMENT\"] = 3] = \"INVALID_ARGUMENT\";\n    /**\n     * Deadline expired before operation could complete.  For operations\n     * that change the state of the system, this error may be returned\n     * even if the operation has completed successfully.  For example, a\n     * successful response from a server could have been delayed long\n     * enough for the deadline to expire.\n     */\n    CanonicalCode[CanonicalCode[\"DEADLINE_EXCEEDED\"] = 4] = \"DEADLINE_EXCEEDED\";\n    /**\n     * Some requested entity (e.g., file or directory) was not found.\n     */\n    CanonicalCode[CanonicalCode[\"NOT_FOUND\"] = 5] = \"NOT_FOUND\";\n    /**\n     * Some entity that we attempted to create (e.g., file or directory)\n     * already exists.\n     */\n    CanonicalCode[CanonicalCode[\"ALREADY_EXISTS\"] = 6] = \"ALREADY_EXISTS\";\n    /**\n     * The caller does not have permission to execute the specified\n     * operation.  PERMISSION_DENIED must not be used for rejections\n     * caused by exhausting some resource (use RESOURCE_EXHAUSTED\n     * instead for those errors).  PERMISSION_DENIED must not be\n     * used if the caller can not be identified (use UNAUTHENTICATED\n     * instead for those errors).\n     */\n    CanonicalCode[CanonicalCode[\"PERMISSION_DENIED\"] = 7] = \"PERMISSION_DENIED\";\n    /**\n     * Some resource has been exhausted, perhaps a per-user quota, or\n     * perhaps the entire file system is out of space.\n     */\n    CanonicalCode[CanonicalCode[\"RESOURCE_EXHAUSTED\"] = 8] = \"RESOURCE_EXHAUSTED\";\n    /**\n     * Operation was rejected because the system is not in a state\n     * required for the operation's execution.  For example, directory\n     * to be deleted may be non-empty, an rmdir operation is applied to\n     * a non-directory, etc.\n     *\n     * A litmus test that may help a service implementor in deciding\n     * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:\n     *\n     *  - Use UNAVAILABLE if the client can retry just the failing call.\n     *  - Use ABORTED if the client should retry at a higher-level\n     *    (e.g., restarting a read-modify-write sequence).\n     *  - Use FAILED_PRECONDITION if the client should not retry until\n     *    the system state has been explicitly fixed.  E.g., if an \"rmdir\"\n     *    fails because the directory is non-empty, FAILED_PRECONDITION\n     *    should be returned since the client should not retry unless\n     *    they have first fixed up the directory by deleting files from it.\n     *  - Use FAILED_PRECONDITION if the client performs conditional\n     *    REST Get/Update/Delete on a resource and the resource on the\n     *    server does not match the condition. E.g., conflicting\n     *    read-modify-write on the same resource.\n     */\n    CanonicalCode[CanonicalCode[\"FAILED_PRECONDITION\"] = 9] = \"FAILED_PRECONDITION\";\n    /**\n     * The operation was aborted, typically due to a concurrency issue\n     * like sequencer check failures, transaction aborts, etc.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION,\n     * ABORTED, and UNAVAILABLE.\n     */\n    CanonicalCode[CanonicalCode[\"ABORTED\"] = 10] = \"ABORTED\";\n    /**\n     * Operation was attempted past the valid range.  E.g., seeking or\n     * reading past end of file.\n     *\n     * Unlike INVALID_ARGUMENT, this error indicates a problem that may\n     * be fixed if the system state changes. For example, a 32-bit file\n     * system will generate INVALID_ARGUMENT if asked to read at an\n     * offset that is not in the range [0,2^32-1], but it will generate\n     * OUT_OF_RANGE if asked to read from an offset past the current\n     * file size.\n     *\n     * There is a fair bit of overlap between FAILED_PRECONDITION and\n     * OUT_OF_RANGE.  We recommend using OUT_OF_RANGE (the more specific\n     * error) when it applies so that callers who are iterating through\n     * a space can easily look for an OUT_OF_RANGE error to detect when\n     * they are done.\n     */\n    CanonicalCode[CanonicalCode[\"OUT_OF_RANGE\"] = 11] = \"OUT_OF_RANGE\";\n    /**\n     * Operation is not implemented or not supported/enabled in this service.\n     */\n    CanonicalCode[CanonicalCode[\"UNIMPLEMENTED\"] = 12] = \"UNIMPLEMENTED\";\n    /**\n     * Internal errors.  Means some invariants expected by underlying\n     * system has been broken.  If you see one of these errors,\n     * something is very broken.\n     */\n    CanonicalCode[CanonicalCode[\"INTERNAL\"] = 13] = \"INTERNAL\";\n    /**\n     * The service is currently unavailable.  This is a most likely a\n     * transient condition and may be corrected by retrying with\n     * a backoff.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION,\n     * ABORTED, and UNAVAILABLE.\n     */\n    CanonicalCode[CanonicalCode[\"UNAVAILABLE\"] = 14] = \"UNAVAILABLE\";\n    /**\n     * Unrecoverable data loss or corruption.\n     */\n    CanonicalCode[CanonicalCode[\"DATA_LOSS\"] = 15] = \"DATA_LOSS\";\n    /**\n     * The request does not have valid authentication credentials for the\n     * operation.\n     */\n    CanonicalCode[CanonicalCode[\"UNAUTHENTICATED\"] = 16] = \"UNAUTHENTICATED\";\n})(CanonicalCode = exports.CanonicalCode || (exports.CanonicalCode = {}));\n//# sourceMappingURL=status.js.map", "\"use strict\";\n/*!\n * Copyright 2020, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Class which stores and manages current context values. All methods which\n * update context such as get and delete do not modify an existing context,\n * but create a new one with updated values.\n */\nclass Context {\n    /**\n     * Construct a new context which inherits values from an optional parent context.\n     *\n     * @param parentContext a context from which to inherit values\n     */\n    constructor(parentContext) {\n        this._currentContext = parentContext ? new Map(parentContext) : new Map();\n    }\n    /** Get a key to uniquely identify a context value */\n    static createKey(description) {\n        return Symbol(description);\n    }\n    /**\n     * Get a value from the context.\n     *\n     * @param key key which identifies a context value\n     */\n    getValue(key) {\n        return this._currentContext.get(key);\n    }\n    /**\n     * Create a new context which inherits from this context and has\n     * the given key set to the given value.\n     *\n     * @param key context key for which to set the value\n     * @param value value to set for the given key\n     */\n    setValue(key, value) {\n        const context = new Context(this._currentContext);\n        context._currentContext.set(key, value);\n        return context;\n    }\n    /**\n     * Return a new context which inherits from this context but does\n     * not contain a value for the given key.\n     *\n     * @param key context key for which to clear a value\n     */\n    deleteValue(key) {\n        const context = new Context(this._currentContext);\n        context._currentContext.delete(key);\n        return context;\n    }\n}\nexports.Context = Context;\n/** The root context is used as the default parent context when there is no active context */\nContext.ROOT_CONTEXT = new Context();\n/**\n * This is another identifier to the root context which allows developers to easily search the\n * codebase for direct uses of context which need to be removed in later PRs.\n *\n * It's existence is temporary and it should be removed when all references are fixed.\n */\nContext.TODO = Context.ROOT_CONTEXT;\n//# sourceMappingURL=context.js.map", "\"use strict\";\n/*!\n * Copyright 2019, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst context_1 = require(\"./context\");\nclass NoopContextManager {\n    active() {\n        return context_1.Context.ROOT_CONTEXT;\n    }\n    with(context, fn) {\n        return fn();\n    }\n    bind(target, context) {\n        return target;\n    }\n    enable() {\n        return this;\n    }\n    disable() {\n        return this;\n    }\n}\nexports.NoopContextManager = NoopContextManager;\n//# sourceMappingURL=NoopContextManager.js.map", "\"use strict\";\n/*!\n * Copyright 2019, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./context\"));\n__export(require(\"./NoopContextManager\"));\n//# sourceMappingURL=index.js.map", "\"use strict\";\n/*!\n * Copyright 2020, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst context_base_1 = require(\"@opentelemetry/context-base\");\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Context API\n */\nclass ContextAPI {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    constructor() {\n        this._contextManager = new context_base_1.NoopContextManager();\n    }\n    /** Get the singleton instance of the Context API */\n    static getInstance() {\n        if (!this._instance) {\n            this._instance = new ContextAPI();\n        }\n        return this._instance;\n    }\n    /**\n     * Set the current context manager. Returns the initialized context manager\n     */\n    setGlobalContextManager(contextManager) {\n        this._contextManager = contextManager;\n        return contextManager;\n    }\n    /**\n     * Get the currently active context\n     */\n    active() {\n        return this._contextManager.active();\n    }\n    /**\n     * Execute a function with an active context\n     *\n     * @param context context to be active during function execution\n     * @param fn function to execute in a context\n     */\n    with(context, fn) {\n        return this._contextManager.with(context, fn);\n    }\n    /**\n     * Bind a context to a target function or event emitter\n     *\n     * @param target function or event emitter to bind\n     * @param context context to bind to the event emitter or function. Defaults to the currently active context\n     */\n    bind(target, context = this.active()) {\n        return this._contextManager.bind(target, context);\n    }\n}\nexports.ContextAPI = ContextAPI;\n//# sourceMappingURL=context.js.map", "\"use strict\";\n/*!\n * Copyright 2020, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst NoopTracerProvider_1 = require(\"../trace/NoopTracerProvider\");\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Tracing API\n */\nclass TraceAPI {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    constructor() {\n        this._tracerProvider = NoopTracerProvider_1.NOOP_TRACER_PROVIDER;\n    }\n    /** Get the singleton instance of the Trace API */\n    static getInstance() {\n        if (!this._instance) {\n            this._instance = new TraceAPI();\n        }\n        return this._instance;\n    }\n    /**\n     * Set the current global tracer. Returns the initialized global tracer provider\n     */\n    setGlobalTracerProvider(provider) {\n        this._tracerProvider = provider;\n        return provider;\n    }\n    /**\n     * Returns the global tracer provider.\n     */\n    getTracerProvider() {\n        return this._tracerProvider;\n    }\n    /**\n     * Returns a tracer from the global tracer provider.\n     */\n    getTracer(name, version) {\n        return this.getTracerProvider().getTracer(name, version);\n    }\n}\nexports.TraceAPI = TraceAPI;\n//# sourceMappingURL=trace.js.map", "\"use strict\";\n/*!\n * Copyright 2020, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst NoopMeterProvider_1 = require(\"../metrics/NoopMeterProvider\");\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Metrics API\n */\nclass MetricsAPI {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    constructor() {\n        this._meterProvider = NoopMeterProvider_1.NOOP_METER_PROVIDER;\n    }\n    /** Get the singleton instance of the Metrics API */\n    static getInstance() {\n        if (!this._instance) {\n            this._instance = new MetricsAPI();\n        }\n        return this._instance;\n    }\n    /**\n     * Set the current global meter. Returns the initialized global meter provider.\n     */\n    setGlobalMeterProvider(provider) {\n        this._meterProvider = provider;\n        return provider;\n    }\n    /**\n     * Returns the global meter provider.\n     */\n    getMeterProvider() {\n        return this._meterProvider;\n    }\n    /**\n     * Returns a meter from the global meter provider.\n     */\n    getMeter(name, version) {\n        return this.getMeterProvider().getMeter(name, version);\n    }\n}\nexports.MetricsAPI = MetricsAPI;\n//# sourceMappingURL=metrics.js.map", "\"use strict\";\n/*!\n * Copyright 2020, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst getter_1 = require(\"../context/propagation/getter\");\nconst NoopHttpTextPropagator_1 = require(\"../context/propagation/NoopHttpTextPropagator\");\nconst setter_1 = require(\"../context/propagation/setter\");\nconst context_1 = require(\"./context\");\nconst contextApi = context_1.ContextAPI.getInstance();\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Propagation API\n */\nclass PropagationAPI {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    constructor() {\n        this._propagator = NoopHttpTextPropagator_1.NOOP_HTTP_TEXT_PROPAGATOR;\n    }\n    /** Get the singleton instance of the Propagator API */\n    static getInstance() {\n        if (!this._instance) {\n            this._instance = new PropagationAPI();\n        }\n        return this._instance;\n    }\n    /**\n     * Set the current propagator. Returns the initialized propagator\n     */\n    setGlobalPropagator(propagator) {\n        this._propagator = propagator;\n        return propagator;\n    }\n    /**\n     * Inject context into a carrier to be propagated inter-process\n     *\n     * @param carrier carrier to inject context into\n     * @param setter Function used to set values on the carrier\n     * @param context Context carrying tracing data to inject. Defaults to the currently active context.\n     */\n    inject(carrier, setter = setter_1.defaultSetter, context = contextApi.active()) {\n        return this._propagator.inject(context, carrier, setter);\n    }\n    /**\n     * Extract context from a carrier\n     *\n     * @param carrier Carrier to extract context from\n     * @param getter Function used to extract keys from a carrier\n     * @param context Context which the newly created context will inherit from. Defaults to the currently active context.\n     */\n    extract(carrier, getter = getter_1.defaultGetter, context = contextApi.active()) {\n        return this._propagator.extract(context, carrier, getter);\n    }\n}\nexports.PropagationAPI = PropagationAPI;\n//# sourceMappingURL=propagation.js.map", "\"use strict\";\n/*!\n * Copyright 2019, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./context/propagation/getter\"));\n__export(require(\"./context/propagation/NoopHttpTextPropagator\"));\n__export(require(\"./context/propagation/setter\"));\n__export(require(\"./correlation_context/EntryValue\"));\n__export(require(\"./metrics/Metric\"));\n__export(require(\"./metrics/NoopMeter\"));\n__export(require(\"./metrics/NoopMeterProvider\"));\n__export(require(\"./trace/NoopSpan\"));\n__export(require(\"./trace/NoopTracer\"));\n__export(require(\"./trace/NoopTracerProvider\"));\n__export(require(\"./trace/span_kind\"));\n__export(require(\"./trace/status\"));\n__export(require(\"./trace/trace_flags\"));\nvar context_base_1 = require(\"@opentelemetry/context-base\");\nexports.Context = context_base_1.Context;\nconst context_1 = require(\"./api/context\");\n/** Entrypoint for context API */\nexports.context = context_1.ContextAPI.getInstance();\nconst trace_1 = require(\"./api/trace\");\n/** Entrypoint for trace API */\nexports.trace = trace_1.TraceAPI.getInstance();\nconst metrics_1 = require(\"./api/metrics\");\n/** Entrypoint for metrics API */\nexports.metrics = metrics_1.MetricsAPI.getInstance();\nconst propagation_1 = require(\"./api/propagation\");\n/** Entrypoint for propagation API */\nexports.propagation = propagation_1.PropagationAPI.getInstance();\nexports.default = {\n    trace: exports.trace,\n    metrics: exports.metrics,\n    context: exports.context,\n    propagation: exports.propagation,\n};\n//# sourceMappingURL=index.js.map", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { Span, SpanContext, Attributes, Status, TraceFlags } from \"@opentelemetry/api\";\n\n/**\n * A no-op implementation of Span that can safely be used without side-effects.\n */\nexport class NoOpSpan implements Span {\n  /**\n   * Returns the SpanContext associated with this Span.\n   */\n  context(): SpanContext {\n    return {\n      spanId: \"\",\n      traceId: \"\",\n      traceFlags: TraceFlags.NONE\n    };\n  }\n\n  /**\n   * Marks the end of Span execution.\n   * @param _endTime The time to use as the Span's end time. Defaults to\n   * the current time.\n   */\n  end(_endTime?: number): void {\n    /* Noop */\n  }\n\n  /**\n   * Sets an attribute on the Span\n   * @param _key the attribute key\n   * @param _value the attribute value\n   */\n  setAttribute(_key: string, _value: unknown): this {\n    return this;\n  }\n\n  /**\n   * Sets attributes on the Span\n   * @param _attributes the attributes to add\n   */\n  setAttributes(_attributes: Attributes): this {\n    return this;\n  }\n\n  /**\n   * Adds an event to the Span\n   * @param _name The name of the event\n   * @param _attributes The associated attributes to add for this event\n   */\n  addEvent(_name: string, _attributes?: Attributes): this {\n    return this;\n  }\n\n  /**\n   * Sets a status on the span. Overrides the default of CanonicalCode.OK.\n   * @param _status The status to set.\n   */\n  setStatus(_status: Status): this {\n    return this;\n  }\n\n  /**\n   * Updates the name of the Span\n   * @param _name the new Span name\n   */\n  updateName(_name: string): this {\n    return this;\n  }\n\n  /**\n   * Returns whether this span will be recorded\n   */\n  isRecording(): boolean {\n    return false;\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { NoOpSpan } from \"./noOpSpan\";\nimport { Tracer, Span, SpanOptions } from \"@opentelemetry/api\";\n\n/**\n * A no-op implementation of Tracer that can be used when tracing\n * is disabled.\n */\nexport class NoOpTracer implements Tracer {\n  /**\n   * Starts a new Span.\n   * @param _name The name of the span.\n   * @param _options The SpanOptions used during Span creation.\n   */\n  startSpan(_name: string, _options?: SpanOptions): Span {\n    return new NoOpSpan();\n  }\n\n  /**\n   * Returns the current Span from the current context, if available.\n   */\n  getCurrentSpan(): Span {\n    return new NoOpSpan();\n  }\n\n  /**\n   * Executes the given function within the context provided by a Span.\n   * @param _span The span that provides the context.\n   * @param fn The function to be executed.\n   */\n  withSpan<T extends (...args: unknown[]) => ReturnType<T>>(_span: Span, fn: T): ReturnType<T> {\n    return fn();\n  }\n\n  /**\n   * Bind a Span as the target's scope\n   * @param target An object to bind the scope.\n   * @param _span A specific Span to use. Otherwise, use the current one.\n   */\n  bind<T>(target: T, _span?: Span): T {\n    return target;\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nexport function getGlobalObject(): any {\n  return global;\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { Tracer } from \"@opentelemetry/api\";\nimport { getGlobalObject } from \"./global\";\n\n// V1 = OpenTelemetry 0.1\n// V2 = OpenTelemetry 0.2\n// V3 = OpenTelemetry 0.6.1\nconst GLOBAL_TRACER_VERSION = 3;\n// preview5 shipped with @azure/core-tracing.tracerCache\n// and didn't have smart detection for collisions\nconst GLOBAL_TRACER_SYMBOL = Symbol.for(\"@azure/core-tracing.tracerCache2\");\n\nexport interface TracerCache {\n  version: number;\n  tracer?: Tracer;\n}\n\nlet cache: TracerCache;\n\nfunction loadTracerCache(): void {\n  const globalObj = getGlobalObject();\n  const existingCache: TracerCache = globalObj[GLOBAL_TRACER_SYMBOL];\n  let setGlobalCache = true;\n  if (existingCache) {\n    if (existingCache.version === GLOBAL_TRACER_VERSION) {\n      cache = existingCache;\n    } else {\n      setGlobalCache = false;\n      if (existingCache.tracer) {\n        throw new Error(\n          `Two incompatible versions of @azure/core-tracing have been loaded.\n          This library is ${GLOBAL_TRACER_VERSION}, existing is ${existingCache.version}.`\n        );\n      }\n    }\n  }\n\n  if (!cache) {\n    cache = {\n      tracer: undefined,\n      version: GLOBAL_TRACER_VERSION\n    };\n  }\n  if (setGlobalCache) {\n    globalObj[GLOBAL_TRACER_SYMBOL] = cache;\n  }\n}\n\nexport function getCache(): TracerCache {\n  if (!cache) {\n    loadTracerCache();\n  }\n  return cache;\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { NoOpTracer } from \"./tracers/noop/noOpTracer\";\nimport { Tracer } from \"@opentelemetry/api\";\nimport { getCache } from \"./utils/cache\";\n\nlet defaultTracer: Tracer;\n\nfunction getDefaultTracer(): Tracer {\n  if (!defaultTracer) {\n    defaultTracer = new NoOpTracer();\n  }\n  return defaultTracer;\n}\n\n/**\n * Sets the global tracer, enabling tracing for the Azure SDK.\n * @param tracer An OpenTelemetry Tracer instance.\n */\nexport function setTracer(tracer: Tracer) {\n  const cache = getCache();\n  cache.tracer = tracer;\n}\n\n/**\n * Retrieves the active tracer, or returns a\n * no-op implementation if one is not set.\n */\nexport function getTracer() {\n  const cache = getCache();\n  if (!cache.tracer) {\n    return getDefaultTracer();\n  }\n  return cache.tracer;\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { TraceState } from \"@opentelemetry/api\";\n\n/**\n * @ignore\n * @internal\n */\nexport class OpenCensusTraceStateWrapper implements TraceState {\n  private readonly _state?: string;\n\n  constructor(state?: string) {\n    this._state = state;\n  }\n\n  get(_key: string): string | undefined {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  set(_key: string, _value: string): void {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  unset(_key: string): void {\n    throw new Error(\"Method not implemented\");\n  }\n\n  serialize(): string {\n    return this._state || \"\";\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { SpanContext, Span, SpanOptions, Attributes, Status, TraceFlags } from \"@opentelemetry/api\";\nimport { OpenCensusTraceStateWrapper } from \"./openCensusTraceStateWrapper\";\nimport { OpenCensusTracerWrapper } from \"./openCensusTracerWrapper\";\nimport { Attributes as OpenCensusAttributes, Span as OpenCensusSpan } from \"@opencensus/web-types\";\n\nfunction isWrappedSpan(span?: Span | SpanContext | null): span is OpenCensusSpanWrapper {\n  return !!span && (span as OpenCensusSpanWrapper).getWrappedSpan !== undefined;\n}\n\nfunction isTracer(\n  tracerOrSpan: OpenCensusTracerWrapper | OpenCensusSpan\n): tracerOrSpan is OpenCensusTracerWrapper {\n  return (tracerOrSpan as OpenCensusTracerWrapper).getWrappedTracer !== undefined;\n}\n\n/**\n * An implementation of OpenTelemetry Span that wraps an OpenCensus Span.\n */\nexport class OpenCensusSpanWrapper implements Span {\n  private _span: OpenCensusSpan;\n\n  /**\n   * The underlying OpenCensus Span\n   */\n  public getWrappedSpan() {\n    return this._span;\n  }\n\n  /**\n   * Wraps an existing OpenCensus Span\n   * @param span A Span or RootSpan from OpenCensus\n   */\n  constructor(span: OpenCensusSpan);\n  /**\n   * Create a new OpenCensus Span and wrap it.\n   * @param tracer The OpenCensus tracer that has been wrapped in OpenCensusTracerWrapper\n   * @param name The name of the Span\n   * @param options Options for the Span\n   */\n  constructor(tracer: OpenCensusTracerWrapper, name: string, options?: SpanOptions);\n  constructor(\n    tracerOrSpan: OpenCensusTracerWrapper | OpenCensusSpan,\n    name: string = \"\",\n    options: SpanOptions = {}\n  ) {\n    if (isTracer(tracerOrSpan)) {\n      const parent = isWrappedSpan(options.parent) ? options.parent.getWrappedSpan() : undefined;\n      this._span = tracerOrSpan.getWrappedTracer().startChildSpan({\n        name,\n        childOf: parent\n      });\n      this._span.start();\n      if (options.links) {\n        for (const link of options.links) {\n          // Since there is no way to set the link relationship, leave it as Unspecified.\n          this._span.addLink(\n            link.context.traceId,\n            link.context.spanId,\n            0 /* LinkType.UNSPECIFIED */,\n            link.attributes as OpenCensusAttributes\n          );\n        }\n      }\n    } else {\n      this._span = tracerOrSpan;\n    }\n  }\n\n  /**\n   * Marks the end of Span execution.\n   * @param endTime The time to use as the Span's end time. Defaults to\n   * the current time.\n   */\n  end(_endTime?: number): void {\n    this._span.end();\n  }\n\n  /**\n   * Returns the SpanContext associated with this Span.\n   */\n  context(): SpanContext {\n    const openCensusSpanContext = this._span.spanContext;\n\n    return {\n      spanId: openCensusSpanContext.spanId,\n      traceId: openCensusSpanContext.traceId,\n      traceFlags: openCensusSpanContext.options as TraceFlags,\n      traceState: new OpenCensusTraceStateWrapper(openCensusSpanContext.traceState)\n    };\n  }\n\n  /**\n   * Sets an attribute on the Span\n   * @param key the attribute key\n   * @param value the attribute value\n   */\n  setAttribute(key: string, value: unknown): this {\n    this._span.addAttribute(key, value as any);\n    return this;\n  }\n\n  /**\n   * Sets attributes on the Span\n   * @param attributes the attributes to add\n   */\n  setAttributes(attributes: Attributes): this {\n    this._span.attributes = attributes as OpenCensusAttributes;\n    return this;\n  }\n\n  /**\n   * Adds an event to the Span\n   * @param name The name of the event\n   * @param attributes The associated attributes to add for this event\n   */\n  addEvent(_name: string, _attributes?: Attributes): this {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  /**\n   * Sets a status on the span. Overrides the default of CanonicalCode.OK.\n   * @param status The status to set.\n   */\n  setStatus(status: Status): this {\n    this._span.setStatus(status.code, status.message);\n    return this;\n  }\n\n  /**\n   * Updates the name of the Span\n   * @param name the new Span name\n   */\n  updateName(name: string): this {\n    this._span.name = name;\n    return this;\n  }\n\n  /**\n   * Returns whether this span will be recorded\n   */\n  isRecording(): boolean {\n    // NoRecordSpans have an empty traceId\n    return !!this._span.traceId;\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { Tracer, Span, SpanOptions } from \"@opentelemetry/api\";\nimport { OpenCensusSpanWrapper } from \"./openCensusSpanWrapper\";\nimport { TracerBase as OpenCensusTracer } from \"@opencensus/web-types\";\n\n/**\n * An implementation of OpenTelemetry Tracer that wraps an OpenCensus Tracer.\n */\nexport class OpenCensusTracerWrapper implements Tracer {\n  private _tracer: OpenCensusTracer;\n\n  /**\n   * The wrapped OpenCensus Tracer\n   */\n  public getWrappedTracer() {\n    return this._tracer;\n  }\n\n  /**\n   * Create a new wrapper around a given OpenCensus Tracer.\n   * @param tracer The OpenCensus Tracer to wrap.\n   */\n  public constructor(tracer: OpenCensusTracer) {\n    this._tracer = tracer;\n  }\n\n  /**\n   * Starts a new Span.\n   * @param name The name of the span.\n   * @param options The SpanOptions used during Span creation.\n   */\n  startSpan(name: string, options?: SpanOptions): Span {\n    return new OpenCensusSpanWrapper(this, name, options);\n  }\n\n  /**\n   * Returns the current Span from the current context, if available.\n   */\n  getCurrentSpan(): Span | undefined {\n    return undefined;\n  }\n\n  /**\n   * Executes the given function within the context provided by a Span.\n   * @param _span The span that provides the context.\n   * @param _fn The function to be executed.\n   */\n  withSpan<T extends (...args: unknown[]) => unknown>(_span: Span, _fn: T): ReturnType<T> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  /**\n   * Bind a Span as the target's scope\n   * @param target An object to bind the scope.\n   * @param _span A specific Span to use. Otherwise, use the current one.\n   */\n  bind<T>(_target: T, _span?: Span): T {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport {\n  TimeInput,\n  Tracer,\n  SpanKind,\n  Status,\n  SpanContext,\n  CanonicalCode,\n  Attributes\n} from \"@opentelemetry/api\";\nimport { NoOpSpan } from \"../noop/noOpSpan\";\nimport { TestTracer } from \"./testTracer\";\n\n/**\n * A mock span useful for testing.\n */\nexport class TestSpan extends NoOpSpan {\n  /**\n   * The Span's current name\n   */\n  name: string;\n\n  /**\n   * The Span's current status\n   */\n  status: Status;\n\n  /**\n   * The Span's kind\n   */\n  kind: SpanKind;\n\n  /**\n   * True if end() has been called on the Span\n   */\n  endCalled: boolean;\n\n  /**\n   * The start time of the Span\n   */\n  readonly startTime: TimeInput;\n\n  /**\n   * The id of the parent Span, if any.\n   */\n  readonly parentSpanId?: string;\n\n  /**\n   * Known attributes, if any.\n   */\n  readonly attributes: Attributes;\n\n  private _context: SpanContext;\n  private readonly _tracer: Tracer;\n\n  /**\n   * Starts a new Span.\n   * @param parentTracer The tracer that created this Span\n   * @param name The name of the span.\n   * @param context The SpanContext this span belongs to\n   * @param kind The SpanKind of this Span\n   * @param parentSpanId The identifier of the parent Span\n   * @param startTime The startTime of the event (defaults to now)\n   */\n  constructor(\n    parentTracer: TestTracer,\n    name: string,\n    context: SpanContext,\n    kind: SpanKind,\n    parentSpanId?: string,\n    startTime: TimeInput = Date.now()\n  ) {\n    super();\n    this._tracer = parentTracer;\n    this.name = name;\n    this.kind = kind;\n    this.startTime = startTime;\n    this.parentSpanId = parentSpanId;\n    this.status = {\n      code: CanonicalCode.OK\n    };\n    this.endCalled = false;\n    this._context = context;\n    this.attributes = {};\n  }\n\n  /**\n   * Returns the Tracer that created this Span\n   */\n  tracer(): Tracer {\n    return this._tracer;\n  }\n\n  /**\n   * Returns the SpanContext associated with this Span.\n   */\n  context(): SpanContext {\n    return this._context;\n  }\n\n  /**\n   * Marks the end of Span execution.\n   * @param _endTime The time to use as the Span's end time. Defaults to\n   * the current time.\n   */\n  end(_endTime?: number): void {\n    this.endCalled = true;\n  }\n\n  /**\n   * Sets a status on the span. Overrides the default of CanonicalCode.OK.\n   * @param status The status to set.\n   */\n  setStatus(status: Status): this {\n    this.status = status;\n    return this;\n  }\n\n  /**\n   * Returns whether this span will be recorded\n   */\n  isRecording(): boolean {\n    return true;\n  }\n\n  /**\n   * Sets an attribute on the Span\n   * @param key the attribute key\n   * @param value the attribute value\n   */\n  setAttribute(key: string, value: unknown): this {\n    this.attributes[key] = value;\n    return this;\n  }\n\n  /**\n   * Sets attributes on the Span\n   * @param attributes the attributes to add\n   */\n  setAttributes(attributes: Attributes): this {\n    for (const key of Object.keys(attributes)) {\n      this.attributes[key] = attributes[key];\n    }\n    return this;\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { TestSpan } from \"./testSpan\";\nimport { NoOpTracer } from \"../noop/noOpTracer\";\nimport { SpanContext, SpanKind, SpanOptions, TraceFlags } from \"@opentelemetry/api\";\n\n/**\n * Simple representation of a Span that only has name and child relationships.\n * Children should be arranged in the order they were created.\n */\nexport interface SpanGraphNode {\n  /**\n   * The Span name\n   */\n  name: string;\n  /**\n   * All child Spans of this Span\n   */\n  children: SpanGraphNode[];\n}\n\n/**\n * Contains all the spans for a particular TraceID\n * starting at unparented roots\n */\nexport interface SpanGraph {\n  /**\n   * All Spans without a parentSpanId\n   */\n  roots: SpanGraphNode[];\n}\n\n/**\n * A mock tracer useful for testing\n */\nexport class TestTracer extends NoOpTracer {\n  private traceIdCounter = 0;\n  private getNextTraceId(): string {\n    this.traceIdCounter++;\n    return String(this.traceIdCounter);\n  }\n\n  private spanIdCounter = 0;\n  private getNextSpanId(): string {\n    this.spanIdCounter++;\n    return String(this.spanIdCounter);\n  }\n\n  private rootSpans: TestSpan[] = [];\n  private knownSpans: TestSpan[] = [];\n\n  /**\n   * Returns all Spans that were created without a parent\n   */\n  getRootSpans(): TestSpan[] {\n    return this.rootSpans;\n  }\n\n  /**\n   * Returns all Spans this Tracer knows about\n   */\n  getKnownSpans(): TestSpan[] {\n    return this.knownSpans;\n  }\n\n  /**\n   * Returns all Spans where end() has not been called\n   */\n  getActiveSpans(): TestSpan[] {\n    return this.knownSpans.filter((span) => {\n      return !span.endCalled;\n    });\n  }\n\n  /**\n   * Return all Spans for a particular trace, grouped by their\n   * parent Span in a tree-like structure\n   * @param traceId The traceId to return the graph for\n   */\n  getSpanGraph(traceId: string): SpanGraph {\n    const traceSpans = this.knownSpans.filter((span) => {\n      return span.context().traceId === traceId;\n    });\n\n    const roots: SpanGraphNode[] = [];\n    const nodeMap: Map<string, SpanGraphNode> = new Map<string, SpanGraphNode>();\n\n    for (const span of traceSpans) {\n      const spanId = span.context().spanId;\n      const node: SpanGraphNode = {\n        name: span.name,\n        children: []\n      };\n      nodeMap.set(spanId, node);\n      if (span.parentSpanId) {\n        const parent = nodeMap.get(span.parentSpanId);\n        if (!parent) {\n          throw new Error(\n            `Span with name ${node.name} has an unknown parentSpan with id ${span.parentSpanId}`\n          );\n        }\n        parent.children.push(node);\n      } else {\n        roots.push(node);\n      }\n    }\n\n    return {\n      roots\n    };\n  }\n\n  /**\n   * Starts a new Span.\n   * @param name The name of the span.\n   * @param options The SpanOptions used during Span creation.\n   */\n  startSpan(name: string, options: SpanOptions = {}): TestSpan {\n    const parentContext = this._getParentContext(options);\n\n    let traceId: string;\n    let isRootSpan = false;\n\n    if (parentContext && parentContext.traceId) {\n      traceId = parentContext.traceId;\n    } else {\n      traceId = this.getNextTraceId();\n      isRootSpan = true;\n    }\n\n    const context: SpanContext = {\n      traceId,\n      spanId: this.getNextSpanId(),\n      traceFlags: TraceFlags.NONE\n    };\n    const span = new TestSpan(\n      this,\n      name,\n      context,\n      options.kind || SpanKind.INTERNAL,\n      parentContext ? parentContext.spanId : undefined,\n      options.startTime\n    );\n    this.knownSpans.push(span);\n    if (isRootSpan) {\n      this.rootSpans.push(span);\n    }\n    return span;\n  }\n\n  private _getParentContext(options: SpanOptions): SpanContext | undefined {\n    const parent = options.parent;\n    let result: SpanContext | undefined;\n    if (parent) {\n      if (\"traceId\" in parent) {\n        result = parent;\n      } else {\n        result = parent.context();\n      }\n    }\n    return result;\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { SpanContext, TraceFlags } from \"../interfaces\";\n\nconst VERSION = \"00\";\n\n/**\n * Generates a `SpanContext` given a `traceparent` header value.\n * @param traceParent Serialized span context data as a `traceparent` header value.\n * @returns The `SpanContext` generated from the `traceparent` value.\n */\nexport function extractSpanContextFromTraceParentHeader(\n  traceParentHeader: string\n): SpanContext | undefined {\n  const parts = traceParentHeader.split(\"-\");\n\n  if (parts.length !== 4) {\n    return;\n  }\n\n  const [version, traceId, spanId, traceOptions] = parts;\n\n  if (version !== VERSION) {\n    return;\n  }\n\n  const traceFlags = parseInt(traceOptions, 16);\n\n  const spanContext: SpanContext = {\n    spanId,\n    traceId,\n    traceFlags\n  };\n\n  return spanContext;\n}\n\n/**\n * Generates a `traceparent` value given a span context.\n * @param spanContext Contains context for a specific span.\n * @returns The `spanContext` represented as a `traceparent` value.\n */\nexport function getTraceParentHeader(spanContext: SpanContext): string | undefined {\n  const missingFields: string[] = [];\n  if (!spanContext.traceId) {\n    missingFields.push(\"traceId\");\n  }\n  if (!spanContext.spanId) {\n    missingFields.push(\"spanId\");\n  }\n\n  if (missingFields.length) {\n    return;\n  }\n\n  const flags = spanContext.traceFlags || TraceFlags.NONE;\n  const hexFlags = flags.toString(16);\n  const traceFlags = hexFlags.length === 1 ? `0${hexFlags}` : hexFlags;\n\n  // https://www.w3.org/TR/trace-context/#traceparent-header-field-values\n  return `${VERSION}-${spanContext.traceId}-${spanContext.spanId}-${traceFlags}`;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PollOperation, PollOperationState } from \"./pollOperation\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\n\n/**\n * CancelOnProgress is used as the return value of a Poller's onProgress method.\n * When a user invokes onProgress, they're required to pass in a function that will be\n * called as a callback with the new data received each time the poll operation is updated.\n * onProgress returns a function that will prevent any further update to reach the original callback.\n */\nexport type CancelOnProgress = () => void;\n\n/**\n * PollProgressCallback<TState> is the type of the callback functions sent to onProgress.\n * These functions will receive a TState that is defined by your implementation of\n * the Poller class.\n */\nexport type PollProgressCallback<TState> = (state: TState) => void;\n\n/**\n * When a poller is manually stopped through the `stopPolling` method,\n * the poller will be rejected with an instance of the PollerStoppedError.\n */\nexport class PollerStoppedError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PollerStoppedError\";\n    Object.setPrototypeOf(this, PollerStoppedError.prototype);\n  }\n}\n\n/**\n * When a poller is cancelled through the `cancelOperation` method,\n * the poller will be rejected with an instance of the PollerCancelledError.\n */\nexport class PollerCancelledError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PollerCancelledError\";\n    Object.setPrototypeOf(this, PollerCancelledError.prototype);\n  }\n}\n\n/**\n * Abstract representation of a poller, intended to expose just the minimal API that the user needs to work with.\n */\nexport interface PollerLike<TState extends PollOperationState<TResult>, TResult> {\n  /**\n   * Returns a promise that will resolve once a single polling request finishes.\n   * It does this by calling the update method of the Poller's operation.\n   */\n  poll(options?: { abortSignal?: AbortSignalLike }): Promise<void>;\n  /**\n   * Returns a promise that will resolve once the underlying operation is completed.\n   */\n  pollUntilDone(): Promise<TResult>;\n  /**\n   * Invokes the provided callback after each polling is completed,\n   * sending the current state of the poller's operation.\n   *\n   * It returns a method that can be used to stop receiving updates on the given callback function.\n   */\n  onProgress(callback: (state: TState) => void): CancelOnProgress;\n  /**\n   * Returns true if the poller has finished polling.\n   */\n  isDone(): boolean;\n  /**\n   * Stops the poller. After this, no manual or automated requests can be sent.\n   */\n  stopPolling(): void;\n  /**\n   * Returns true if the poller is stopped.\n   */\n  isStopped(): boolean;\n  /**\n   * Attempts to cancel the underlying operation.\n   */\n  cancelOperation(options?: { abortSignal?: AbortSignalLike }): Promise<void>;\n  /**\n   * Returns the state of the operation.\n   * The TState defined in PollerLike can be a subset of the TState defined in\n   * the Poller implementation.\n   */\n  getOperationState(): TState;\n  /**\n   * Returns the result value of the operation,\n   * regardless of the state of the poller.\n   * It can return undefined or an incomplete form of the final TResult value\n   * depending on the implementation.\n   */\n  getResult(): TResult | undefined;\n  /**\n   * Returns a serialized version of the poller's operation\n   * by invoking the operation's toString method.\n   */\n  toString(): string;\n}\n\n/**\n * A class that represents the definition of a program that polls through consecutive requests\n * until it reaches a state of completion.\n *\n * A poller can be executed manually, by polling request by request by calling to the `poll()` method repeatedly, until its operation is completed.\n * It also provides a way to wait until the operation completes, by calling `pollUntilDone()` and waiting until the operation finishes.\n * Pollers can also request the cancellation of the ongoing process to whom is providing the underlying long running operation.\n *\n * ```ts\n * const poller = new MyPoller();\n *\n * // Polling just once:\n * await poller.poll();\n *\n * // We can try to cancel the request here, by calling:\n * //\n * //     await poller.cancelOperation();\n * //\n *\n * // Getting the final result:\n * const result = await poller.pollUntilDone();\n * ```\n *\n * The Poller is defined by two types, a type representing the state of the poller, which\n * must include a basic set of properties from `PollOperationState<TResult>`,\n * and a return type defined by `TResult`, which can be anything.\n *\n * The Poller class implements the `PollerLike` interface, which allows poller implementations to avoid having\n * to export the Poller's class directly, and instead only export the already instantiated poller with the PollerLike type.\n *\n * ```ts\n * class Client {\n *   public async makePoller: PollerLike<MyOperationState, MyResult> {\n *     const poller = new MyPoller({});\n *     // It might be preferred to return the poller after the first request is made,\n *     // so that some information can be obtained right away.\n *     await poller.poll();\n *     return poller;\n *   }\n * }\n *\n * const poller: PollerLike<MyOperationState, MyResult> = myClient.makePoller();\n * ```\n *\n * A poller can be created through its constructor, then it can be polled until it's completed.\n * At any point in time, the state of the poller can be obtained without delay through the getOperationState method.\n * At any point in time, the intermediate forms of the result type can be requested without delay.\n * Once the underlying operation is marked as completed, the poller will stop and the final value will be returned.\n *\n * ```ts\n * const poller = myClient.makePoller();\n * const state: MyOperationState = poller.getOperationState();\n *\n * // The intermediate result can be obtained at any time.\n * const result: MyResult | undefined = poller.getResult();\n *\n * // The final result can only be obtained after the poller finishes.\n * const result: MyResult = await poller.pollUntilDone();\n * ```\n *\n */\nexport abstract class Poller<TState extends PollOperationState<TResult>, TResult>\n  implements PollerLike<TState, TResult> {\n  private stopped: boolean = true;\n  private resolve?: (value?: TResult) => void;\n  private reject?: (error: PollerStoppedError | PollerCancelledError | Error) => void;\n  private pollOncePromise?: Promise<void>;\n  private cancelPromise?: Promise<void>;\n  private promise: Promise<TResult>;\n  private pollProgressCallbacks: PollProgressCallback<TState>[] = [];\n\n  /**\n   * The poller's operation is available in full to any of the methods of the Poller class\n   * and any class extending the Poller class.\n   */\n  protected operation: PollOperation<TState, TResult>;\n\n  /**\n   * A poller needs to be initialized by passing in at least the basic properties of the PollOperation<TState, TResult>.\n   *\n   * When writing an implementation of a Poller, this implementation needs to deal with the initialization\n   * of any custom state beyond the basic definition of the poller. The basic poller assumes that the poller's\n   * operation has already been defined, at least its basic properties. The code below shows how to approach\n   * the definition of the constructor of a new custom poller.\n   *\n   * ```ts\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   constructor({\n   *     // Anything you might need outside of the basics\n   *   }) {\n   *     let state: MyOperationState = {\n   *       privateProperty: private,\n   *       publicProperty: public,\n   *     };\n   *\n   *     const operation = {\n   *       state,\n   *       update,\n   *       cancel,\n   *       toString\n   *     }\n   *\n   *     // Sending the operation to the parent's constructor.\n   *     super(operation);\n   *\n   *     // You can assign more local properties here.\n   *   }\n   * }\n   * ```\n   *\n   * Inside of this constructor, a new promise is created. This will be used to\n   * tell the user when the poller finishes (see `pollUntilDone()`). The promise's\n   * resolve and reject methods are also used internally to control when to resolve\n   * or reject anyone waiting for the poller to finish.\n   *\n   * The constructor of a custom implementation of a poller is where any serialized version of\n   * a previous poller's operation should be deserialized into the operation sent to the\n   * base constructor. For example:\n   *\n   * ```ts\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   constructor(\n   *     baseOperation: string | undefined\n   *   ) {\n   *     let state: MyOperationState = {};\n   *     if (baseOperation) {\n   *       state = {\n   *         ...JSON.parse(baseOperation).state,\n   *         ...state\n   *       };\n   *     }\n   *     const operation = {\n   *       state,\n   *       // ...\n   *     }\n   *     super(operation);\n   *   }\n   * }\n   * ```\n   *\n   * @param operation Must contain the basic properties of PollOperation<State, TResult>.\n   */\n  constructor(operation: PollOperation<TState, TResult>) {\n    this.operation = operation;\n    this.promise = new Promise(\n      (\n        resolve: (result?: TResult) => void,\n        reject: (error: PollerStoppedError | PollerCancelledError | Error) => void\n      ) => {\n        this.resolve = resolve;\n        this.reject = reject;\n      }\n    );\n    // This prevents the UnhandledPromiseRejectionWarning in node.js from being thrown.\n    // The above warning would get thrown if `poller.poll` is called, it returns an error,\n    // and pullUntilDone did not have a .catch or await try/catch on it's return value.\n    this.promise.catch(() => {});\n  }\n\n  /**\n   * Defines how much to wait between each poll request.\n   * This has to be implemented by your custom poller.\n   *\n   * @azure/core-http has a simple implementation of a delay function that waits as many milliseconds as specified.\n   * This can be used as follows:\n   *\n   * ```ts\n   * import { delay } from \"@azure/core-http\";\n   *\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   // The other necessary definitions.\n   *\n   *   async delay(): Promise<void> {\n   *     const milliseconds = 1000;\n   *     return delay(milliseconds);\n   *   }\n   * }\n   * ```\n   *\n   */\n  protected abstract async delay(): Promise<void>;\n\n  /**\n   * @internal\n   * @ignore\n   * Starts a loop that will break only if the poller is done\n   * or if the poller is stopped.\n   */\n  private async startPolling(): Promise<void> {\n    if (this.stopped) {\n      this.stopped = false;\n    }\n    while (!this.isStopped() && !this.isDone()) {\n      await this.poll();\n      await this.delay();\n    }\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * pollOnce does one polling, by calling to the update method of the underlying\n   * poll operation to make any relevant change effective.\n   *\n   * It only optionally receives an object with an abortSignal property, from @azure/abort-controller's AbortSignalLike.\n   *\n   * @param options Optional properties passed to the operation's update method.\n   */\n  private async pollOnce(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    const state: PollOperationState<TResult> = this.operation.state;\n    try {\n      if (!this.isDone()) {\n        this.operation = await this.operation.update({\n          abortSignal: options.abortSignal,\n          fireProgress: this.fireProgress.bind(this)\n        });\n        if (this.isDone() && this.resolve) {\n          this.resolve(state.result);\n        }\n      }\n    } catch (e) {\n      state.error = e;\n      if (this.reject) {\n        this.reject(e);\n      }\n      throw e;\n    }\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * fireProgress calls the functions passed in via onProgress the method of the poller.\n   *\n   * It loops over all of the callbacks received from onProgress, and executes them, sending them\n   * the current operation state.\n   *\n   * @param state The current operation state.\n   */\n  private fireProgress(state: TState): void {\n    for (const callback of this.pollProgressCallbacks) {\n      callback(state);\n    }\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Invokes the underlying operation's cancel method, and rejects the\n   * pollUntilDone promise.\n   */\n  private async cancelOnce(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    this.operation = await this.operation.cancel(options);\n    if (this.reject) {\n      this.reject(new PollerCancelledError(\"Poller cancelled\"));\n    }\n  }\n\n  /**\n   * Returns a promise that will resolve once a single polling request finishes.\n   * It does this by calling the update method of the Poller's operation.\n   *\n   * It only optionally receives an object with an abortSignal property, from @azure/abort-controller's AbortSignalLike.\n   *\n   * @param options Optional properties passed to the operation's update method.\n   */\n  public poll(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (!this.pollOncePromise) {\n      this.pollOncePromise = this.pollOnce(options);\n      const clearPollOncePromise = (): void => {\n        this.pollOncePromise = undefined;\n      };\n      this.pollOncePromise.then(clearPollOncePromise, clearPollOncePromise);\n    }\n    return this.pollOncePromise;\n  }\n\n  /**\n   * Returns a promise that will resolve once the underlying operation is completed.\n   */\n  public async pollUntilDone(): Promise<TResult> {\n    if (this.stopped) {\n      this.startPolling().catch(this.reject);\n    }\n    return this.promise;\n  }\n\n  /**\n   * Invokes the provided callback after each polling is completed,\n   * sending the current state of the poller's operation.\n   *\n   * It returns a method that can be used to stop receiving updates on the given callback function.\n   */\n  public onProgress(callback: (state: TState) => void): CancelOnProgress {\n    this.pollProgressCallbacks.push(callback);\n    return (): void => {\n      this.pollProgressCallbacks = this.pollProgressCallbacks.filter((c) => c !== callback);\n    };\n  }\n\n  /**\n   * Returns true if the poller has finished polling.\n   */\n  public isDone(): boolean {\n    const state: PollOperationState<TResult> = this.operation.state;\n    return Boolean(state.isCompleted || state.isCancelled || state.error);\n  }\n\n  /**\n   * Stops the poller from continuing to poll.\n   */\n  public stopPolling(): void {\n    if (!this.stopped) {\n      this.stopped = true;\n      if (this.reject) {\n        this.reject(new PollerStoppedError(\"This poller is already stopped\"));\n      }\n    }\n  }\n\n  /**\n   * Returns true if the poller is stopped.\n   */\n  public isStopped(): boolean {\n    return this.stopped;\n  }\n\n  /**\n   * Attempts to cancel the underlying operation.\n   *\n   * It only optionally receives an object with an abortSignal property, from @azure/abort-controller's AbortSignalLike.\n   *\n   * If it's called again before it finishes, it will throw an error.\n   *\n   * @param options Optional properties passed to the operation's update method.\n   */\n  public cancelOperation(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (!this.stopped) {\n      this.stopped = true;\n    }\n    if (!this.cancelPromise) {\n      this.cancelPromise = this.cancelOnce(options);\n    } else if (options.abortSignal) {\n      throw new Error(\"A cancel request is currently pending\");\n    }\n    return this.cancelPromise;\n  }\n\n  /**\n   * Returns the state of the operation.\n   *\n   * Even though TState will be the same type inside any of the methods of any extension of the Poller class,\n   * implementations of the pollers can customize what's shared with the public by writing their own\n   * version of the `getOperationState` method, and by defining two types, one representing the internal state of the poller\n   * and a public type representing a safe to share subset of the properties of the internal state.\n   * Their definition of getOperationState can then return their public type.\n   *\n   * Example:\n   *\n   * ```ts\n   * // Let's say we have our poller's operation state defined as:\n   * interface MyOperationState extends PollOperationState<ResultType> {\n   *   privateProperty?: string;\n   *   publicProperty?: string;\n   * }\n   *\n   * // To allow us to have a true separation of public and private state, we have to define another interface:\n   * interface PublicState extends PollOperationState<ResultType> {\n   *   publicProperty?: string;\n   * }\n   *\n   * // Then, we define our Poller as follows:\n   * export class MyPoller extends Poller<MyOperationState, ResultType> {\n   *   // ... More content is needed here ...\n   *\n   *   public getOperationState(): PublicState {\n   *     const state: PublicState = this.operation.state;\n   *     return {\n   *       // Properties from PollOperationState<TResult>\n   *       isStarted: state.isStarted,\n   *       isCompleted: state.isCompleted,\n   *       isCancelled: state.isCancelled,\n   *       error: state.error,\n   *       result: state.result,\n   *\n   *       // The only other property needed by PublicState.\n   *       publicProperty: state.publicProperty\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * You can see this in the tests of this repository, go to the file:\n   * `../test/utils/testPoller.ts`\n   * and look for the getOperationState implementation.\n   */\n  public getOperationState(): TState {\n    return this.operation.state;\n  }\n\n  /**\n   * Returns the result value of the operation,\n   * regardless of the state of the poller.\n   * It can return undefined or an incomplete form of the final TResult value\n   * depending on the implementation.\n   */\n  public getResult(): TResult | undefined {\n    const state: PollOperationState<TResult> = this.operation.state;\n    return state.result;\n  }\n\n  /**\n   * Returns a serialized version of the poller's operation\n   * by invoking the operation's toString method.\n   */\n  public toString(): string {\n    return this.operation.toString();\n  }\n}\n", "\"use strict\";\nif (typeof Symbol === undefined || !Symbol.asyncIterator) {\n    Symbol.asyncIterator = Symbol.for(\"Symbol.asyncIterator\");\n}\n//# sourceMappingURL=index.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"@azure/core-asynciterator-polyfill\");\n", "/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\n\nexport const KeyInfo: coreHttp.CompositeMapper = {\n  serializedName: \"KeyInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"KeyInfo\",\n    modelProperties: {\n      startsOn: {\n        xmlName: \"Start\",\n        required: true,\n        serializedName: \"Start\",\n        type: {\n          name: \"String\"\n        }\n      },\n      expiresOn: {\n        xmlName: \"Expiry\",\n        required: true,\n        serializedName: \"Expiry\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UserDelegationKey: coreHttp.CompositeMapper = {\n  serializedName: \"UserDelegationKey\",\n  type: {\n    name: \"Composite\",\n    className: \"UserDelegationKey\",\n    modelProperties: {\n      signedObjectId: {\n        xmlName: \"SignedOid\",\n        required: true,\n        serializedName: \"SignedOid\",\n        type: {\n          name: \"String\"\n        }\n      },\n      signedTenantId: {\n        xmlName: \"SignedTid\",\n        required: true,\n        serializedName: \"SignedTid\",\n        type: {\n          name: \"String\"\n        }\n      },\n      signedStartsOn: {\n        xmlName: \"SignedStart\",\n        required: true,\n        serializedName: \"SignedStart\",\n        type: {\n          name: \"String\"\n        }\n      },\n      signedExpiresOn: {\n        xmlName: \"SignedExpiry\",\n        required: true,\n        serializedName: \"SignedExpiry\",\n        type: {\n          name: \"String\"\n        }\n      },\n      signedService: {\n        xmlName: \"SignedService\",\n        required: true,\n        serializedName: \"SignedService\",\n        type: {\n          name: \"String\"\n        }\n      },\n      signedVersion: {\n        xmlName: \"SignedVersion\",\n        required: true,\n        serializedName: \"SignedVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        xmlName: \"Value\",\n        required: true,\n        serializedName: \"Value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageError: coreHttp.CompositeMapper = {\n  serializedName: \"StorageError\",\n  type: {\n    name: \"Composite\",\n    className: \"StorageError\",\n    modelProperties: {\n      message: {\n        xmlName: \"Message\",\n        serializedName: \"Message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataLakeStorageErrorError: coreHttp.CompositeMapper = {\n  serializedName: \"DataLakeStorageError_error\",\n  type: {\n    name: \"Composite\",\n    className: \"DataLakeStorageErrorError\",\n    modelProperties: {\n      code: {\n        xmlName: \"Code\",\n        serializedName: \"Code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        xmlName: \"Message\",\n        serializedName: \"Message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataLakeStorageError: coreHttp.CompositeMapper = {\n  serializedName: \"DataLakeStorageError\",\n  type: {\n    name: \"Composite\",\n    className: \"DataLakeStorageError\",\n    modelProperties: {\n      error: {\n        xmlName: \"error\",\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"DataLakeStorageErrorError\"\n        }\n      }\n    }\n  }\n};\n\nexport const AccessPolicy: coreHttp.CompositeMapper = {\n  serializedName: \"AccessPolicy\",\n  type: {\n    name: \"Composite\",\n    className: \"AccessPolicy\",\n    modelProperties: {\n      startsOn: {\n        xmlName: \"Start\",\n        serializedName: \"Start\",\n        type: {\n          name: \"String\"\n        }\n      },\n      expiresOn: {\n        xmlName: \"Expiry\",\n        serializedName: \"Expiry\",\n        type: {\n          name: \"String\"\n        }\n      },\n      permissions: {\n        xmlName: \"Permission\",\n        serializedName: \"Permission\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobProperties: coreHttp.CompositeMapper = {\n  xmlName: \"Properties\",\n  serializedName: \"BlobProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobProperties\",\n    modelProperties: {\n      createdOn: {\n        xmlName: \"Creation-Time\",\n        serializedName: \"Creation-Time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      lastModified: {\n        xmlName: \"Last-Modified\",\n        required: true,\n        serializedName: \"Last-Modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        xmlName: \"Etag\",\n        required: true,\n        serializedName: \"Etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLength: {\n        xmlName: \"Content-Length\",\n        serializedName: \"Content-Length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contentType: {\n        xmlName: \"Content-Type\",\n        serializedName: \"Content-Type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentEncoding: {\n        xmlName: \"Content-Encoding\",\n        serializedName: \"Content-Encoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        xmlName: \"Content-Language\",\n        serializedName: \"Content-Language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        xmlName: \"Content-MD5\",\n        serializedName: \"Content-MD5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      contentDisposition: {\n        xmlName: \"Content-Disposition\",\n        serializedName: \"Content-Disposition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheControl: {\n        xmlName: \"Cache-Control\",\n        serializedName: \"Cache-Control\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobSequenceNumber: {\n        xmlName: \"x-ms-blob-sequence-number\",\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      blobType: {\n        xmlName: \"BlobType\",\n        serializedName: \"BlobType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"BlockBlob\",\n            \"PageBlob\",\n            \"AppendBlob\"\n          ]\n        }\n      },\n      leaseStatus: {\n        xmlName: \"LeaseStatus\",\n        serializedName: \"LeaseStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"locked\",\n            \"unlocked\"\n          ]\n        }\n      },\n      leaseState: {\n        xmlName: \"LeaseState\",\n        serializedName: \"LeaseState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseDuration: {\n        xmlName: \"LeaseDuration\",\n        serializedName: \"LeaseDuration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"infinite\",\n            \"fixed\"\n          ]\n        }\n      },\n      copyId: {\n        xmlName: \"CopyId\",\n        serializedName: \"CopyId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        xmlName: \"CopyStatus\",\n        serializedName: \"CopyStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"pending\",\n            \"success\",\n            \"aborted\",\n            \"failed\"\n          ]\n        }\n      },\n      copySource: {\n        xmlName: \"CopySource\",\n        serializedName: \"CopySource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyProgress: {\n        xmlName: \"CopyProgress\",\n        serializedName: \"CopyProgress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyCompletedOn: {\n        xmlName: \"CopyCompletionTime\",\n        serializedName: \"CopyCompletionTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyStatusDescription: {\n        xmlName: \"CopyStatusDescription\",\n        serializedName: \"CopyStatusDescription\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverEncrypted: {\n        xmlName: \"ServerEncrypted\",\n        serializedName: \"ServerEncrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      incrementalCopy: {\n        xmlName: \"IncrementalCopy\",\n        serializedName: \"IncrementalCopy\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      destinationSnapshot: {\n        xmlName: \"DestinationSnapshot\",\n        serializedName: \"DestinationSnapshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deletedOn: {\n        xmlName: \"DeletedTime\",\n        serializedName: \"DeletedTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      remainingRetentionDays: {\n        xmlName: \"RemainingRetentionDays\",\n        serializedName: \"RemainingRetentionDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      accessTier: {\n        xmlName: \"AccessTier\",\n        serializedName: \"AccessTier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessTierInferred: {\n        xmlName: \"AccessTierInferred\",\n        serializedName: \"AccessTierInferred\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      archiveStatus: {\n        xmlName: \"ArchiveStatus\",\n        serializedName: \"ArchiveStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      customerProvidedKeySha256: {\n        xmlName: \"CustomerProvidedKeySha256\",\n        serializedName: \"CustomerProvidedKeySha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        xmlName: \"EncryptionScope\",\n        serializedName: \"EncryptionScope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessTierChangedOn: {\n        xmlName: \"AccessTierChangeTime\",\n        serializedName: \"AccessTierChangeTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobItem: coreHttp.CompositeMapper = {\n  xmlName: \"Blob\",\n  serializedName: \"BlobItem\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobItem\",\n    modelProperties: {\n      name: {\n        xmlName: \"Name\",\n        required: true,\n        serializedName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deleted: {\n        xmlName: \"Deleted\",\n        required: true,\n        serializedName: \"Deleted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      snapshot: {\n        xmlName: \"Snapshot\",\n        required: true,\n        serializedName: \"Snapshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        xmlName: \"Properties\",\n        required: true,\n        serializedName: \"Properties\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobProperties\"\n        }\n      },\n      metadata: {\n        xmlName: \"Metadata\",\n        serializedName: \"Metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const BlobFlatListSegment: coreHttp.CompositeMapper = {\n  xmlName: \"Blobs\",\n  serializedName: \"BlobFlatListSegment\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobFlatListSegment\",\n    modelProperties: {\n      blobItems: {\n        xmlName: \"BlobItems\",\n        xmlElementName: \"Blob\",\n        required: true,\n        serializedName: \"BlobItems\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ListBlobsFlatSegmentResponse: coreHttp.CompositeMapper = {\n  xmlName: \"EnumerationResults\",\n  serializedName: \"ListBlobsFlatSegmentResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"ListBlobsFlatSegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        xmlIsAttribute: true,\n        xmlName: \"ServiceEndpoint\",\n        required: true,\n        serializedName: \"ServiceEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      containerName: {\n        xmlIsAttribute: true,\n        xmlName: \"ContainerName\",\n        required: true,\n        serializedName: \"ContainerName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      prefix: {\n        xmlName: \"Prefix\",\n        serializedName: \"Prefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      marker: {\n        xmlName: \"Marker\",\n        serializedName: \"Marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxPageSize: {\n        xmlName: \"MaxResults\",\n        serializedName: \"MaxResults\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      segment: {\n        xmlName: \"Blobs\",\n        required: true,\n        serializedName: \"Segment\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobFlatListSegment\"\n        }\n      },\n      continuationToken: {\n        xmlName: \"NextMarker\",\n        serializedName: \"NextMarker\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobPrefix: coreHttp.CompositeMapper = {\n  serializedName: \"BlobPrefix\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobPrefix\",\n    modelProperties: {\n      name: {\n        xmlName: \"Name\",\n        required: true,\n        serializedName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobHierarchyListSegment: coreHttp.CompositeMapper = {\n  xmlName: \"Blobs\",\n  serializedName: \"BlobHierarchyListSegment\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobHierarchyListSegment\",\n    modelProperties: {\n      blobPrefixes: {\n        xmlName: \"BlobPrefixes\",\n        xmlElementName: \"BlobPrefix\",\n        serializedName: \"BlobPrefixes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobPrefix\"\n            }\n          }\n        }\n      },\n      blobItems: {\n        xmlName: \"BlobItems\",\n        xmlElementName: \"Blob\",\n        required: true,\n        serializedName: \"BlobItems\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BlobItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ListBlobsHierarchySegmentResponse: coreHttp.CompositeMapper = {\n  xmlName: \"EnumerationResults\",\n  serializedName: \"ListBlobsHierarchySegmentResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"ListBlobsHierarchySegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        xmlIsAttribute: true,\n        xmlName: \"ServiceEndpoint\",\n        required: true,\n        serializedName: \"ServiceEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      containerName: {\n        xmlIsAttribute: true,\n        xmlName: \"ContainerName\",\n        required: true,\n        serializedName: \"ContainerName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      prefix: {\n        xmlName: \"Prefix\",\n        serializedName: \"Prefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      marker: {\n        xmlName: \"Marker\",\n        serializedName: \"Marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxPageSize: {\n        xmlName: \"MaxResults\",\n        serializedName: \"MaxResults\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      delimiter: {\n        xmlName: \"Delimiter\",\n        serializedName: \"Delimiter\",\n        type: {\n          name: \"String\"\n        }\n      },\n      segment: {\n        xmlName: \"Blobs\",\n        required: true,\n        serializedName: \"Segment\",\n        type: {\n          name: \"Composite\",\n          className: \"BlobHierarchyListSegment\"\n        }\n      },\n      continuationToken: {\n        xmlName: \"NextMarker\",\n        serializedName: \"NextMarker\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Block: coreHttp.CompositeMapper = {\n  serializedName: \"Block\",\n  type: {\n    name: \"Composite\",\n    className: \"Block\",\n    modelProperties: {\n      name: {\n        xmlName: \"Name\",\n        required: true,\n        serializedName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      size: {\n        xmlName: \"Size\",\n        required: true,\n        serializedName: \"Size\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockList: coreHttp.CompositeMapper = {\n  serializedName: \"BlockList\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockList\",\n    modelProperties: {\n      committedBlocks: {\n        xmlIsWrapped: true,\n        xmlName: \"CommittedBlocks\",\n        xmlElementName: \"Block\",\n        serializedName: \"CommittedBlocks\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Block\"\n            }\n          }\n        }\n      },\n      uncommittedBlocks: {\n        xmlIsWrapped: true,\n        xmlName: \"UncommittedBlocks\",\n        xmlElementName: \"Block\",\n        serializedName: \"UncommittedBlocks\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Block\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const BlockLookupList: coreHttp.CompositeMapper = {\n  xmlName: \"BlockList\",\n  serializedName: \"BlockLookupList\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockLookupList\",\n    modelProperties: {\n      committed: {\n        xmlName: \"Committed\",\n        xmlElementName: \"Committed\",\n        serializedName: \"Committed\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      uncommitted: {\n        xmlName: \"Uncommitted\",\n        xmlElementName: \"Uncommitted\",\n        serializedName: \"Uncommitted\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      latest: {\n        xmlName: \"Latest\",\n        xmlElementName: \"Latest\",\n        serializedName: \"Latest\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerProperties: coreHttp.CompositeMapper = {\n  serializedName: \"ContainerProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerProperties\",\n    modelProperties: {\n      lastModified: {\n        xmlName: \"Last-Modified\",\n        required: true,\n        serializedName: \"Last-Modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        xmlName: \"Etag\",\n        required: true,\n        serializedName: \"Etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseStatus: {\n        xmlName: \"LeaseStatus\",\n        serializedName: \"LeaseStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"locked\",\n            \"unlocked\"\n          ]\n        }\n      },\n      leaseState: {\n        xmlName: \"LeaseState\",\n        serializedName: \"LeaseState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseDuration: {\n        xmlName: \"LeaseDuration\",\n        serializedName: \"LeaseDuration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"infinite\",\n            \"fixed\"\n          ]\n        }\n      },\n      publicAccess: {\n        xmlName: \"PublicAccess\",\n        serializedName: \"PublicAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hasImmutabilityPolicy: {\n        xmlName: \"HasImmutabilityPolicy\",\n        serializedName: \"HasImmutabilityPolicy\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      hasLegalHold: {\n        xmlName: \"HasLegalHold\",\n        serializedName: \"HasLegalHold\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      defaultEncryptionScope: {\n        xmlName: \"DefaultEncryptionScope\",\n        serializedName: \"DefaultEncryptionScope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      preventEncryptionScopeOverride: {\n        xmlName: \"DenyEncryptionScopeOverride\",\n        serializedName: \"DenyEncryptionScopeOverride\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerItem: coreHttp.CompositeMapper = {\n  xmlName: \"Container\",\n  serializedName: \"ContainerItem\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerItem\",\n    modelProperties: {\n      name: {\n        xmlName: \"Name\",\n        required: true,\n        serializedName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        xmlName: \"Properties\",\n        required: true,\n        serializedName: \"Properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerProperties\"\n        }\n      },\n      metadata: {\n        xmlName: \"Metadata\",\n        serializedName: \"Metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ListContainersSegmentResponse: coreHttp.CompositeMapper = {\n  xmlName: \"EnumerationResults\",\n  serializedName: \"ListContainersSegmentResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"ListContainersSegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        xmlIsAttribute: true,\n        xmlName: \"ServiceEndpoint\",\n        required: true,\n        serializedName: \"ServiceEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      prefix: {\n        xmlName: \"Prefix\",\n        serializedName: \"Prefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      marker: {\n        xmlName: \"Marker\",\n        serializedName: \"Marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxPageSize: {\n        xmlName: \"MaxResults\",\n        serializedName: \"MaxResults\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      containerItems: {\n        xmlIsWrapped: true,\n        xmlName: \"Containers\",\n        xmlElementName: \"Container\",\n        required: true,\n        serializedName: \"ContainerItems\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ContainerItem\"\n            }\n          }\n        }\n      },\n      continuationToken: {\n        xmlName: \"NextMarker\",\n        serializedName: \"NextMarker\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CorsRule: coreHttp.CompositeMapper = {\n  serializedName: \"CorsRule\",\n  type: {\n    name: \"Composite\",\n    className: \"CorsRule\",\n    modelProperties: {\n      allowedOrigins: {\n        xmlName: \"AllowedOrigins\",\n        required: true,\n        serializedName: \"AllowedOrigins\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowedMethods: {\n        xmlName: \"AllowedMethods\",\n        required: true,\n        serializedName: \"AllowedMethods\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowedHeaders: {\n        xmlName: \"AllowedHeaders\",\n        required: true,\n        serializedName: \"AllowedHeaders\",\n        type: {\n          name: \"String\"\n        }\n      },\n      exposedHeaders: {\n        xmlName: \"ExposedHeaders\",\n        required: true,\n        serializedName: \"ExposedHeaders\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxAgeInSeconds: {\n        xmlName: \"MaxAgeInSeconds\",\n        required: true,\n        serializedName: \"MaxAgeInSeconds\",\n        constraints: {\n          InclusiveMinimum: 0\n        },\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const GeoReplication: coreHttp.CompositeMapper = {\n  serializedName: \"GeoReplication\",\n  type: {\n    name: \"Composite\",\n    className: \"GeoReplication\",\n    modelProperties: {\n      status: {\n        xmlName: \"Status\",\n        required: true,\n        serializedName: \"Status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastSyncOn: {\n        xmlName: \"LastSyncTime\",\n        required: true,\n        serializedName: \"LastSyncTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const RetentionPolicy: coreHttp.CompositeMapper = {\n  serializedName: \"RetentionPolicy\",\n  type: {\n    name: \"Composite\",\n    className: \"RetentionPolicy\",\n    modelProperties: {\n      enabled: {\n        xmlName: \"Enabled\",\n        required: true,\n        serializedName: \"Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      days: {\n        xmlName: \"Days\",\n        serializedName: \"Days\",\n        constraints: {\n          InclusiveMinimum: 1\n        },\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Logging: coreHttp.CompositeMapper = {\n  serializedName: \"Logging\",\n  type: {\n    name: \"Composite\",\n    className: \"Logging\",\n    modelProperties: {\n      version: {\n        xmlName: \"Version\",\n        required: true,\n        serializedName: \"Version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deleteProperty: {\n        xmlName: \"Delete\",\n        required: true,\n        serializedName: \"Delete\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      read: {\n        xmlName: \"Read\",\n        required: true,\n        serializedName: \"Read\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      write: {\n        xmlName: \"Write\",\n        required: true,\n        serializedName: \"Write\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      retentionPolicy: {\n        xmlName: \"RetentionPolicy\",\n        required: true,\n        serializedName: \"RetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const Metrics: coreHttp.CompositeMapper = {\n  serializedName: \"Metrics\",\n  type: {\n    name: \"Composite\",\n    className: \"Metrics\",\n    modelProperties: {\n      version: {\n        xmlName: \"Version\",\n        serializedName: \"Version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enabled: {\n        xmlName: \"Enabled\",\n        required: true,\n        serializedName: \"Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      includeAPIs: {\n        xmlName: \"IncludeAPIs\",\n        serializedName: \"IncludeAPIs\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      retentionPolicy: {\n        xmlName: \"RetentionPolicy\",\n        serializedName: \"RetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageRange: coreHttp.CompositeMapper = {\n  serializedName: \"PageRange\",\n  type: {\n    name: \"Composite\",\n    className: \"PageRange\",\n    modelProperties: {\n      start: {\n        xmlName: \"Start\",\n        required: true,\n        serializedName: \"Start\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      end: {\n        xmlName: \"End\",\n        required: true,\n        serializedName: \"End\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClearRange: coreHttp.CompositeMapper = {\n  serializedName: \"ClearRange\",\n  type: {\n    name: \"Composite\",\n    className: \"ClearRange\",\n    modelProperties: {\n      start: {\n        xmlName: \"Start\",\n        required: true,\n        serializedName: \"Start\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      end: {\n        xmlName: \"End\",\n        required: true,\n        serializedName: \"End\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageList: coreHttp.CompositeMapper = {\n  serializedName: \"PageList\",\n  type: {\n    name: \"Composite\",\n    className: \"PageList\",\n    modelProperties: {\n      pageRange: {\n        xmlName: \"PageRange\",\n        xmlElementName: \"PageRange\",\n        serializedName: \"PageRange\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PageRange\"\n            }\n          }\n        }\n      },\n      clearRange: {\n        xmlName: \"ClearRange\",\n        xmlElementName: \"ClearRange\",\n        serializedName: \"ClearRange\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ClearRange\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SignedIdentifier: coreHttp.CompositeMapper = {\n  serializedName: \"SignedIdentifier\",\n  type: {\n    name: \"Composite\",\n    className: \"SignedIdentifier\",\n    modelProperties: {\n      id: {\n        xmlName: \"Id\",\n        required: true,\n        serializedName: \"Id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessPolicy: {\n        xmlName: \"AccessPolicy\",\n        required: true,\n        serializedName: \"AccessPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"AccessPolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const StaticWebsite: coreHttp.CompositeMapper = {\n  serializedName: \"StaticWebsite\",\n  type: {\n    name: \"Composite\",\n    className: \"StaticWebsite\",\n    modelProperties: {\n      enabled: {\n        xmlName: \"Enabled\",\n        required: true,\n        serializedName: \"Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      indexDocument: {\n        xmlName: \"IndexDocument\",\n        serializedName: \"IndexDocument\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorDocument404Path: {\n        xmlName: \"ErrorDocument404Path\",\n        serializedName: \"ErrorDocument404Path\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobServiceProperties: coreHttp.CompositeMapper = {\n  xmlName: \"StorageServiceProperties\",\n  serializedName: \"BlobServiceProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobServiceProperties\",\n    modelProperties: {\n      blobAnalyticsLogging: {\n        xmlName: \"Logging\",\n        serializedName: \"Logging\",\n        type: {\n          name: \"Composite\",\n          className: \"Logging\"\n        }\n      },\n      hourMetrics: {\n        xmlName: \"HourMetrics\",\n        serializedName: \"HourMetrics\",\n        type: {\n          name: \"Composite\",\n          className: \"Metrics\"\n        }\n      },\n      minuteMetrics: {\n        xmlName: \"MinuteMetrics\",\n        serializedName: \"MinuteMetrics\",\n        type: {\n          name: \"Composite\",\n          className: \"Metrics\"\n        }\n      },\n      cors: {\n        xmlIsWrapped: true,\n        xmlName: \"Cors\",\n        xmlElementName: \"CorsRule\",\n        serializedName: \"Cors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CorsRule\"\n            }\n          }\n        }\n      },\n      defaultServiceVersion: {\n        xmlName: \"DefaultServiceVersion\",\n        serializedName: \"DefaultServiceVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deleteRetentionPolicy: {\n        xmlName: \"DeleteRetentionPolicy\",\n        serializedName: \"DeleteRetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\"\n        }\n      },\n      staticWebsite: {\n        xmlName: \"StaticWebsite\",\n        serializedName: \"StaticWebsite\",\n        type: {\n          name: \"Composite\",\n          className: \"StaticWebsite\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobServiceStatistics: coreHttp.CompositeMapper = {\n  xmlName: \"StorageServiceStats\",\n  serializedName: \"BlobServiceStatistics\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobServiceStatistics\",\n    modelProperties: {\n      geoReplication: {\n        xmlName: \"GeoReplication\",\n        serializedName: \"GeoReplication\",\n        type: {\n          name: \"Composite\",\n          className: \"GeoReplication\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerEncryptionScope: coreHttp.CompositeMapper = {\n  xmlName: \"container-encryption-scope\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerEncryptionScope\",\n    modelProperties: {\n      defaultEncryptionScope: {\n        xmlName: \"defaultEncryptionScope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      preventEncryptionScopeOverride: {\n        xmlName: \"preventEncryptionScopeOverride\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const LeaseAccessConditions: coreHttp.CompositeMapper = {\n  xmlName: \"lease-access-conditions\",\n  type: {\n    name: \"Composite\",\n    className: \"LeaseAccessConditions\",\n    modelProperties: {\n      leaseId: {\n        xmlName: \"leaseId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ModifiedAccessConditions: coreHttp.CompositeMapper = {\n  xmlName: \"modified-access-conditions\",\n  type: {\n    name: \"Composite\",\n    className: \"ModifiedAccessConditions\",\n    modelProperties: {\n      ifModifiedSince: {\n        xmlName: \"ifModifiedSince\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      ifUnmodifiedSince: {\n        xmlName: \"ifUnmodifiedSince\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      ifMatch: {\n        xmlName: \"ifMatch\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ifNoneMatch: {\n        xmlName: \"ifNoneMatch\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryHttpHeaders: coreHttp.CompositeMapper = {\n  xmlName: \"directory-http-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryHttpHeaders\",\n    modelProperties: {\n      cacheControl: {\n        xmlName: \"cacheControl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentType: {\n        xmlName: \"contentType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentEncoding: {\n        xmlName: \"contentEncoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        xmlName: \"contentLanguage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentDisposition: {\n        xmlName: \"contentDisposition\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SourceModifiedAccessConditions: coreHttp.CompositeMapper = {\n  xmlName: \"source-modified-access-conditions\",\n  type: {\n    name: \"Composite\",\n    className: \"SourceModifiedAccessConditions\",\n    modelProperties: {\n      sourceIfModifiedSince: {\n        xmlName: \"sourceIfModifiedSince\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      sourceIfUnmodifiedSince: {\n        xmlName: \"sourceIfUnmodifiedSince\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      sourceIfMatch: {\n        xmlName: \"sourceIfMatch\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceIfNoneMatch: {\n        xmlName: \"sourceIfNoneMatch\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CpkInfo: coreHttp.CompositeMapper = {\n  xmlName: \"cpk-info\",\n  type: {\n    name: \"Composite\",\n    className: \"CpkInfo\",\n    modelProperties: {\n      encryptionKey: {\n        xmlName: \"encryptionKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionKeySha256: {\n        xmlName: \"encryptionKeySha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionAlgorithm: {\n        xmlName: \"encryptionAlgorithm\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"AES256\"\n          ]\n        }\n      }\n    }\n  }\n};\n\nexport const BlobHTTPHeaders: coreHttp.CompositeMapper = {\n  xmlName: \"blob-HTTP-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobHTTPHeaders\",\n    modelProperties: {\n      blobCacheControl: {\n        xmlName: \"blobCacheControl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentType: {\n        xmlName: \"blobContentType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentMD5: {\n        xmlName: \"blobContentMD5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      blobContentEncoding: {\n        xmlName: \"blobContentEncoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentLanguage: {\n        xmlName: \"blobContentLanguage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentDisposition: {\n        xmlName: \"blobContentDisposition\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SequenceNumberAccessConditions: coreHttp.CompositeMapper = {\n  xmlName: \"sequence-number-access-conditions\",\n  type: {\n    name: \"Composite\",\n    className: \"SequenceNumberAccessConditions\",\n    modelProperties: {\n      ifSequenceNumberLessThanOrEqualTo: {\n        xmlName: \"ifSequenceNumberLessThanOrEqualTo\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      ifSequenceNumberLessThan: {\n        xmlName: \"ifSequenceNumberLessThan\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      ifSequenceNumberEqualTo: {\n        xmlName: \"ifSequenceNumberEqualTo\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppendPositionAccessConditions: coreHttp.CompositeMapper = {\n  xmlName: \"append-position-access-conditions\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendPositionAccessConditions\",\n    modelProperties: {\n      maxSize: {\n        xmlName: \"maxSize\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      appendPosition: {\n        xmlName: \"appendPosition\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceSetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"service-setproperties-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSetPropertiesHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"service-getproperties-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetPropertiesHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetStatisticsHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"service-getstatistics-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetStatisticsHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceListContainersSegmentHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"service-listcontainerssegment-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceListContainersSegmentHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetUserDelegationKeyHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"service-getuserdelegationkey-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetUserDelegationKeyHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetAccountInfoHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"service-getaccountinfo-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetAccountInfoHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      skuName: {\n        serializedName: \"x-ms-sku-name\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Standard_LRS\",\n            \"Standard_GRS\",\n            \"Standard_RAGRS\",\n            \"Standard_ZRS\",\n            \"Premium_LRS\"\n          ]\n        }\n      },\n      accountKind: {\n        serializedName: \"x-ms-account-kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Storage\",\n            \"BlobStorage\",\n            \"StorageV2\"\n          ]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceSubmitBatchHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"service-submitbatch-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSubmitBatchHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerCreateHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-create-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerGetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-getproperties-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetPropertiesHeaders\",\n    modelProperties: {\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"infinite\",\n            \"fixed\"\n          ]\n        }\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"locked\",\n            \"unlocked\"\n          ]\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobPublicAccess: {\n        serializedName: \"x-ms-blob-public-access\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hasImmutabilityPolicy: {\n        serializedName: \"x-ms-has-immutability-policy\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      hasLegalHold: {\n        serializedName: \"x-ms-has-legal-hold\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      defaultEncryptionScope: {\n        serializedName: \"x-ms-default-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      denyEncryptionScopeOverride: {\n        serializedName: \"x-ms-deny-encryption-scope-override\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerDeleteHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-delete-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerDeleteHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerSetMetadataHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-setmetadata-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerSetMetadataHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerGetAccessPolicyHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-getaccesspolicy-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetAccessPolicyHeaders\",\n    modelProperties: {\n      blobPublicAccess: {\n        serializedName: \"x-ms-blob-public-access\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerSetAccessPolicyHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-setaccesspolicy-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerSetAccessPolicyHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerAcquireLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-acquirelease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerAcquireLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerReleaseLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-releaselease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerReleaseLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerRenewLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-renewlease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRenewLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerBreakLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-breaklease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerBreakLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseTime: {\n        serializedName: \"x-ms-lease-time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerChangeLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-changelease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerChangeLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerListBlobFlatSegmentHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-listblobflatsegment-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerListBlobFlatSegmentHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerListBlobHierarchySegmentHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-listblobhierarchysegment-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerListBlobHierarchySegmentHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerGetAccountInfoHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"container-getaccountinfo-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerGetAccountInfoHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      skuName: {\n        serializedName: \"x-ms-sku-name\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Standard_LRS\",\n            \"Standard_GRS\",\n            \"Standard_RAGRS\",\n            \"Standard_ZRS\",\n            \"Premium_LRS\"\n          ]\n        }\n      },\n      accountKind: {\n        serializedName: \"x-ms-account-kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Storage\",\n            \"BlobStorage\",\n            \"StorageV2\"\n          ]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryCreateHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"directory-create-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryRenameHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"directory-rename-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryRenameHeaders\",\n    modelProperties: {\n      marker: {\n        serializedName: \"x-ms-continuation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryDeleteHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"directory-delete-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryDeleteHeaders\",\n    modelProperties: {\n      marker: {\n        serializedName: \"x-ms-continuation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectorySetAccessControlHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"directory-setaccesscontrol-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectorySetAccessControlHeaders\",\n    modelProperties: {\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryGetAccessControlHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"directory-getaccesscontrol-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryGetAccessControlHeaders\",\n    modelProperties: {\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      xMsOwner: {\n        serializedName: \"x-ms-owner\",\n        type: {\n          name: \"String\"\n        }\n      },\n      xMsGroup: {\n        serializedName: \"x-ms-group\",\n        type: {\n          name: \"String\"\n        }\n      },\n      xMsPermissions: {\n        serializedName: \"x-ms-permissions\",\n        type: {\n          name: \"String\"\n        }\n      },\n      xMsAcl: {\n        serializedName: \"x-ms-acl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobDownloadHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-download-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDownloadHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentRange: {\n        serializedName: \"content-range\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      blobType: {\n        serializedName: \"x-ms-blob-type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"BlockBlob\",\n            \"PageBlob\",\n            \"AppendBlob\"\n          ]\n        }\n      },\n      copyCompletedOn: {\n        serializedName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"pending\",\n            \"success\",\n            \"aborted\",\n            \"failed\"\n          ]\n        }\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"infinite\",\n            \"fixed\"\n          ]\n        }\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"locked\",\n            \"unlocked\"\n          ]\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentMD5: {\n        serializedName: \"x-ms-blob-content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      contentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobGetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-getproperties-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetPropertiesHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      createdOn: {\n        serializedName: \"x-ms-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      blobType: {\n        serializedName: \"x-ms-blob-type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"BlockBlob\",\n            \"PageBlob\",\n            \"AppendBlob\"\n          ]\n        }\n      },\n      copyCompletedOn: {\n        serializedName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"pending\",\n            \"success\",\n            \"aborted\",\n            \"failed\"\n          ]\n        }\n      },\n      isIncrementalCopy: {\n        serializedName: \"x-ms-incremental-copy\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      destinationSnapshot: {\n        serializedName: \"x-ms-copy-destination-snapshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"infinite\",\n            \"fixed\"\n          ]\n        }\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"locked\",\n            \"unlocked\"\n          ]\n        }\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessTier: {\n        serializedName: \"x-ms-access-tier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessTierInferred: {\n        serializedName: \"x-ms-access-tier-inferred\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      archiveStatus: {\n        serializedName: \"x-ms-archive-status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessTierChangedOn: {\n        serializedName: \"x-ms-access-tier-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobDeleteHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-delete-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobDeleteHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetAccessControlHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-setaccesscontrol-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetAccessControlHeaders\",\n    modelProperties: {\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobGetAccessControlHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-getaccesscontrol-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetAccessControlHeaders\",\n    modelProperties: {\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      xMsOwner: {\n        serializedName: \"x-ms-owner\",\n        type: {\n          name: \"String\"\n        }\n      },\n      xMsGroup: {\n        serializedName: \"x-ms-group\",\n        type: {\n          name: \"String\"\n        }\n      },\n      xMsPermissions: {\n        serializedName: \"x-ms-permissions\",\n        type: {\n          name: \"String\"\n        }\n      },\n      xMsAcl: {\n        serializedName: \"x-ms-acl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobRenameHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-rename-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobRenameHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobCreateHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"pageblob-create-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppendBlobCreateHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"appendblob-create-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobUploadHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blockblob-upload-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobUploadHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobUndeleteHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-undelete-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobUndeleteHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetHTTPHeadersHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-sethttpheaders-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetHTTPHeadersHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetMetadataHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-setmetadata-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetMetadataHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobAcquireLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-acquirelease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobAcquireLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobReleaseLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-releaselease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobReleaseLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobRenewLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-renewlease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobRenewLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobChangeLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-changelease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobChangeLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobBreakLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-breaklease-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobBreakLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseTime: {\n        serializedName: \"x-ms-lease-time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobCreateSnapshotHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-createsnapshot-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobCreateSnapshotHeaders\",\n    modelProperties: {\n      snapshot: {\n        serializedName: \"x-ms-snapshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobStartCopyFromURLHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-startcopyfromurl-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobStartCopyFromURLHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"pending\",\n            \"success\",\n            \"aborted\",\n            \"failed\"\n          ]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobCopyFromURLHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-copyfromurl-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobCopyFromURLHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"success\"\n          ]\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobAbortCopyFromURLHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-abortcopyfromurl-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobAbortCopyFromURLHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobSetTierHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-settier-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobSetTierHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlobGetAccountInfoHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blob-getaccountinfo-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlobGetAccountInfoHeaders\",\n    modelProperties: {\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      skuName: {\n        serializedName: \"x-ms-sku-name\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Standard_LRS\",\n            \"Standard_GRS\",\n            \"Standard_RAGRS\",\n            \"Standard_ZRS\",\n            \"Premium_LRS\"\n          ]\n        }\n      },\n      accountKind: {\n        serializedName: \"x-ms-account-kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Storage\",\n            \"BlobStorage\",\n            \"StorageV2\"\n          ]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobStageBlockHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blockblob-stageblock-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobStageBlockHeaders\",\n    modelProperties: {\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobStageBlockFromURLHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blockblob-stageblockfromurl-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobStageBlockFromURLHeaders\",\n    modelProperties: {\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobCommitBlockListHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blockblob-commitblocklist-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobCommitBlockListHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BlockBlobGetBlockListHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"blockblob-getblocklist-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"BlockBlobGetBlockListHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentLength: {\n        serializedName: \"x-ms-blob-content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobUploadPagesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"pageblob-uploadpages-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUploadPagesHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobClearPagesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"pageblob-clearpages-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobClearPagesHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobUploadPagesFromURLHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"pageblob-uploadpagesfromurl-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUploadPagesFromURLHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobGetPageRangesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"pageblob-getpageranges-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobGetPageRangesHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentLength: {\n        serializedName: \"x-ms-blob-content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobGetPageRangesDiffHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"pageblob-getpagerangesdiff-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobGetPageRangesDiffHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobContentLength: {\n        serializedName: \"x-ms-blob-content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobResizeHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"pageblob-resize-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobResizeHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobUpdateSequenceNumberHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"pageblob-updatesequencenumber-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobUpdateSequenceNumberHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobSequenceNumber: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PageBlobCopyIncrementalHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"pageblob-copyincremental-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"PageBlobCopyIncrementalHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"pending\",\n            \"success\",\n            \"aborted\",\n            \"failed\"\n          ]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppendBlobAppendBlockHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"appendblob-appendblock-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobAppendBlockHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobAppendOffset: {\n        serializedName: \"x-ms-blob-append-offset\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppendBlobAppendBlockFromUrlHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"appendblob-appendblockfromurl-headers\",\n  type: {\n    name: \"Composite\",\n    className: \"AppendBlobAppendBlockFromUrlHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      blobAppendOffset: {\n        serializedName: \"x-ms-blob-append-offset\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobCommittedBlockCount: {\n        serializedName: \"x-ms-blob-committed-block-count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      encryptionKeySha256: {\n        serializedName: \"x-ms-encryption-key-sha256\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encryptionScope: {\n        serializedName: \"x-ms-encryption-scope\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n", "/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  BlobServiceProperties,\n  BlobServiceStatistics,\n  ContainerItem,\n  ContainerProperties,\n  CorsRule,\n  GeoReplication,\n  KeyInfo,\n  ListContainersSegmentResponse,\n  Logging,\n  Metrics,\n  RetentionPolicy,\n  ServiceGetAccountInfoHeaders,\n  ServiceGetPropertiesHeaders,\n  ServiceGetStatisticsHeaders,\n  ServiceGetUserDelegationKeyHeaders,\n  ServiceListContainersSegmentHeaders,\n  ServiceSetPropertiesHeaders,\n  ServiceSubmitBatchHeaders,\n  StaticWebsite,\n  StorageError,\n  UserDelegationKey\n} from \"../models/mappers\";\n", "/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\nexport const access: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"access\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-public-access\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const action0: coreHttp.OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    defaultValue: 'acquire',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const action1: coreHttp.OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    defaultValue: 'release',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const action2: coreHttp.OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    defaultValue: 'renew',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const action3: coreHttp.OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    defaultValue: 'break',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const action4: coreHttp.OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    defaultValue: 'change',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const action5: coreHttp.OperationQueryParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"action\",\n    defaultValue: 'setAccessControl',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const action6: coreHttp.OperationQueryParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"action\",\n    defaultValue: 'getAccessControl',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const appendPosition: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"appendPositionAccessConditions\",\n    \"appendPosition\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-condition-appendpos\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const blobCacheControl: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"blobHTTPHeaders\",\n    \"blobCacheControl\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-cache-control\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blobContentDisposition: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"blobHTTPHeaders\",\n    \"blobContentDisposition\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-content-disposition\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blobContentEncoding: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"blobHTTPHeaders\",\n    \"blobContentEncoding\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-content-encoding\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blobContentLanguage: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"blobHTTPHeaders\",\n    \"blobContentLanguage\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-content-language\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blobContentLength: coreHttp.OperationParameter = {\n  parameterPath: \"blobContentLength\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-blob-content-length\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const blobContentMD5: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"blobHTTPHeaders\",\n    \"blobContentMD5\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-content-md5\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\nexport const blobContentType: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"blobHTTPHeaders\",\n    \"blobContentType\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-content-type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blobSequenceNumber: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"blobSequenceNumber\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-sequence-number\",\n    defaultValue: 0,\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const blobType0: coreHttp.OperationParameter = {\n  parameterPath: \"blobType\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-blob-type\",\n    defaultValue: 'PageBlob',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blobType1: coreHttp.OperationParameter = {\n  parameterPath: \"blobType\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-blob-type\",\n    defaultValue: 'AppendBlob',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blobType2: coreHttp.OperationParameter = {\n  parameterPath: \"blobType\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-blob-type\",\n    defaultValue: 'BlockBlob',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const blockId: coreHttp.OperationQueryParameter = {\n  parameterPath: \"blockId\",\n  mapper: {\n    required: true,\n    serializedName: \"blockid\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const breakPeriod: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"breakPeriod\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-lease-break-period\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const cacheControl: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"directoryHttpHeaders\",\n    \"cacheControl\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-cache-control\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp0: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'properties',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp1: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'stats',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp10: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'copy',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp11: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'tier',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp12: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'page',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp13: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'pagelist',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp14: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'incrementalcopy',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp15: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'appendblock',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp16: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'block',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp17: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'blocklist',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp2: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'list',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp3: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'userdelegationkey',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp4: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'batch',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp5: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'metadata',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp6: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'acl',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp7: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'lease',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp8: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'undelete',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const comp9: coreHttp.OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"comp\",\n    defaultValue: 'snapshot',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const contentDisposition: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"directoryHttpHeaders\",\n    \"contentDisposition\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-content-disposition\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const contentEncoding: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"directoryHttpHeaders\",\n    \"contentEncoding\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-content-encoding\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const contentLanguage: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"directoryHttpHeaders\",\n    \"contentLanguage\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-content-language\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const contentLength: coreHttp.OperationParameter = {\n  parameterPath: \"contentLength\",\n  mapper: {\n    required: true,\n    serializedName: \"Content-Length\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const contentType: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"directoryHttpHeaders\",\n    \"contentType\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-content-type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const copyActionAbortConstant: coreHttp.OperationParameter = {\n  parameterPath: \"copyActionAbortConstant\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-copy-action\",\n    defaultValue: 'abort',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const copyId: coreHttp.OperationQueryParameter = {\n  parameterPath: \"copyId\",\n  mapper: {\n    required: true,\n    serializedName: \"copyid\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const copySource: coreHttp.OperationParameter = {\n  parameterPath: \"copySource\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-copy-source\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const defaultEncryptionScope: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"containerEncryptionScope\",\n    \"defaultEncryptionScope\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-default-encryption-scope\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const deleteSnapshots: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"deleteSnapshots\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-delete-snapshots\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"include\",\n        \"only\"\n      ]\n    }\n  }\n};\nexport const delimiter: coreHttp.OperationQueryParameter = {\n  parameterPath: \"delimiter\",\n  mapper: {\n    required: true,\n    serializedName: \"delimiter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const directoryProperties: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"directoryProperties\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-properties\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const duration: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"duration\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-lease-duration\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const encryptionAlgorithm: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"cpkInfo\",\n    \"encryptionAlgorithm\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-encryption-algorithm\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"AES256\"\n      ]\n    }\n  }\n};\nexport const encryptionKey: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"cpkInfo\",\n    \"encryptionKey\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-encryption-key\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const encryptionKeySha256: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"cpkInfo\",\n    \"encryptionKeySha256\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-encryption-key-sha256\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const encryptionScope: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"encryptionScope\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-encryption-scope\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const group: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"group\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-group\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const ifMatch: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"modifiedAccessConditions\",\n    \"ifMatch\"\n  ],\n  mapper: {\n    serializedName: \"If-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const ifModifiedSince: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"modifiedAccessConditions\",\n    \"ifModifiedSince\"\n  ],\n  mapper: {\n    serializedName: \"If-Modified-Since\",\n    type: {\n      name: \"DateTimeRfc1123\"\n    }\n  }\n};\nexport const ifNoneMatch: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"modifiedAccessConditions\",\n    \"ifNoneMatch\"\n  ],\n  mapper: {\n    serializedName: \"If-None-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const ifSequenceNumberEqualTo: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sequenceNumberAccessConditions\",\n    \"ifSequenceNumberEqualTo\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-if-sequence-number-eq\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const ifSequenceNumberLessThan: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sequenceNumberAccessConditions\",\n    \"ifSequenceNumberLessThan\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-if-sequence-number-lt\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const ifSequenceNumberLessThanOrEqualTo: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sequenceNumberAccessConditions\",\n    \"ifSequenceNumberLessThanOrEqualTo\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-if-sequence-number-le\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const ifUnmodifiedSince: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"modifiedAccessConditions\",\n    \"ifUnmodifiedSince\"\n  ],\n  mapper: {\n    serializedName: \"If-Unmodified-Since\",\n    type: {\n      name: \"DateTimeRfc1123\"\n    }\n  }\n};\nexport const include0: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"include\"\n  ],\n  mapper: {\n    serializedName: \"include\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"metadata\"\n      ]\n    }\n  }\n};\nexport const include1: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"include\"\n  ],\n  mapper: {\n    serializedName: \"include\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"copy\",\n            \"deleted\",\n            \"metadata\",\n            \"snapshots\",\n            \"uncommittedblobs\"\n          ]\n        }\n      }\n    }\n  },\n  collectionFormat: coreHttp.QueryCollectionFormat.Csv\n};\nexport const leaseId0: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"leaseAccessConditions\",\n    \"leaseId\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const leaseId1: coreHttp.OperationParameter = {\n  parameterPath: \"leaseId\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const listType: coreHttp.OperationQueryParameter = {\n  parameterPath: \"listType\",\n  mapper: {\n    required: true,\n    serializedName: \"blocklisttype\",\n    defaultValue: 'committed',\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"committed\",\n        \"uncommitted\",\n        \"all\"\n      ]\n    }\n  }\n};\nexport const marker0: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"marker\"\n  ],\n  mapper: {\n    serializedName: \"marker\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const marker1: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"marker\"\n  ],\n  mapper: {\n    serializedName: \"continuation\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const maxPageSize: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"maxPageSize\"\n  ],\n  mapper: {\n    serializedName: \"maxresults\",\n    constraints: {\n      InclusiveMinimum: 1\n    },\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const maxSize: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"appendPositionAccessConditions\",\n    \"maxSize\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-blob-condition-maxsize\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const metadata: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"metadata\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-meta\",\n    type: {\n      name: \"Dictionary\",\n      value: {\n        type: {\n          name: \"String\"\n        }\n      }\n    },\n    headerCollectionPrefix: \"x-ms-meta-\"\n  }\n};\nexport const multipartContentType: coreHttp.OperationParameter = {\n  parameterPath: \"multipartContentType\",\n  mapper: {\n    required: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const owner: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"owner\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-owner\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const pageWrite0: coreHttp.OperationParameter = {\n  parameterPath: \"pageWrite\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-page-write\",\n    defaultValue: 'update',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const pageWrite1: coreHttp.OperationParameter = {\n  parameterPath: \"pageWrite\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-page-write\",\n    defaultValue: 'clear',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const pathRenameMode: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"pathRenameMode\"\n  ],\n  mapper: {\n    serializedName: \"mode\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"legacy\",\n        \"posix\"\n      ]\n    }\n  }\n};\nexport const posixAcl: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"posixAcl\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-acl\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const posixPermissions: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"posixPermissions\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-permissions\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const posixUmask: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"posixUmask\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-umask\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const prefix: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"prefix\"\n  ],\n  mapper: {\n    serializedName: \"prefix\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const preventEncryptionScopeOverride: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"containerEncryptionScope\",\n    \"preventEncryptionScopeOverride\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-deny-encryption-scope-override\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const prevsnapshot: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"prevsnapshot\"\n  ],\n  mapper: {\n    serializedName: \"prevsnapshot\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const prevSnapshotUrl: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"prevSnapshotUrl\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-previous-snapshot-url\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const proposedLeaseId0: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"proposedLeaseId\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-proposed-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const proposedLeaseId1: coreHttp.OperationParameter = {\n  parameterPath: \"proposedLeaseId\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-proposed-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const range0: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"range\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const range1: coreHttp.OperationParameter = {\n  parameterPath: \"range\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const rangeGetContentCRC64: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"rangeGetContentCRC64\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-range-get-content-crc64\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const rangeGetContentMD5: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"rangeGetContentMD5\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-range-get-content-md5\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const recursiveDirectoryDelete: coreHttp.OperationQueryParameter = {\n  parameterPath: \"recursiveDirectoryDelete\",\n  mapper: {\n    required: true,\n    serializedName: \"recursive\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const rehydratePriority: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"rehydratePriority\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-rehydrate-priority\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const renameSource: coreHttp.OperationParameter = {\n  parameterPath: \"renameSource\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-rename-source\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const requestId: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"requestId\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-client-request-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const resource: coreHttp.OperationQueryParameter = {\n  parameterPath: \"resource\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"resource\",\n    defaultValue: 'directory',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const restype0: coreHttp.OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"restype\",\n    defaultValue: 'service',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const restype1: coreHttp.OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"restype\",\n    defaultValue: 'account',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const restype2: coreHttp.OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"restype\",\n    defaultValue: 'container',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sequenceNumberAction: coreHttp.OperationParameter = {\n  parameterPath: \"sequenceNumberAction\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-sequence-number-action\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"max\",\n        \"update\",\n        \"increment\"\n      ]\n    }\n  }\n};\nexport const snapshot: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"snapshot\"\n  ],\n  mapper: {\n    serializedName: \"snapshot\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sourceContentCrc64: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceContentCrc64\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-content-crc64\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\nexport const sourceContentMD5: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceContentMD5\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-content-md5\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\nexport const sourceIfMatch: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfMatch\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sourceIfModifiedSince: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfModifiedSince\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-modified-since\",\n    type: {\n      name: \"DateTimeRfc1123\"\n    }\n  }\n};\nexport const sourceIfNoneMatch: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfNoneMatch\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-none-match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sourceIfUnmodifiedSince: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfUnmodifiedSince\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-unmodified-since\",\n    type: {\n      name: \"DateTimeRfc1123\"\n    }\n  }\n};\nexport const sourceLeaseId: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceLeaseId\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sourceRange0: coreHttp.OperationParameter = {\n  parameterPath: \"sourceRange\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-source-range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sourceRange1: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceRange\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const sourceUrl: coreHttp.OperationParameter = {\n  parameterPath: \"sourceUrl\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-copy-source\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const tier0: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"tier\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-access-tier\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const tier1: coreHttp.OperationParameter = {\n  parameterPath: \"tier\",\n  mapper: {\n    required: true,\n    serializedName: \"x-ms-access-tier\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const timeoutInSeconds: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"timeoutInSeconds\"\n  ],\n  mapper: {\n    serializedName: \"timeout\",\n    constraints: {\n      InclusiveMinimum: 0\n    },\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const transactionalContentCrc64: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"transactionalContentCrc64\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-content-crc64\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\nexport const transactionalContentMD5: coreHttp.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"transactionalContentMD5\"\n  ],\n  mapper: {\n    serializedName: \"Content-MD5\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\nexport const upn: coreHttp.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"upn\"\n  ],\n  mapper: {\n    serializedName: \"upn\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const url: coreHttp.OperationURLParameter = {\n  parameterPath: \"url\",\n  mapper: {\n    required: true,\n    serializedName: \"url\",\n    defaultValue: '',\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const version: coreHttp.OperationParameter = {\n  parameterPath: \"version\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-version\",\n    defaultValue: '2019-07-07',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const xMsRequiresSync: coreHttp.OperationParameter = {\n  parameterPath: \"xMsRequiresSync\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"x-ms-requires-sync\",\n    defaultValue: 'true',\n    type: {\n      name: \"String\"\n    }\n  }\n};\n", "/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/serviceMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a Service. */\nexport class Service {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a Service.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Sets properties for a storage account's Blob service endpoint, including properties for Storage\n   * Analytics and CORS (Cross-Origin Resource Sharing) rules\n   * @param blobServiceProperties The StorageService properties.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceSetPropertiesResponse>\n   */\n  setProperties(blobServiceProperties: Models.BlobServiceProperties, options?: Models.ServiceSetPropertiesOptionalParams): Promise<Models.ServiceSetPropertiesResponse>;\n  /**\n   * @param blobServiceProperties The StorageService properties.\n   * @param callback The callback\n   */\n  setProperties(blobServiceProperties: Models.BlobServiceProperties, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param blobServiceProperties The StorageService properties.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setProperties(blobServiceProperties: Models.BlobServiceProperties, options: Models.ServiceSetPropertiesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setProperties(blobServiceProperties: Models.BlobServiceProperties, options?: Models.ServiceSetPropertiesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ServiceSetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        blobServiceProperties,\n        options\n      },\n      setPropertiesOperationSpec,\n      callback) as Promise<Models.ServiceSetPropertiesResponse>;\n  }\n\n  /**\n   * gets the properties of a storage account's Blob service, including properties for Storage\n   * Analytics and CORS (Cross-Origin Resource Sharing) rules.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceGetPropertiesResponse>\n   */\n  getProperties(options?: Models.ServiceGetPropertiesOptionalParams): Promise<Models.ServiceGetPropertiesResponse>;\n  /**\n   * @param callback The callback\n   */\n  getProperties(callback: coreHttp.ServiceCallback<Models.BlobServiceProperties>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getProperties(options: Models.ServiceGetPropertiesOptionalParams, callback: coreHttp.ServiceCallback<Models.BlobServiceProperties>): void;\n  getProperties(options?: Models.ServiceGetPropertiesOptionalParams | coreHttp.ServiceCallback<Models.BlobServiceProperties>, callback?: coreHttp.ServiceCallback<Models.BlobServiceProperties>): Promise<Models.ServiceGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPropertiesOperationSpec,\n      callback) as Promise<Models.ServiceGetPropertiesResponse>;\n  }\n\n  /**\n   * Retrieves statistics related to replication for the Blob service. It is only available on the\n   * secondary location endpoint when read-access geo-redundant replication is enabled for the\n   * storage account.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceGetStatisticsResponse>\n   */\n  getStatistics(options?: Models.ServiceGetStatisticsOptionalParams): Promise<Models.ServiceGetStatisticsResponse>;\n  /**\n   * @param callback The callback\n   */\n  getStatistics(callback: coreHttp.ServiceCallback<Models.BlobServiceStatistics>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getStatistics(options: Models.ServiceGetStatisticsOptionalParams, callback: coreHttp.ServiceCallback<Models.BlobServiceStatistics>): void;\n  getStatistics(options?: Models.ServiceGetStatisticsOptionalParams | coreHttp.ServiceCallback<Models.BlobServiceStatistics>, callback?: coreHttp.ServiceCallback<Models.BlobServiceStatistics>): Promise<Models.ServiceGetStatisticsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getStatisticsOperationSpec,\n      callback) as Promise<Models.ServiceGetStatisticsResponse>;\n  }\n\n  /**\n   * The List Containers Segment operation returns a list of the containers under the specified\n   * account\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceListContainersSegmentResponse>\n   */\n  listContainersSegment(options?: Models.ServiceListContainersSegmentOptionalParams): Promise<Models.ServiceListContainersSegmentResponse>;\n  /**\n   * @param callback The callback\n   */\n  listContainersSegment(callback: coreHttp.ServiceCallback<Models.ListContainersSegmentResponse>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listContainersSegment(options: Models.ServiceListContainersSegmentOptionalParams, callback: coreHttp.ServiceCallback<Models.ListContainersSegmentResponse>): void;\n  listContainersSegment(options?: Models.ServiceListContainersSegmentOptionalParams | coreHttp.ServiceCallback<Models.ListContainersSegmentResponse>, callback?: coreHttp.ServiceCallback<Models.ListContainersSegmentResponse>): Promise<Models.ServiceListContainersSegmentResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listContainersSegmentOperationSpec,\n      callback) as Promise<Models.ServiceListContainersSegmentResponse>;\n  }\n\n  /**\n   * Retrieves a user delegation key for the Blob service. This is only a valid operation when using\n   * bearer token authentication.\n   * @param keyInfo\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceGetUserDelegationKeyResponse>\n   */\n  getUserDelegationKey(keyInfo: Models.KeyInfo, options?: Models.ServiceGetUserDelegationKeyOptionalParams): Promise<Models.ServiceGetUserDelegationKeyResponse>;\n  /**\n   * @param keyInfo\n   * @param callback The callback\n   */\n  getUserDelegationKey(keyInfo: Models.KeyInfo, callback: coreHttp.ServiceCallback<Models.UserDelegationKey>): void;\n  /**\n   * @param keyInfo\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getUserDelegationKey(keyInfo: Models.KeyInfo, options: Models.ServiceGetUserDelegationKeyOptionalParams, callback: coreHttp.ServiceCallback<Models.UserDelegationKey>): void;\n  getUserDelegationKey(keyInfo: Models.KeyInfo, options?: Models.ServiceGetUserDelegationKeyOptionalParams | coreHttp.ServiceCallback<Models.UserDelegationKey>, callback?: coreHttp.ServiceCallback<Models.UserDelegationKey>): Promise<Models.ServiceGetUserDelegationKeyResponse> {\n    return this.client.sendOperationRequest(\n      {\n        keyInfo,\n        options\n      },\n      getUserDelegationKeyOperationSpec,\n      callback) as Promise<Models.ServiceGetUserDelegationKeyResponse>;\n  }\n\n  /**\n   * Returns the sku name and account kind\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceGetAccountInfoResponse>\n   */\n  getAccountInfo(options?: coreHttp.RequestOptionsBase): Promise<Models.ServiceGetAccountInfoResponse>;\n  /**\n   * @param callback The callback\n   */\n  getAccountInfo(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAccountInfo(options: coreHttp.RequestOptionsBase, callback: coreHttp.ServiceCallback<void>): void;\n  getAccountInfo(options?: coreHttp.RequestOptionsBase | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ServiceGetAccountInfoResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getAccountInfoOperationSpec,\n      callback) as Promise<Models.ServiceGetAccountInfoResponse>;\n  }\n\n  /**\n   * The Batch operation allows multiple API calls to be embedded into a single HTTP request.\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param multipartContentType Required. The value of this header must be multipart/mixed with a\n   * batch boundary. Example header value: multipart/mixed; boundary=batch_<GUID>\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ServiceSubmitBatchResponse>\n   */\n  submitBatch(body: coreHttp.HttpRequestBody, contentLength: number, multipartContentType: string, options?: Models.ServiceSubmitBatchOptionalParams): Promise<Models.ServiceSubmitBatchResponse>;\n  /**\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param multipartContentType Required. The value of this header must be multipart/mixed with a\n   * batch boundary. Example header value: multipart/mixed; boundary=batch_<GUID>\n   * @param callback The callback\n   */\n  submitBatch(body: coreHttp.HttpRequestBody, contentLength: number, multipartContentType: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param multipartContentType Required. The value of this header must be multipart/mixed with a\n   * batch boundary. Example header value: multipart/mixed; boundary=batch_<GUID>\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  submitBatch(body: coreHttp.HttpRequestBody, contentLength: number, multipartContentType: string, options: Models.ServiceSubmitBatchOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  submitBatch(body: coreHttp.HttpRequestBody, contentLength: number, multipartContentType: string, options?: Models.ServiceSubmitBatchOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ServiceSubmitBatchResponse> {\n    return this.client.sendOperationRequest(\n      {\n        body,\n        contentLength,\n        multipartContentType,\n        options\n      },\n      submitBatchOperationSpec,\n      callback) as Promise<Models.ServiceSubmitBatchResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, true);\nconst setPropertiesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype0,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  requestBody: {\n    parameterPath: \"blobServiceProperties\",\n    mapper: {\n      ...Mappers.BlobServiceProperties,\n      required: true\n    }\n  },\n  contentType: \"application/xml; charset=utf-8\",\n  responses: {\n    202: {\n      headersMapper: Mappers.ServiceSetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceSetPropertiesHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype0,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobServiceProperties,\n      headersMapper: Mappers.ServiceGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceGetPropertiesHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getStatisticsOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype0,\n    Parameters.comp1\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlobServiceStatistics,\n      headersMapper: Mappers.ServiceGetStatisticsHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceGetStatisticsHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst listContainersSegmentOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.prefix,\n    Parameters.marker0,\n    Parameters.maxPageSize,\n    Parameters.include0,\n    Parameters.timeoutInSeconds,\n    Parameters.comp2\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListContainersSegmentResponse,\n      headersMapper: Mappers.ServiceListContainersSegmentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceListContainersSegmentHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getUserDelegationKeyOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"POST\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype0,\n    Parameters.comp3\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  requestBody: {\n    parameterPath: \"keyInfo\",\n    mapper: {\n      ...Mappers.KeyInfo,\n      required: true\n    }\n  },\n  contentType: \"application/xml; charset=utf-8\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UserDelegationKey,\n      headersMapper: Mappers.ServiceGetUserDelegationKeyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceGetUserDelegationKeyHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getAccountInfoOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.restype1,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ServiceGetAccountInfoHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceGetAccountInfoHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst submitBatchOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"POST\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp4\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.multipartContentType,\n    Parameters.version,\n    Parameters.requestId\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      required: true,\n      serializedName: \"body\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"application/xml; charset=utf-8\",\n  responses: {\n    202: {\n      bodyMapper: {\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Stream\"\n        }\n      },\n      headersMapper: Mappers.ServiceSubmitBatchHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceSubmitBatchHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n", "/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  AccessPolicy,\n  BlobFlatListSegment,\n  BlobHierarchyListSegment,\n  BlobItem,\n  BlobPrefix,\n  BlobProperties,\n  ContainerAcquireLeaseHeaders,\n  ContainerBreakLeaseHeaders,\n  ContainerChangeLeaseHeaders,\n  ContainerCreateHeaders,\n  ContainerDeleteHeaders,\n  ContainerGetAccessPolicyHeaders,\n  ContainerGetAccountInfoHeaders,\n  ContainerGetPropertiesHeaders,\n  ContainerListBlobFlatSegmentHeaders,\n  ContainerListBlobHierarchySegmentHeaders,\n  ContainerReleaseLeaseHeaders,\n  ContainerRenewLeaseHeaders,\n  ContainerSetAccessPolicyHeaders,\n  ContainerSetMetadataHeaders,\n  ListBlobsFlatSegmentResponse,\n  ListBlobsHierarchySegmentResponse,\n  SignedIdentifier,\n  StorageError\n} from \"../models/mappers\";\n", "/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/containerMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a Container. */\nexport class Container {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a Container.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * creates a new container under the specified account. If the container with the same name already\n   * exists, the operation fails\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerCreateResponse>\n   */\n  create(options?: Models.ContainerCreateOptionalParams): Promise<Models.ContainerCreateResponse>;\n  /**\n   * @param callback The callback\n   */\n  create(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(options: Models.ContainerCreateOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  create(options?: Models.ContainerCreateOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ContainerCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.ContainerCreateResponse>;\n  }\n\n  /**\n   * returns all user-defined metadata and system properties for the specified container. The data\n   * returned does not include the container's list of blobs\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerGetPropertiesResponse>\n   */\n  getProperties(options?: Models.ContainerGetPropertiesOptionalParams): Promise<Models.ContainerGetPropertiesResponse>;\n  /**\n   * @param callback The callback\n   */\n  getProperties(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getProperties(options: Models.ContainerGetPropertiesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  getProperties(options?: Models.ContainerGetPropertiesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ContainerGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPropertiesOperationSpec,\n      callback) as Promise<Models.ContainerGetPropertiesResponse>;\n  }\n\n  /**\n   * operation marks the specified container for deletion. The container and any blobs contained\n   * within it are later deleted during garbage collection\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerDeleteResponse>\n   */\n  deleteMethod(options?: Models.ContainerDeleteMethodOptionalParams): Promise<Models.ContainerDeleteResponse>;\n  /**\n   * @param callback The callback\n   */\n  deleteMethod(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(options: Models.ContainerDeleteMethodOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  deleteMethod(options?: Models.ContainerDeleteMethodOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ContainerDeleteResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      deleteMethodOperationSpec,\n      callback) as Promise<Models.ContainerDeleteResponse>;\n  }\n\n  /**\n   * operation sets one or more user-defined name-value pairs for the specified container.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerSetMetadataResponse>\n   */\n  setMetadata(options?: Models.ContainerSetMetadataOptionalParams): Promise<Models.ContainerSetMetadataResponse>;\n  /**\n   * @param callback The callback\n   */\n  setMetadata(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setMetadata(options: Models.ContainerSetMetadataOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setMetadata(options?: Models.ContainerSetMetadataOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ContainerSetMetadataResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setMetadataOperationSpec,\n      callback) as Promise<Models.ContainerSetMetadataResponse>;\n  }\n\n  /**\n   * gets the permissions for the specified container. The permissions indicate whether container\n   * data may be accessed publicly.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerGetAccessPolicyResponse>\n   */\n  getAccessPolicy(options?: Models.ContainerGetAccessPolicyOptionalParams): Promise<Models.ContainerGetAccessPolicyResponse>;\n  /**\n   * @param callback The callback\n   */\n  getAccessPolicy(callback: coreHttp.ServiceCallback<Models.SignedIdentifier[]>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAccessPolicy(options: Models.ContainerGetAccessPolicyOptionalParams, callback: coreHttp.ServiceCallback<Models.SignedIdentifier[]>): void;\n  getAccessPolicy(options?: Models.ContainerGetAccessPolicyOptionalParams | coreHttp.ServiceCallback<Models.SignedIdentifier[]>, callback?: coreHttp.ServiceCallback<Models.SignedIdentifier[]>): Promise<Models.ContainerGetAccessPolicyResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getAccessPolicyOperationSpec,\n      callback) as Promise<Models.ContainerGetAccessPolicyResponse>;\n  }\n\n  /**\n   * sets the permissions for the specified container. The permissions indicate whether blobs in a\n   * container may be accessed publicly.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerSetAccessPolicyResponse>\n   */\n  setAccessPolicy(options?: Models.ContainerSetAccessPolicyOptionalParams): Promise<Models.ContainerSetAccessPolicyResponse>;\n  /**\n   * @param callback The callback\n   */\n  setAccessPolicy(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setAccessPolicy(options: Models.ContainerSetAccessPolicyOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setAccessPolicy(options?: Models.ContainerSetAccessPolicyOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ContainerSetAccessPolicyResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setAccessPolicyOperationSpec,\n      callback) as Promise<Models.ContainerSetAccessPolicyResponse>;\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration\n   * can be 15 to 60 seconds, or can be infinite\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerAcquireLeaseResponse>\n   */\n  acquireLease(options?: Models.ContainerAcquireLeaseOptionalParams): Promise<Models.ContainerAcquireLeaseResponse>;\n  /**\n   * @param callback The callback\n   */\n  acquireLease(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  acquireLease(options: Models.ContainerAcquireLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  acquireLease(options?: Models.ContainerAcquireLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ContainerAcquireLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      acquireLeaseOperationSpec,\n      callback) as Promise<Models.ContainerAcquireLeaseResponse>;\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration\n   * can be 15 to 60 seconds, or can be infinite\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerReleaseLeaseResponse>\n   */\n  releaseLease(leaseId: string, options?: Models.ContainerReleaseLeaseOptionalParams): Promise<Models.ContainerReleaseLeaseResponse>;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param callback The callback\n   */\n  releaseLease(leaseId: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  releaseLease(leaseId: string, options: Models.ContainerReleaseLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  releaseLease(leaseId: string, options?: Models.ContainerReleaseLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ContainerReleaseLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        leaseId,\n        options\n      },\n      releaseLeaseOperationSpec,\n      callback) as Promise<Models.ContainerReleaseLeaseResponse>;\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration\n   * can be 15 to 60 seconds, or can be infinite\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerRenewLeaseResponse>\n   */\n  renewLease(leaseId: string, options?: Models.ContainerRenewLeaseOptionalParams): Promise<Models.ContainerRenewLeaseResponse>;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param callback The callback\n   */\n  renewLease(leaseId: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  renewLease(leaseId: string, options: Models.ContainerRenewLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  renewLease(leaseId: string, options?: Models.ContainerRenewLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ContainerRenewLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        leaseId,\n        options\n      },\n      renewLeaseOperationSpec,\n      callback) as Promise<Models.ContainerRenewLeaseResponse>;\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration\n   * can be 15 to 60 seconds, or can be infinite\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerBreakLeaseResponse>\n   */\n  breakLease(options?: Models.ContainerBreakLeaseOptionalParams): Promise<Models.ContainerBreakLeaseResponse>;\n  /**\n   * @param callback The callback\n   */\n  breakLease(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  breakLease(options: Models.ContainerBreakLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  breakLease(options?: Models.ContainerBreakLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ContainerBreakLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      breakLeaseOperationSpec,\n      callback) as Promise<Models.ContainerBreakLeaseResponse>;\n  }\n\n  /**\n   * [Update] establishes and manages a lock on a container for delete operations. The lock duration\n   * can be 15 to 60 seconds, or can be infinite\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   * (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   * (String) for a list of valid GUID string formats.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerChangeLeaseResponse>\n   */\n  changeLease(leaseId: string, proposedLeaseId: string, options?: Models.ContainerChangeLeaseOptionalParams): Promise<Models.ContainerChangeLeaseResponse>;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   * (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   * (String) for a list of valid GUID string formats.\n   * @param callback The callback\n   */\n  changeLease(leaseId: string, proposedLeaseId: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   * (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   * (String) for a list of valid GUID string formats.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  changeLease(leaseId: string, proposedLeaseId: string, options: Models.ContainerChangeLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  changeLease(leaseId: string, proposedLeaseId: string, options?: Models.ContainerChangeLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ContainerChangeLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        leaseId,\n        proposedLeaseId,\n        options\n      },\n      changeLeaseOperationSpec,\n      callback) as Promise<Models.ContainerChangeLeaseResponse>;\n  }\n\n  /**\n   * [Update] The List Blobs operation returns a list of the blobs under the specified container\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerListBlobFlatSegmentResponse>\n   */\n  listBlobFlatSegment(options?: Models.ContainerListBlobFlatSegmentOptionalParams): Promise<Models.ContainerListBlobFlatSegmentResponse>;\n  /**\n   * @param callback The callback\n   */\n  listBlobFlatSegment(callback: coreHttp.ServiceCallback<Models.ListBlobsFlatSegmentResponse>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listBlobFlatSegment(options: Models.ContainerListBlobFlatSegmentOptionalParams, callback: coreHttp.ServiceCallback<Models.ListBlobsFlatSegmentResponse>): void;\n  listBlobFlatSegment(options?: Models.ContainerListBlobFlatSegmentOptionalParams | coreHttp.ServiceCallback<Models.ListBlobsFlatSegmentResponse>, callback?: coreHttp.ServiceCallback<Models.ListBlobsFlatSegmentResponse>): Promise<Models.ContainerListBlobFlatSegmentResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listBlobFlatSegmentOperationSpec,\n      callback) as Promise<Models.ContainerListBlobFlatSegmentResponse>;\n  }\n\n  /**\n   * [Update] The List Blobs operation returns a list of the blobs under the specified container\n   * @param delimiter When the request includes this parameter, the operation returns a BlobPrefix\n   * element in the response body that acts as a placeholder for all blobs whose names begin with the\n   * same substring up to the appearance of the delimiter character. The delimiter may be a single\n   * character or a string.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerListBlobHierarchySegmentResponse>\n   */\n  listBlobHierarchySegment(delimiter: string, options?: Models.ContainerListBlobHierarchySegmentOptionalParams): Promise<Models.ContainerListBlobHierarchySegmentResponse>;\n  /**\n   * @param delimiter When the request includes this parameter, the operation returns a BlobPrefix\n   * element in the response body that acts as a placeholder for all blobs whose names begin with the\n   * same substring up to the appearance of the delimiter character. The delimiter may be a single\n   * character or a string.\n   * @param callback The callback\n   */\n  listBlobHierarchySegment(delimiter: string, callback: coreHttp.ServiceCallback<Models.ListBlobsHierarchySegmentResponse>): void;\n  /**\n   * @param delimiter When the request includes this parameter, the operation returns a BlobPrefix\n   * element in the response body that acts as a placeholder for all blobs whose names begin with the\n   * same substring up to the appearance of the delimiter character. The delimiter may be a single\n   * character or a string.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listBlobHierarchySegment(delimiter: string, options: Models.ContainerListBlobHierarchySegmentOptionalParams, callback: coreHttp.ServiceCallback<Models.ListBlobsHierarchySegmentResponse>): void;\n  listBlobHierarchySegment(delimiter: string, options?: Models.ContainerListBlobHierarchySegmentOptionalParams | coreHttp.ServiceCallback<Models.ListBlobsHierarchySegmentResponse>, callback?: coreHttp.ServiceCallback<Models.ListBlobsHierarchySegmentResponse>): Promise<Models.ContainerListBlobHierarchySegmentResponse> {\n    return this.client.sendOperationRequest(\n      {\n        delimiter,\n        options\n      },\n      listBlobHierarchySegmentOperationSpec,\n      callback) as Promise<Models.ContainerListBlobHierarchySegmentResponse>;\n  }\n\n  /**\n   * Returns the sku name and account kind\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ContainerGetAccountInfoResponse>\n   */\n  getAccountInfo(options?: coreHttp.RequestOptionsBase): Promise<Models.ContainerGetAccountInfoResponse>;\n  /**\n   * @param callback The callback\n   */\n  getAccountInfo(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAccountInfo(options: coreHttp.RequestOptionsBase, callback: coreHttp.ServiceCallback<void>): void;\n  getAccountInfo(options?: coreHttp.RequestOptionsBase | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.ContainerGetAccountInfoResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getAccountInfoOperationSpec,\n      callback) as Promise<Models.ContainerGetAccountInfoResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, true);\nconst createOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.access,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.defaultEncryptionScope,\n    Parameters.preventEncryptionScopeOverride\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.ContainerCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerCreateHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerGetPropertiesHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst deleteMethodOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.ContainerDeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerDeleteHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setMetadataOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp5\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerSetMetadataHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerSetMetadataHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getAccessPolicyOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp6\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0\n  ],\n  responses: {\n    200: {\n      bodyMapper: {\n        xmlElementName: \"SignedIdentifier\",\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SignedIdentifier\"\n            }\n          }\n        }\n      },\n      headersMapper: Mappers.ContainerGetAccessPolicyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerGetAccessPolicyHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setAccessPolicyOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp6\n  ],\n  headerParameters: [\n    Parameters.access,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  requestBody: {\n    parameterPath: [\n      \"options\",\n      \"containerAcl\"\n    ],\n    mapper: {\n      xmlName: \"SignedIdentifiers\",\n      xmlElementName: \"SignedIdentifier\",\n      serializedName: \"containerAcl\",\n      type: {\n        name: \"Sequence\",\n        element: {\n          type: {\n            name: \"Composite\",\n            className: \"SignedIdentifier\"\n          }\n        }\n      }\n    }\n  },\n  contentType: \"application/xml; charset=utf-8\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerSetAccessPolicyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerSetAccessPolicyHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst acquireLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp7,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.duration,\n    Parameters.proposedLeaseId0,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.ContainerAcquireLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerAcquireLeaseHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst releaseLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp7,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.leaseId1,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerReleaseLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerReleaseLeaseHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst renewLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp7,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.leaseId1,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action2,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerRenewLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerRenewLeaseHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst breakLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp7,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.breakPeriod,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action3,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.ContainerBreakLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerBreakLeaseHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst changeLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp7,\n    Parameters.restype2\n  ],\n  headerParameters: [\n    Parameters.leaseId1,\n    Parameters.proposedLeaseId1,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action4,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerChangeLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerChangeLeaseHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst listBlobFlatSegmentOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.prefix,\n    Parameters.marker0,\n    Parameters.maxPageSize,\n    Parameters.include1,\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp2\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListBlobsFlatSegmentResponse,\n      headersMapper: Mappers.ContainerListBlobFlatSegmentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerListBlobFlatSegmentHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst listBlobHierarchySegmentOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.prefix,\n    Parameters.delimiter,\n    Parameters.marker0,\n    Parameters.maxPageSize,\n    Parameters.include1,\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp2\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListBlobsHierarchySegmentResponse,\n      headersMapper: Mappers.ContainerListBlobHierarchySegmentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerListBlobHierarchySegmentHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getAccountInfoOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.restype1,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.ContainerGetAccountInfoHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ContainerGetAccountInfoHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n", "/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  BlobAbortCopyFromURLHeaders,\n  BlobAcquireLeaseHeaders,\n  BlobBreakLeaseHeaders,\n  BlobChangeLeaseHeaders,\n  BlobCopyFromURLHeaders,\n  BlobCreateSnapshotHeaders,\n  BlobDeleteHeaders,\n  BlobDownloadHeaders,\n  BlobGetAccessControlHeaders,\n  BlobGetAccountInfoHeaders,\n  BlobGetPropertiesHeaders,\n  BlobReleaseLeaseHeaders,\n  BlobRenameHeaders,\n  BlobRenewLeaseHeaders,\n  BlobSetAccessControlHeaders,\n  BlobSetHTTPHeadersHeaders,\n  BlobSetMetadataHeaders,\n  BlobSetTierHeaders,\n  BlobStartCopyFromURLHeaders,\n  BlobUndeleteHeaders,\n  DataLakeStorageError,\n  DataLakeStorageErrorError,\n  StorageError\n} from \"../models/mappers\";\n", "/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/blobMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a Blob. */\nexport class Blob {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a Blob.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The Download operation reads or downloads a blob from the system, including its metadata and\n   * properties. You can also call Download to read a snapshot.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobDownloadResponse>\n   */\n  download(options?: Models.BlobDownloadOptionalParams): Promise<Models.BlobDownloadResponse>;\n  /**\n   * @param callback The callback\n   */\n  download(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  download(options: Models.BlobDownloadOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  download(options?: Models.BlobDownloadOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobDownloadResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      downloadOperationSpec,\n      callback) as Promise<Models.BlobDownloadResponse>;\n  }\n\n  /**\n   * The Get Properties operation returns all user-defined metadata, standard HTTP properties, and\n   * system properties for the blob. It does not return the content of the blob.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobGetPropertiesResponse>\n   */\n  getProperties(options?: Models.BlobGetPropertiesOptionalParams): Promise<Models.BlobGetPropertiesResponse>;\n  /**\n   * @param callback The callback\n   */\n  getProperties(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getProperties(options: Models.BlobGetPropertiesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  getProperties(options?: Models.BlobGetPropertiesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobGetPropertiesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPropertiesOperationSpec,\n      callback) as Promise<Models.BlobGetPropertiesResponse>;\n  }\n\n  /**\n   * If the storage account's soft delete feature is disabled then, when a blob is deleted, it is\n   * permanently removed from the storage account. If the storage account's soft delete feature is\n   * enabled, then, when a blob is deleted, it is marked for deletion and becomes inaccessible\n   * immediately. However, the blob service retains the blob or snapshot for the number of days\n   * specified by the DeleteRetentionPolicy section of [Storage service properties]\n   * (Set-Blob-Service-Properties.md). After the specified number of days has passed, the blob's data\n   * is permanently removed from the storage account. Note that you continue to be charged for the\n   * soft-deleted blob's storage until it is permanently removed. Use the List Blobs API and specify\n   * the \"include=deleted\" query parameter to discover which blobs and snapshots have been soft\n   * deleted. You can then use the Undelete Blob API to restore a soft-deleted blob. All other\n   * operations on a soft-deleted blob or snapshot causes the service to return an HTTP status code\n   * of 404 (ResourceNotFound).\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobDeleteResponse>\n   */\n  deleteMethod(options?: Models.BlobDeleteMethodOptionalParams): Promise<Models.BlobDeleteResponse>;\n  /**\n   * @param callback The callback\n   */\n  deleteMethod(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(options: Models.BlobDeleteMethodOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  deleteMethod(options?: Models.BlobDeleteMethodOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobDeleteResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      deleteMethodOperationSpec,\n      callback) as Promise<Models.BlobDeleteResponse>;\n  }\n\n  /**\n   * Set the owner, group, permissions, or access control list for a blob.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobSetAccessControlResponse>\n   */\n  setAccessControl(options?: Models.BlobSetAccessControlOptionalParams): Promise<Models.BlobSetAccessControlResponse>;\n  /**\n   * @param callback The callback\n   */\n  setAccessControl(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setAccessControl(options: Models.BlobSetAccessControlOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setAccessControl(options?: Models.BlobSetAccessControlOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobSetAccessControlResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setAccessControlOperationSpec,\n      callback) as Promise<Models.BlobSetAccessControlResponse>;\n  }\n\n  /**\n   * Get the owner, group, permissions, or access control list for a blob.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobGetAccessControlResponse>\n   */\n  getAccessControl(options?: Models.BlobGetAccessControlOptionalParams): Promise<Models.BlobGetAccessControlResponse>;\n  /**\n   * @param callback The callback\n   */\n  getAccessControl(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAccessControl(options: Models.BlobGetAccessControlOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  getAccessControl(options?: Models.BlobGetAccessControlOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobGetAccessControlResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getAccessControlOperationSpec,\n      callback) as Promise<Models.BlobGetAccessControlResponse>;\n  }\n\n  /**\n   * Rename a blob/file.  By default, the destination is overwritten and if the destination already\n   * exists and has a lease the lease is broken.  This operation supports conditional HTTP requests.\n   * For more information, see [Specifying Conditional Headers for Blob Service\n   * Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).\n   * To fail if the destination already exists, use a conditional request with If-None-Match: \"*\".\n   * @param renameSource The file or directory to be renamed. The value must have the following\n   * format: \"/{filesysystem}/{path}\".  If \"x-ms-properties\" is specified, the properties will\n   * overwrite the existing properties; otherwise, the existing properties will be preserved.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobRenameResponse>\n   */\n  rename(renameSource: string, options?: Models.BlobRenameOptionalParams): Promise<Models.BlobRenameResponse>;\n  /**\n   * @param renameSource The file or directory to be renamed. The value must have the following\n   * format: \"/{filesysystem}/{path}\".  If \"x-ms-properties\" is specified, the properties will\n   * overwrite the existing properties; otherwise, the existing properties will be preserved.\n   * @param callback The callback\n   */\n  rename(renameSource: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param renameSource The file or directory to be renamed. The value must have the following\n   * format: \"/{filesysystem}/{path}\".  If \"x-ms-properties\" is specified, the properties will\n   * overwrite the existing properties; otherwise, the existing properties will be preserved.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  rename(renameSource: string, options: Models.BlobRenameOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  rename(renameSource: string, options?: Models.BlobRenameOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobRenameResponse> {\n    return this.client.sendOperationRequest(\n      {\n        renameSource,\n        options\n      },\n      renameOperationSpec,\n      callback) as Promise<Models.BlobRenameResponse>;\n  }\n\n  /**\n   * Undelete a blob that was previously soft deleted\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobUndeleteResponse>\n   */\n  undelete(options?: Models.BlobUndeleteOptionalParams): Promise<Models.BlobUndeleteResponse>;\n  /**\n   * @param callback The callback\n   */\n  undelete(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  undelete(options: Models.BlobUndeleteOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  undelete(options?: Models.BlobUndeleteOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobUndeleteResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      undeleteOperationSpec,\n      callback) as Promise<Models.BlobUndeleteResponse>;\n  }\n\n  /**\n   * The Set HTTP Headers operation sets system properties on the blob\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobSetHTTPHeadersResponse>\n   */\n  setHTTPHeaders(options?: Models.BlobSetHTTPHeadersOptionalParams): Promise<Models.BlobSetHTTPHeadersResponse>;\n  /**\n   * @param callback The callback\n   */\n  setHTTPHeaders(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setHTTPHeaders(options: Models.BlobSetHTTPHeadersOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setHTTPHeaders(options?: Models.BlobSetHTTPHeadersOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobSetHTTPHeadersResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setHTTPHeadersOperationSpec,\n      callback) as Promise<Models.BlobSetHTTPHeadersResponse>;\n  }\n\n  /**\n   * The Set Blob Metadata operation sets user-defined metadata for the specified blob as one or more\n   * name-value pairs\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobSetMetadataResponse>\n   */\n  setMetadata(options?: Models.BlobSetMetadataOptionalParams): Promise<Models.BlobSetMetadataResponse>;\n  /**\n   * @param callback The callback\n   */\n  setMetadata(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setMetadata(options: Models.BlobSetMetadataOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setMetadata(options?: Models.BlobSetMetadataOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobSetMetadataResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      setMetadataOperationSpec,\n      callback) as Promise<Models.BlobSetMetadataResponse>;\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobAcquireLeaseResponse>\n   */\n  acquireLease(options?: Models.BlobAcquireLeaseOptionalParams): Promise<Models.BlobAcquireLeaseResponse>;\n  /**\n   * @param callback The callback\n   */\n  acquireLease(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  acquireLease(options: Models.BlobAcquireLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  acquireLease(options?: Models.BlobAcquireLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobAcquireLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      acquireLeaseOperationSpec,\n      callback) as Promise<Models.BlobAcquireLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobReleaseLeaseResponse>\n   */\n  releaseLease(leaseId: string, options?: Models.BlobReleaseLeaseOptionalParams): Promise<Models.BlobReleaseLeaseResponse>;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param callback The callback\n   */\n  releaseLease(leaseId: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  releaseLease(leaseId: string, options: Models.BlobReleaseLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  releaseLease(leaseId: string, options?: Models.BlobReleaseLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobReleaseLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        leaseId,\n        options\n      },\n      releaseLeaseOperationSpec,\n      callback) as Promise<Models.BlobReleaseLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobRenewLeaseResponse>\n   */\n  renewLease(leaseId: string, options?: Models.BlobRenewLeaseOptionalParams): Promise<Models.BlobRenewLeaseResponse>;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param callback The callback\n   */\n  renewLease(leaseId: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  renewLease(leaseId: string, options: Models.BlobRenewLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  renewLease(leaseId: string, options?: Models.BlobRenewLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobRenewLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        leaseId,\n        options\n      },\n      renewLeaseOperationSpec,\n      callback) as Promise<Models.BlobRenewLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   * (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   * (String) for a list of valid GUID string formats.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobChangeLeaseResponse>\n   */\n  changeLease(leaseId: string, proposedLeaseId: string, options?: Models.BlobChangeLeaseOptionalParams): Promise<Models.BlobChangeLeaseResponse>;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   * (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   * (String) for a list of valid GUID string formats.\n   * @param callback The callback\n   */\n  changeLease(leaseId: string, proposedLeaseId: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param proposedLeaseId Proposed lease ID, in a GUID string format. The Blob service returns 400\n   * (Invalid request) if the proposed lease ID is not in the correct format. See Guid Constructor\n   * (String) for a list of valid GUID string formats.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  changeLease(leaseId: string, proposedLeaseId: string, options: Models.BlobChangeLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  changeLease(leaseId: string, proposedLeaseId: string, options?: Models.BlobChangeLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobChangeLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        leaseId,\n        proposedLeaseId,\n        options\n      },\n      changeLeaseOperationSpec,\n      callback) as Promise<Models.BlobChangeLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease Blob operation establishes and manages a lock on a blob for write and delete\n   * operations\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobBreakLeaseResponse>\n   */\n  breakLease(options?: Models.BlobBreakLeaseOptionalParams): Promise<Models.BlobBreakLeaseResponse>;\n  /**\n   * @param callback The callback\n   */\n  breakLease(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  breakLease(options: Models.BlobBreakLeaseOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  breakLease(options?: Models.BlobBreakLeaseOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobBreakLeaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      breakLeaseOperationSpec,\n      callback) as Promise<Models.BlobBreakLeaseResponse>;\n  }\n\n  /**\n   * The Create Snapshot operation creates a read-only snapshot of a blob\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobCreateSnapshotResponse>\n   */\n  createSnapshot(options?: Models.BlobCreateSnapshotOptionalParams): Promise<Models.BlobCreateSnapshotResponse>;\n  /**\n   * @param callback The callback\n   */\n  createSnapshot(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  createSnapshot(options: Models.BlobCreateSnapshotOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  createSnapshot(options?: Models.BlobCreateSnapshotOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobCreateSnapshotResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      createSnapshotOperationSpec,\n      callback) as Promise<Models.BlobCreateSnapshotResponse>;\n  }\n\n  /**\n   * The Start Copy From URL operation copies a blob or an internet resource to a new blob.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobStartCopyFromURLResponse>\n   */\n  startCopyFromURL(copySource: string, options?: Models.BlobStartCopyFromURLOptionalParams): Promise<Models.BlobStartCopyFromURLResponse>;\n  /**\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param callback The callback\n   */\n  startCopyFromURL(copySource: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  startCopyFromURL(copySource: string, options: Models.BlobStartCopyFromURLOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  startCopyFromURL(copySource: string, options?: Models.BlobStartCopyFromURLOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobStartCopyFromURLResponse> {\n    return this.client.sendOperationRequest(\n      {\n        copySource,\n        options\n      },\n      startCopyFromURLOperationSpec,\n      callback) as Promise<Models.BlobStartCopyFromURLResponse>;\n  }\n\n  /**\n   * The Copy From URL operation copies a blob or an internet resource to a new blob. It will not\n   * return a response until the copy is complete.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobCopyFromURLResponse>\n   */\n  copyFromURL(copySource: string, options?: Models.BlobCopyFromURLOptionalParams): Promise<Models.BlobCopyFromURLResponse>;\n  /**\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param callback The callback\n   */\n  copyFromURL(copySource: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  copyFromURL(copySource: string, options: Models.BlobCopyFromURLOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  copyFromURL(copySource: string, options?: Models.BlobCopyFromURLOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobCopyFromURLResponse> {\n    return this.client.sendOperationRequest(\n      {\n        copySource,\n        options\n      },\n      copyFromURLOperationSpec,\n      callback) as Promise<Models.BlobCopyFromURLResponse>;\n  }\n\n  /**\n   * The Abort Copy From URL operation aborts a pending Copy From URL operation, and leaves a\n   * destination blob with zero length and full metadata.\n   * @param copyId The copy identifier provided in the x-ms-copy-id header of the original Copy Blob\n   * operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobAbortCopyFromURLResponse>\n   */\n  abortCopyFromURL(copyId: string, options?: Models.BlobAbortCopyFromURLOptionalParams): Promise<Models.BlobAbortCopyFromURLResponse>;\n  /**\n   * @param copyId The copy identifier provided in the x-ms-copy-id header of the original Copy Blob\n   * operation.\n   * @param callback The callback\n   */\n  abortCopyFromURL(copyId: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param copyId The copy identifier provided in the x-ms-copy-id header of the original Copy Blob\n   * operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  abortCopyFromURL(copyId: string, options: Models.BlobAbortCopyFromURLOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  abortCopyFromURL(copyId: string, options?: Models.BlobAbortCopyFromURLOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobAbortCopyFromURLResponse> {\n    return this.client.sendOperationRequest(\n      {\n        copyId,\n        options\n      },\n      abortCopyFromURLOperationSpec,\n      callback) as Promise<Models.BlobAbortCopyFromURLResponse>;\n  }\n\n  /**\n   * The Set Tier operation sets the tier on a blob. The operation is allowed on a page blob in a\n   * premium storage account and on a block blob in a blob storage account (locally redundant storage\n   * only). A premium page blob's tier determines the allowed size, IOPS, and bandwidth of the blob.\n   * A block blob's tier determines Hot/Cool/Archive storage type. This operation does not update the\n   * blob's ETag.\n   * @param tier Indicates the tier to be set on the blob. Possible values include: 'P4', 'P6',\n   * 'P10', 'P15', 'P20', 'P30', 'P40', 'P50', 'P60', 'P70', 'P80', 'Hot', 'Cool', 'Archive'\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobSetTierResponse>\n   */\n  setTier(tier: Models.AccessTier, options?: Models.BlobSetTierOptionalParams): Promise<Models.BlobSetTierResponse>;\n  /**\n   * @param tier Indicates the tier to be set on the blob. Possible values include: 'P4', 'P6',\n   * 'P10', 'P15', 'P20', 'P30', 'P40', 'P50', 'P60', 'P70', 'P80', 'Hot', 'Cool', 'Archive'\n   * @param callback The callback\n   */\n  setTier(tier: Models.AccessTier, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param tier Indicates the tier to be set on the blob. Possible values include: 'P4', 'P6',\n   * 'P10', 'P15', 'P20', 'P30', 'P40', 'P50', 'P60', 'P70', 'P80', 'Hot', 'Cool', 'Archive'\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  setTier(tier: Models.AccessTier, options: Models.BlobSetTierOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  setTier(tier: Models.AccessTier, options?: Models.BlobSetTierOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobSetTierResponse> {\n    return this.client.sendOperationRequest(\n      {\n        tier,\n        options\n      },\n      setTierOperationSpec,\n      callback) as Promise<Models.BlobSetTierResponse>;\n  }\n\n  /**\n   * Returns the sku name and account kind\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlobGetAccountInfoResponse>\n   */\n  getAccountInfo(options?: coreHttp.RequestOptionsBase): Promise<Models.BlobGetAccountInfoResponse>;\n  /**\n   * @param callback The callback\n   */\n  getAccountInfo(callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getAccountInfo(options: coreHttp.RequestOptionsBase, callback: coreHttp.ServiceCallback<void>): void;\n  getAccountInfo(options?: coreHttp.RequestOptionsBase | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlobGetAccountInfoResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getAccountInfoOperationSpec,\n      callback) as Promise<Models.BlobGetAccountInfoResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, true);\nconst downloadOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.snapshot,\n    Parameters.timeoutInSeconds\n  ],\n  headerParameters: [\n    Parameters.range0,\n    Parameters.rangeGetContentMD5,\n    Parameters.rangeGetContentCRC64,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      bodyMapper: {\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Stream\"\n        }\n      },\n      headersMapper: Mappers.BlobDownloadHeaders\n    },\n    206: {\n      bodyMapper: {\n        serializedName: \"parsedResponse\",\n        type: {\n          name: \"Stream\"\n        }\n      },\n      headersMapper: Mappers.BlobDownloadHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobDownloadHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.snapshot,\n    Parameters.timeoutInSeconds\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobGetPropertiesHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst deleteMethodOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.snapshot,\n    Parameters.timeoutInSeconds\n  ],\n  headerParameters: [\n    Parameters.deleteSnapshots,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobDeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobDeleteHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setAccessControlOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"{filesystem}/{path}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.action5\n  ],\n  headerParameters: [\n    Parameters.owner,\n    Parameters.group,\n    Parameters.posixPermissions,\n    Parameters.posixAcl,\n    Parameters.requestId,\n    Parameters.version,\n    Parameters.leaseId0,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetAccessControlHeaders\n    },\n    default: {\n      bodyMapper: Mappers.DataLakeStorageError,\n      headersMapper: Mappers.BlobSetAccessControlHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getAccessControlOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"HEAD\",\n  path: \"{filesystem}/{path}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.upn,\n    Parameters.action6\n  ],\n  headerParameters: [\n    Parameters.requestId,\n    Parameters.version,\n    Parameters.leaseId0,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobGetAccessControlHeaders\n    },\n    default: {\n      bodyMapper: Mappers.DataLakeStorageError,\n      headersMapper: Mappers.BlobGetAccessControlHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst renameOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{filesystem}/{path}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.pathRenameMode\n  ],\n  headerParameters: [\n    Parameters.renameSource,\n    Parameters.directoryProperties,\n    Parameters.posixPermissions,\n    Parameters.posixUmask,\n    Parameters.sourceLeaseId,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.cacheControl,\n    Parameters.contentType,\n    Parameters.contentEncoding,\n    Parameters.contentLanguage,\n    Parameters.contentDisposition,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.BlobRenameHeaders\n    },\n    default: {\n      bodyMapper: Mappers.DataLakeStorageError,\n      headersMapper: Mappers.BlobRenameHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst undeleteOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp8\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobUndeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobUndeleteHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setHTTPHeadersOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentMD5,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentDisposition,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetHTTPHeadersHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetHTTPHeadersHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setMetadataOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp5\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.encryptionScope,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetMetadataHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetMetadataHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst acquireLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp7\n  ],\n  headerParameters: [\n    Parameters.duration,\n    Parameters.proposedLeaseId0,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.BlobAcquireLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobAcquireLeaseHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst releaseLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp7\n  ],\n  headerParameters: [\n    Parameters.leaseId1,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action1,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobReleaseLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobReleaseLeaseHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst renewLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp7\n  ],\n  headerParameters: [\n    Parameters.leaseId1,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action2,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobRenewLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobRenewLeaseHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst changeLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp7\n  ],\n  headerParameters: [\n    Parameters.leaseId1,\n    Parameters.proposedLeaseId1,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action4,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobChangeLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobChangeLeaseHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst breakLeaseOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp7\n  ],\n  headerParameters: [\n    Parameters.breakPeriod,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.action3,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobBreakLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobBreakLeaseHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst createSnapshotOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp9\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.encryptionScope,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.leaseId0\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.BlobCreateSnapshotHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobCreateSnapshotHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst startCopyFromURLOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.tier0,\n    Parameters.rehydratePriority,\n    Parameters.copySource,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.leaseId0\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobStartCopyFromURLHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobStartCopyFromURLHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst copyFromURLOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds\n  ],\n  headerParameters: [\n    Parameters.metadata,\n    Parameters.tier0,\n    Parameters.copySource,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.sourceContentMD5,\n    Parameters.xMsRequiresSync,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.leaseId0\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.BlobCopyFromURLHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobCopyFromURLHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst abortCopyFromURLOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.copyId,\n    Parameters.timeoutInSeconds,\n    Parameters.comp10\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.copyActionAbortConstant,\n    Parameters.leaseId0\n  ],\n  responses: {\n    204: {\n      headersMapper: Mappers.BlobAbortCopyFromURLHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobAbortCopyFromURLHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst setTierOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp11\n  ],\n  headerParameters: [\n    Parameters.tier1,\n    Parameters.rehydratePriority,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobSetTierHeaders\n    },\n    202: {\n      headersMapper: Mappers.BlobSetTierHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobSetTierHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getAccountInfoOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.restype1,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.version\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.BlobGetAccountInfoHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlobGetAccountInfoHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n", "/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  ClearRange,\n  PageBlobClearPagesHeaders,\n  PageBlobCopyIncrementalHeaders,\n  PageBlobCreateHeaders,\n  PageBlobGetPageRangesDiffHeaders,\n  PageBlobGetPageRangesHeaders,\n  PageBlobResizeHeaders,\n  PageBlobUpdateSequenceNumberHeaders,\n  PageBlobUploadPagesFromURLHeaders,\n  PageBlobUploadPagesHeaders,\n  PageList,\n  PageRange,\n  StorageError\n} from \"../models/mappers\";\n", "/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/pageBlobMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a PageBlob. */\nexport class PageBlob {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a PageBlob.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The Create operation creates a new page blob.\n   * @param contentLength The length of the request.\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobCreateResponse>\n   */\n  create(contentLength: number, blobContentLength: number, options?: Models.PageBlobCreateOptionalParams): Promise<Models.PageBlobCreateResponse>;\n  /**\n   * @param contentLength The length of the request.\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param callback The callback\n   */\n  create(contentLength: number, blobContentLength: number, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param contentLength The length of the request.\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(contentLength: number, blobContentLength: number, options: Models.PageBlobCreateOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  create(contentLength: number, blobContentLength: number, options?: Models.PageBlobCreateOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PageBlobCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        contentLength,\n        blobContentLength,\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.PageBlobCreateResponse>;\n  }\n\n  /**\n   * The Upload Pages operation writes a range of pages to a page blob\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobUploadPagesResponse>\n   */\n  uploadPages(body: coreHttp.HttpRequestBody, contentLength: number, options?: Models.PageBlobUploadPagesOptionalParams): Promise<Models.PageBlobUploadPagesResponse>;\n  /**\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param callback The callback\n   */\n  uploadPages(body: coreHttp.HttpRequestBody, contentLength: number, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  uploadPages(body: coreHttp.HttpRequestBody, contentLength: number, options: Models.PageBlobUploadPagesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  uploadPages(body: coreHttp.HttpRequestBody, contentLength: number, options?: Models.PageBlobUploadPagesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PageBlobUploadPagesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        body,\n        contentLength,\n        options\n      },\n      uploadPagesOperationSpec,\n      callback) as Promise<Models.PageBlobUploadPagesResponse>;\n  }\n\n  /**\n   * The Clear Pages operation clears a set of pages from a page blob\n   * @param contentLength The length of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobClearPagesResponse>\n   */\n  clearPages(contentLength: number, options?: Models.PageBlobClearPagesOptionalParams): Promise<Models.PageBlobClearPagesResponse>;\n  /**\n   * @param contentLength The length of the request.\n   * @param callback The callback\n   */\n  clearPages(contentLength: number, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param contentLength The length of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  clearPages(contentLength: number, options: Models.PageBlobClearPagesOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  clearPages(contentLength: number, options?: Models.PageBlobClearPagesOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PageBlobClearPagesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        contentLength,\n        options\n      },\n      clearPagesOperationSpec,\n      callback) as Promise<Models.PageBlobClearPagesResponse>;\n  }\n\n  /**\n   * The Upload Pages operation writes a range of pages to a page blob where the contents are read\n   * from a URL\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param sourceRange Bytes of source data in the specified range. The length of this range should\n   * match the ContentLength header and x-ms-range/Range destination range header.\n   * @param contentLength The length of the request.\n   * @param range The range of bytes to which the source range would be written. The range should be\n   * 512 aligned and range-end is required.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobUploadPagesFromURLResponse>\n   */\n  uploadPagesFromURL(sourceUrl: string, sourceRange: string, contentLength: number, range: string, options?: Models.PageBlobUploadPagesFromURLOptionalParams): Promise<Models.PageBlobUploadPagesFromURLResponse>;\n  /**\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param sourceRange Bytes of source data in the specified range. The length of this range should\n   * match the ContentLength header and x-ms-range/Range destination range header.\n   * @param contentLength The length of the request.\n   * @param range The range of bytes to which the source range would be written. The range should be\n   * 512 aligned and range-end is required.\n   * @param callback The callback\n   */\n  uploadPagesFromURL(sourceUrl: string, sourceRange: string, contentLength: number, range: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param sourceRange Bytes of source data in the specified range. The length of this range should\n   * match the ContentLength header and x-ms-range/Range destination range header.\n   * @param contentLength The length of the request.\n   * @param range The range of bytes to which the source range would be written. The range should be\n   * 512 aligned and range-end is required.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  uploadPagesFromURL(sourceUrl: string, sourceRange: string, contentLength: number, range: string, options: Models.PageBlobUploadPagesFromURLOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  uploadPagesFromURL(sourceUrl: string, sourceRange: string, contentLength: number, range: string, options?: Models.PageBlobUploadPagesFromURLOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PageBlobUploadPagesFromURLResponse> {\n    return this.client.sendOperationRequest(\n      {\n        sourceUrl,\n        sourceRange,\n        contentLength,\n        range,\n        options\n      },\n      uploadPagesFromURLOperationSpec,\n      callback) as Promise<Models.PageBlobUploadPagesFromURLResponse>;\n  }\n\n  /**\n   * The Get Page Ranges operation returns the list of valid page ranges for a page blob or snapshot\n   * of a page blob\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobGetPageRangesResponse>\n   */\n  getPageRanges(options?: Models.PageBlobGetPageRangesOptionalParams): Promise<Models.PageBlobGetPageRangesResponse>;\n  /**\n   * @param callback The callback\n   */\n  getPageRanges(callback: coreHttp.ServiceCallback<Models.PageList>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getPageRanges(options: Models.PageBlobGetPageRangesOptionalParams, callback: coreHttp.ServiceCallback<Models.PageList>): void;\n  getPageRanges(options?: Models.PageBlobGetPageRangesOptionalParams | coreHttp.ServiceCallback<Models.PageList>, callback?: coreHttp.ServiceCallback<Models.PageList>): Promise<Models.PageBlobGetPageRangesResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPageRangesOperationSpec,\n      callback) as Promise<Models.PageBlobGetPageRangesResponse>;\n  }\n\n  /**\n   * The Get Page Ranges Diff operation returns the list of valid page ranges for a page blob that\n   * were changed between target blob and previous snapshot.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobGetPageRangesDiffResponse>\n   */\n  getPageRangesDiff(options?: Models.PageBlobGetPageRangesDiffOptionalParams): Promise<Models.PageBlobGetPageRangesDiffResponse>;\n  /**\n   * @param callback The callback\n   */\n  getPageRangesDiff(callback: coreHttp.ServiceCallback<Models.PageList>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getPageRangesDiff(options: Models.PageBlobGetPageRangesDiffOptionalParams, callback: coreHttp.ServiceCallback<Models.PageList>): void;\n  getPageRangesDiff(options?: Models.PageBlobGetPageRangesDiffOptionalParams | coreHttp.ServiceCallback<Models.PageList>, callback?: coreHttp.ServiceCallback<Models.PageList>): Promise<Models.PageBlobGetPageRangesDiffResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      getPageRangesDiffOperationSpec,\n      callback) as Promise<Models.PageBlobGetPageRangesDiffResponse>;\n  }\n\n  /**\n   * Resize the Blob\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobResizeResponse>\n   */\n  resize(blobContentLength: number, options?: Models.PageBlobResizeOptionalParams): Promise<Models.PageBlobResizeResponse>;\n  /**\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param callback The callback\n   */\n  resize(blobContentLength: number, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param blobContentLength This header specifies the maximum size for the page blob, up to 1 TB.\n   * The page blob size must be aligned to a 512-byte boundary.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  resize(blobContentLength: number, options: Models.PageBlobResizeOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  resize(blobContentLength: number, options?: Models.PageBlobResizeOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PageBlobResizeResponse> {\n    return this.client.sendOperationRequest(\n      {\n        blobContentLength,\n        options\n      },\n      resizeOperationSpec,\n      callback) as Promise<Models.PageBlobResizeResponse>;\n  }\n\n  /**\n   * Update the sequence number of the blob\n   * @param sequenceNumberAction Required if the x-ms-blob-sequence-number header is set for the\n   * request. This property applies to page blobs only. This property indicates how the service\n   * should modify the blob's sequence number. Possible values include: 'max', 'update', 'increment'\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobUpdateSequenceNumberResponse>\n   */\n  updateSequenceNumber(sequenceNumberAction: Models.SequenceNumberActionType, options?: Models.PageBlobUpdateSequenceNumberOptionalParams): Promise<Models.PageBlobUpdateSequenceNumberResponse>;\n  /**\n   * @param sequenceNumberAction Required if the x-ms-blob-sequence-number header is set for the\n   * request. This property applies to page blobs only. This property indicates how the service\n   * should modify the blob's sequence number. Possible values include: 'max', 'update', 'increment'\n   * @param callback The callback\n   */\n  updateSequenceNumber(sequenceNumberAction: Models.SequenceNumberActionType, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param sequenceNumberAction Required if the x-ms-blob-sequence-number header is set for the\n   * request. This property applies to page blobs only. This property indicates how the service\n   * should modify the blob's sequence number. Possible values include: 'max', 'update', 'increment'\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  updateSequenceNumber(sequenceNumberAction: Models.SequenceNumberActionType, options: Models.PageBlobUpdateSequenceNumberOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  updateSequenceNumber(sequenceNumberAction: Models.SequenceNumberActionType, options?: Models.PageBlobUpdateSequenceNumberOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PageBlobUpdateSequenceNumberResponse> {\n    return this.client.sendOperationRequest(\n      {\n        sequenceNumberAction,\n        options\n      },\n      updateSequenceNumberOperationSpec,\n      callback) as Promise<Models.PageBlobUpdateSequenceNumberResponse>;\n  }\n\n  /**\n   * The Copy Incremental operation copies a snapshot of the source page blob to a destination page\n   * blob. The snapshot is copied such that only the differential changes between the previously\n   * copied snapshot are transferred to the destination. The copied snapshots are complete copies of\n   * the original snapshot and can be read or copied from as usual. This API is supported since REST\n   * version 2016-05-31.\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.PageBlobCopyIncrementalResponse>\n   */\n  copyIncremental(copySource: string, options?: Models.PageBlobCopyIncrementalOptionalParams): Promise<Models.PageBlobCopyIncrementalResponse>;\n  /**\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param callback The callback\n   */\n  copyIncremental(copySource: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param copySource Specifies the name of the source page blob snapshot. This value is a URL of up\n   * to 2 KB in length that specifies a page blob snapshot. The value should be URL-encoded as it\n   * would appear in a request URI. The source blob must either be public or must be authenticated\n   * via a shared access signature.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  copyIncremental(copySource: string, options: Models.PageBlobCopyIncrementalOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  copyIncremental(copySource: string, options?: Models.PageBlobCopyIncrementalOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.PageBlobCopyIncrementalResponse> {\n    return this.client.sendOperationRequest(\n      {\n        copySource,\n        options\n      },\n      copyIncrementalOperationSpec,\n      callback) as Promise<Models.PageBlobCopyIncrementalResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, true);\nconst createOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.tier0,\n    Parameters.metadata,\n    Parameters.encryptionScope,\n    Parameters.blobContentLength,\n    Parameters.blobSequenceNumber,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.blobType0,\n    Parameters.blobContentType,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentMD5,\n    Parameters.blobCacheControl,\n    Parameters.blobContentDisposition,\n    Parameters.leaseId0,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobCreateHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst uploadPagesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp12\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n    Parameters.range0,\n    Parameters.encryptionScope,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.pageWrite0,\n    Parameters.leaseId0,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifSequenceNumberLessThanOrEqualTo,\n    Parameters.ifSequenceNumberLessThan,\n    Parameters.ifSequenceNumberEqualTo,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      required: true,\n      serializedName: \"body\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"application/octet-stream\",\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobUploadPagesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobUploadPagesHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst clearPagesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp12\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.range0,\n    Parameters.encryptionScope,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.pageWrite1,\n    Parameters.leaseId0,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifSequenceNumberLessThanOrEqualTo,\n    Parameters.ifSequenceNumberLessThan,\n    Parameters.ifSequenceNumberEqualTo,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobClearPagesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobClearPagesHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst uploadPagesFromURLOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp12\n  ],\n  headerParameters: [\n    Parameters.sourceUrl,\n    Parameters.sourceRange0,\n    Parameters.sourceContentMD5,\n    Parameters.sourceContentCrc64,\n    Parameters.contentLength,\n    Parameters.range1,\n    Parameters.encryptionScope,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.pageWrite0,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.leaseId0,\n    Parameters.ifSequenceNumberLessThanOrEqualTo,\n    Parameters.ifSequenceNumberLessThan,\n    Parameters.ifSequenceNumberEqualTo,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.PageBlobUploadPagesFromURLHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobUploadPagesFromURLHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getPageRangesOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.snapshot,\n    Parameters.timeoutInSeconds,\n    Parameters.comp13\n  ],\n  headerParameters: [\n    Parameters.range0,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.PageList,\n      headersMapper: Mappers.PageBlobGetPageRangesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobGetPageRangesHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getPageRangesDiffOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.snapshot,\n    Parameters.timeoutInSeconds,\n    Parameters.prevsnapshot,\n    Parameters.comp13\n  ],\n  headerParameters: [\n    Parameters.prevSnapshotUrl,\n    Parameters.range0,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.PageList,\n      headersMapper: Mappers.PageBlobGetPageRangesDiffHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobGetPageRangesDiffHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst resizeOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.encryptionScope,\n    Parameters.blobContentLength,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.PageBlobResizeHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobResizeHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst updateSequenceNumberOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp0\n  ],\n  headerParameters: [\n    Parameters.sequenceNumberAction,\n    Parameters.blobSequenceNumber,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    200: {\n      headersMapper: Mappers.PageBlobUpdateSequenceNumberHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobUpdateSequenceNumberHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst copyIncrementalOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp14\n  ],\n  headerParameters: [\n    Parameters.copySource,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    202: {\n      headersMapper: Mappers.PageBlobCopyIncrementalHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.PageBlobCopyIncrementalHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n", "/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  AppendBlobAppendBlockFromUrlHeaders,\n  AppendBlobAppendBlockHeaders,\n  AppendBlobCreateHeaders,\n  StorageError\n} from \"../models/mappers\";\n", "/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/appendBlobMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a AppendBlob. */\nexport class AppendBlob {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a AppendBlob.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The Create Append Blob operation creates a new append blob.\n   * @param contentLength The length of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.AppendBlobCreateResponse>\n   */\n  create(contentLength: number, options?: Models.AppendBlobCreateOptionalParams): Promise<Models.AppendBlobCreateResponse>;\n  /**\n   * @param contentLength The length of the request.\n   * @param callback The callback\n   */\n  create(contentLength: number, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param contentLength The length of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(contentLength: number, options: Models.AppendBlobCreateOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  create(contentLength: number, options?: Models.AppendBlobCreateOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.AppendBlobCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        contentLength,\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.AppendBlobCreateResponse>;\n  }\n\n  /**\n   * The Append Block operation commits a new block of data to the end of an existing append blob.\n   * The Append Block operation is permitted only if the blob was created with x-ms-blob-type set to\n   * AppendBlob. Append Block is supported only on version 2015-02-21 version or later.\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.AppendBlobAppendBlockResponse>\n   */\n  appendBlock(body: coreHttp.HttpRequestBody, contentLength: number, options?: Models.AppendBlobAppendBlockOptionalParams): Promise<Models.AppendBlobAppendBlockResponse>;\n  /**\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param callback The callback\n   */\n  appendBlock(body: coreHttp.HttpRequestBody, contentLength: number, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  appendBlock(body: coreHttp.HttpRequestBody, contentLength: number, options: Models.AppendBlobAppendBlockOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  appendBlock(body: coreHttp.HttpRequestBody, contentLength: number, options?: Models.AppendBlobAppendBlockOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.AppendBlobAppendBlockResponse> {\n    return this.client.sendOperationRequest(\n      {\n        body,\n        contentLength,\n        options\n      },\n      appendBlockOperationSpec,\n      callback) as Promise<Models.AppendBlobAppendBlockResponse>;\n  }\n\n  /**\n   * The Append Block operation commits a new block of data to the end of an existing append blob\n   * where the contents are read from a source url. The Append Block operation is permitted only if\n   * the blob was created with x-ms-blob-type set to AppendBlob. Append Block is supported only on\n   * version 2015-02-21 version or later.\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param contentLength The length of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.AppendBlobAppendBlockFromUrlResponse>\n   */\n  appendBlockFromUrl(sourceUrl: string, contentLength: number, options?: Models.AppendBlobAppendBlockFromUrlOptionalParams): Promise<Models.AppendBlobAppendBlockFromUrlResponse>;\n  /**\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param contentLength The length of the request.\n   * @param callback The callback\n   */\n  appendBlockFromUrl(sourceUrl: string, contentLength: number, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param contentLength The length of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  appendBlockFromUrl(sourceUrl: string, contentLength: number, options: Models.AppendBlobAppendBlockFromUrlOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  appendBlockFromUrl(sourceUrl: string, contentLength: number, options?: Models.AppendBlobAppendBlockFromUrlOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.AppendBlobAppendBlockFromUrlResponse> {\n    return this.client.sendOperationRequest(\n      {\n        sourceUrl,\n        contentLength,\n        options\n      },\n      appendBlockFromUrlOperationSpec,\n      callback) as Promise<Models.AppendBlobAppendBlockFromUrlResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, true);\nconst createOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.encryptionScope,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.blobType1,\n    Parameters.blobContentType,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentMD5,\n    Parameters.blobCacheControl,\n    Parameters.blobContentDisposition,\n    Parameters.leaseId0,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.AppendBlobCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.AppendBlobCreateHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst appendBlockOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp15\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n    Parameters.encryptionScope,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.maxSize,\n    Parameters.appendPosition,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      required: true,\n      serializedName: \"body\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"application/octet-stream\",\n  responses: {\n    201: {\n      headersMapper: Mappers.AppendBlobAppendBlockHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.AppendBlobAppendBlockHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst appendBlockFromUrlOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp15\n  ],\n  headerParameters: [\n    Parameters.sourceUrl,\n    Parameters.sourceRange1,\n    Parameters.sourceContentMD5,\n    Parameters.sourceContentCrc64,\n    Parameters.contentLength,\n    Parameters.transactionalContentMD5,\n    Parameters.encryptionScope,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.leaseId0,\n    Parameters.maxSize,\n    Parameters.appendPosition,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.AppendBlobAppendBlockFromUrlHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.AppendBlobAppendBlockFromUrlHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n", "/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  Block,\n  BlockBlobCommitBlockListHeaders,\n  BlockBlobGetBlockListHeaders,\n  BlockBlobStageBlockFromURLHeaders,\n  BlockBlobStageBlockHeaders,\n  BlockBlobUploadHeaders,\n  BlockList,\n  BlockLookupList,\n  StorageError\n} from \"../models/mappers\";\n", "/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/blockBlobMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\n\n/** Class representing a BlockBlob. */\nexport class BlockBlob {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Create a BlockBlob.\n   * @param {StorageClientContext} client Reference to the service client.\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * The Upload Block Blob operation updates the content of an existing block blob. Updating an\n   * existing block blob overwrites any existing metadata on the blob. Partial updates are not\n   * supported with Put Blob; the content of the existing blob is overwritten with the content of the\n   * new blob. To perform a partial update of the content of a block blob, use the Put Block List\n   * operation.\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlockBlobUploadResponse>\n   */\n  upload(body: coreHttp.HttpRequestBody, contentLength: number, options?: Models.BlockBlobUploadOptionalParams): Promise<Models.BlockBlobUploadResponse>;\n  /**\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param callback The callback\n   */\n  upload(body: coreHttp.HttpRequestBody, contentLength: number, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param body Initial data\n   * @param contentLength The length of the request.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  upload(body: coreHttp.HttpRequestBody, contentLength: number, options: Models.BlockBlobUploadOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  upload(body: coreHttp.HttpRequestBody, contentLength: number, options?: Models.BlockBlobUploadOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlockBlobUploadResponse> {\n    return this.client.sendOperationRequest(\n      {\n        body,\n        contentLength,\n        options\n      },\n      uploadOperationSpec,\n      callback) as Promise<Models.BlockBlobUploadResponse>;\n  }\n\n  /**\n   * The Stage Block operation creates a new block to be committed as part of a blob\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the\n   * string must be less than or equal to 64 bytes in size. For a given blob, the length of the value\n   * specified for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlockBlobStageBlockResponse>\n   */\n  stageBlock(blockId: string, contentLength: number, body: coreHttp.HttpRequestBody, options?: Models.BlockBlobStageBlockOptionalParams): Promise<Models.BlockBlobStageBlockResponse>;\n  /**\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the\n   * string must be less than or equal to 64 bytes in size. For a given blob, the length of the value\n   * specified for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param callback The callback\n   */\n  stageBlock(blockId: string, contentLength: number, body: coreHttp.HttpRequestBody, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the\n   * string must be less than or equal to 64 bytes in size. For a given blob, the length of the value\n   * specified for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param body Initial data\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  stageBlock(blockId: string, contentLength: number, body: coreHttp.HttpRequestBody, options: Models.BlockBlobStageBlockOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  stageBlock(blockId: string, contentLength: number, body: coreHttp.HttpRequestBody, options?: Models.BlockBlobStageBlockOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlockBlobStageBlockResponse> {\n    return this.client.sendOperationRequest(\n      {\n        blockId,\n        contentLength,\n        body,\n        options\n      },\n      stageBlockOperationSpec,\n      callback) as Promise<Models.BlockBlobStageBlockResponse>;\n  }\n\n  /**\n   * The Stage Block operation creates a new block to be committed as part of a blob where the\n   * contents are read from a URL.\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the\n   * string must be less than or equal to 64 bytes in size. For a given blob, the length of the value\n   * specified for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlockBlobStageBlockFromURLResponse>\n   */\n  stageBlockFromURL(blockId: string, contentLength: number, sourceUrl: string, options?: Models.BlockBlobStageBlockFromURLOptionalParams): Promise<Models.BlockBlobStageBlockFromURLResponse>;\n  /**\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the\n   * string must be less than or equal to 64 bytes in size. For a given blob, the length of the value\n   * specified for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param callback The callback\n   */\n  stageBlockFromURL(blockId: string, contentLength: number, sourceUrl: string, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param blockId A valid Base64 string value that identifies the block. Prior to encoding, the\n   * string must be less than or equal to 64 bytes in size. For a given blob, the length of the value\n   * specified for the blockid parameter must be the same size for each block.\n   * @param contentLength The length of the request.\n   * @param sourceUrl Specify a URL to the copy source.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  stageBlockFromURL(blockId: string, contentLength: number, sourceUrl: string, options: Models.BlockBlobStageBlockFromURLOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  stageBlockFromURL(blockId: string, contentLength: number, sourceUrl: string, options?: Models.BlockBlobStageBlockFromURLOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlockBlobStageBlockFromURLResponse> {\n    return this.client.sendOperationRequest(\n      {\n        blockId,\n        contentLength,\n        sourceUrl,\n        options\n      },\n      stageBlockFromURLOperationSpec,\n      callback) as Promise<Models.BlockBlobStageBlockFromURLResponse>;\n  }\n\n  /**\n   * The Commit Block List operation writes a blob by specifying the list of block IDs that make up\n   * the blob. In order to be written as part of a blob, a block must have been successfully written\n   * to the server in a prior Put Block operation. You can call Put Block List to update a blob by\n   * uploading only those blocks that have changed, then committing the new and existing blocks\n   * together. You can do this by specifying whether to commit a block from the committed block list\n   * or from the uncommitted block list, or to commit the most recently uploaded version of the\n   * block, whichever list it may belong to.\n   * @param blocks\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlockBlobCommitBlockListResponse>\n   */\n  commitBlockList(blocks: Models.BlockLookupList, options?: Models.BlockBlobCommitBlockListOptionalParams): Promise<Models.BlockBlobCommitBlockListResponse>;\n  /**\n   * @param blocks\n   * @param callback The callback\n   */\n  commitBlockList(blocks: Models.BlockLookupList, callback: coreHttp.ServiceCallback<void>): void;\n  /**\n   * @param blocks\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  commitBlockList(blocks: Models.BlockLookupList, options: Models.BlockBlobCommitBlockListOptionalParams, callback: coreHttp.ServiceCallback<void>): void;\n  commitBlockList(blocks: Models.BlockLookupList, options?: Models.BlockBlobCommitBlockListOptionalParams | coreHttp.ServiceCallback<void>, callback?: coreHttp.ServiceCallback<void>): Promise<Models.BlockBlobCommitBlockListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        blocks,\n        options\n      },\n      commitBlockListOperationSpec,\n      callback) as Promise<Models.BlockBlobCommitBlockListResponse>;\n  }\n\n  /**\n   * The Get Block List operation retrieves the list of blocks that have been uploaded as part of a\n   * block blob\n   * @param listType Specifies whether to return the list of committed blocks, the list of\n   * uncommitted blocks, or both lists together. Possible values include: 'committed', 'uncommitted',\n   * 'all'\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BlockBlobGetBlockListResponse>\n   */\n  getBlockList(listType: Models.BlockListType, options?: Models.BlockBlobGetBlockListOptionalParams): Promise<Models.BlockBlobGetBlockListResponse>;\n  /**\n   * @param listType Specifies whether to return the list of committed blocks, the list of\n   * uncommitted blocks, or both lists together. Possible values include: 'committed', 'uncommitted',\n   * 'all'\n   * @param callback The callback\n   */\n  getBlockList(listType: Models.BlockListType, callback: coreHttp.ServiceCallback<Models.BlockList>): void;\n  /**\n   * @param listType Specifies whether to return the list of committed blocks, the list of\n   * uncommitted blocks, or both lists together. Possible values include: 'committed', 'uncommitted',\n   * 'all'\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getBlockList(listType: Models.BlockListType, options: Models.BlockBlobGetBlockListOptionalParams, callback: coreHttp.ServiceCallback<Models.BlockList>): void;\n  getBlockList(listType: Models.BlockListType, options?: Models.BlockBlobGetBlockListOptionalParams | coreHttp.ServiceCallback<Models.BlockList>, callback?: coreHttp.ServiceCallback<Models.BlockList>): Promise<Models.BlockBlobGetBlockListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        listType,\n        options\n      },\n      getBlockListOperationSpec,\n      callback) as Promise<Models.BlockBlobGetBlockListResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, true);\nconst uploadOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds\n  ],\n  headerParameters: [\n    Parameters.transactionalContentMD5,\n    Parameters.contentLength,\n    Parameters.metadata,\n    Parameters.encryptionScope,\n    Parameters.tier0,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.blobType2,\n    Parameters.blobContentType,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentMD5,\n    Parameters.blobCacheControl,\n    Parameters.blobContentDisposition,\n    Parameters.leaseId0,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      required: true,\n      serializedName: \"body\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"application/octet-stream\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobUploadHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobUploadHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst stageBlockOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.blockId,\n    Parameters.timeoutInSeconds,\n    Parameters.comp16\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n    Parameters.encryptionScope,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm\n  ],\n  requestBody: {\n    parameterPath: \"body\",\n    mapper: {\n      required: true,\n      serializedName: \"body\",\n      type: {\n        name: \"Stream\"\n      }\n    }\n  },\n  contentType: \"application/octet-stream\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobStageBlockHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobStageBlockHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst stageBlockFromURLOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.blockId,\n    Parameters.timeoutInSeconds,\n    Parameters.comp16\n  ],\n  headerParameters: [\n    Parameters.contentLength,\n    Parameters.sourceUrl,\n    Parameters.sourceRange1,\n    Parameters.sourceContentMD5,\n    Parameters.sourceContentCrc64,\n    Parameters.encryptionScope,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.leaseId0,\n    Parameters.sourceIfModifiedSince,\n    Parameters.sourceIfUnmodifiedSince,\n    Parameters.sourceIfMatch,\n    Parameters.sourceIfNoneMatch\n  ],\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobStageBlockFromURLHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobStageBlockFromURLHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst commitBlockListOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp17\n  ],\n  headerParameters: [\n    Parameters.transactionalContentMD5,\n    Parameters.transactionalContentCrc64,\n    Parameters.metadata,\n    Parameters.encryptionScope,\n    Parameters.tier0,\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.blobCacheControl,\n    Parameters.blobContentType,\n    Parameters.blobContentEncoding,\n    Parameters.blobContentLanguage,\n    Parameters.blobContentMD5,\n    Parameters.blobContentDisposition,\n    Parameters.leaseId0,\n    Parameters.encryptionKey,\n    Parameters.encryptionKeySha256,\n    Parameters.encryptionAlgorithm,\n    Parameters.ifModifiedSince,\n    Parameters.ifUnmodifiedSince,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  requestBody: {\n    parameterPath: \"blocks\",\n    mapper: {\n      ...Mappers.BlockLookupList,\n      required: true\n    }\n  },\n  contentType: \"application/xml; charset=utf-8\",\n  responses: {\n    201: {\n      headersMapper: Mappers.BlockBlobCommitBlockListHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobCommitBlockListHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n\nconst getBlockListOperationSpec: coreHttp.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"{containerName}/{blob}\",\n  urlParameters: [\n    Parameters.url\n  ],\n  queryParameters: [\n    Parameters.snapshot,\n    Parameters.listType,\n    Parameters.timeoutInSeconds,\n    Parameters.comp17\n  ],\n  headerParameters: [\n    Parameters.version,\n    Parameters.requestId,\n    Parameters.leaseId0\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.BlockList,\n      headersMapper: Mappers.BlockBlobGetBlockListHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.BlockBlobGetBlockListHeaders\n    }\n  },\n  isXML: true,\n  serializer\n};\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The @azure/logger configuration for this package.\n */\nexport const logger = createClientLogger(\"storage-blob\");\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nexport const SDK_VERSION: string = \"12.1.2\";\nexport const SERVICE_VERSION: string = \"2019-07-07\";\n\nexport const BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES: number = 256 * 1024 * 1024; // 256MB\nexport const BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES: number = 100 * 1024 * 1024; // 100MB\nexport const BLOCK_BLOB_MAX_BLOCKS: number = 50000;\nexport const DEFAULT_BLOCK_BUFFER_SIZE_BYTES: number = 8 * 1024 * 1024; // 8MB\nexport const DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES: number = 4 * 1024 * 1024; // 4MB\nexport const DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS: number = 5;\n/**\n * The OAuth scope to use with Azure Storage.\n */\nexport const StorageOAuthScopes: string | string[] = \"https://storage.azure.com/.default\";\n\nexport const URLConstants = {\n  Parameters: {\n    FORCE_BROWSER_NO_CACHE: \"_\",\n    SIGNATURE: \"sig\",\n    SNAPSHOT: \"snapshot\",\n    TIMEOUT: \"timeout\"\n  }\n};\n\nexport const HTTPURLConnection = {\n  HTTP_ACCEPTED: 202,\n  HTTP_CONFLICT: 409,\n  HTTP_NOT_FOUND: 404,\n  HTTP_PRECON_FAILED: 412,\n  HTTP_RANGE_NOT_SATISFIABLE: 416\n};\n\nexport const HeaderConstants = {\n  AUTHORIZATION: \"Authorization\",\n  AUTHORIZATION_SCHEME: \"Bearer\",\n  CONTENT_ENCODING: \"Content-Encoding\",\n  CONTENT_ID: \"Content-ID\",\n  CONTENT_LANGUAGE: \"Content-Language\",\n  CONTENT_LENGTH: \"Content-Length\",\n  CONTENT_MD5: \"Content-Md5\",\n  CONTENT_TRANSFER_ENCODING: \"Content-Transfer-Encoding\",\n  CONTENT_TYPE: \"Content-Type\",\n  COOKIE: \"Cookie\",\n  DATE: \"date\",\n  IF_MATCH: \"if-match\",\n  IF_MODIFIED_SINCE: \"if-modified-since\",\n  IF_NONE_MATCH: \"if-none-match\",\n  IF_UNMODIFIED_SINCE: \"if-unmodified-since\",\n  PREFIX_FOR_STORAGE: \"x-ms-\",\n  RANGE: \"Range\",\n  USER_AGENT: \"User-Agent\",\n  X_MS_CLIENT_REQUEST_ID: \"x-ms-client-request-id\",\n  X_MS_COPY_SOURCE: \"x-ms-copy-source\",\n  X_MS_DATE: \"x-ms-date\",\n  X_MS_ERROR_CODE: \"x-ms-error-code\",\n  X_MS_VERSION: \"x-ms-version\"\n};\n\nexport const ETagNone = \"\";\nexport const ETagAny = \"*\";\n\nexport const SIZE_1_MB = 1 * 1024 * 1024;\nexport const BATCH_MAX_REQUEST = 256;\nexport const BATCH_MAX_PAYLOAD_IN_BYTES = 4 * SIZE_1_MB;\nexport const HTTP_LINE_ENDING = \"\\r\\n\";\nexport const HTTP_VERSION_1_1 = \"HTTP/1.1\";\n\nexport const EncryptionAlgorithmAES25 = \"AES256\";\n\nexport const DevelopmentConnectionString = `DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;`;\n\nexport const StorageBlobLoggingAllowedHeaderNames = [\n  \"Access-Control-Allow-Origin\",\n  \"Cache-Control\",\n  \"Content-Length\",\n  \"Content-Type\",\n  \"Date\",\n  \"Request-Id\",\n  \"traceparent\",\n  \"Transfer-Encoding\",\n  \"User-Agent\",\n  \"x-ms-client-request-id\",\n  \"x-ms-date\",\n  \"x-ms-error-code\",\n  \"x-ms-request-id\",\n  \"x-ms-return-client-request-id\",\n  \"x-ms-version\",\n  \"Accept-Ranges\",\n  \"Content-Disposition\",\n  \"Content-Encoding\",\n  \"Content-Language\",\n  \"Content-MD5\",\n  \"Content-Range\",\n  \"ETag\",\n  \"Last-Modified\",\n  \"Server\",\n  \"Vary\",\n  \"x-ms-content-crc64\",\n  \"x-ms-copy-action\",\n  \"x-ms-copy-completion-time\",\n  \"x-ms-copy-id\",\n  \"x-ms-copy-progress\",\n  \"x-ms-copy-status\",\n  \"x-ms-has-immutability-policy\",\n  \"x-ms-has-legal-hold\",\n  \"x-ms-lease-state\",\n  \"x-ms-lease-status\",\n  \"x-ms-range\",\n  \"x-ms-request-server-encrypted\",\n  \"x-ms-server-encrypted\",\n  \"x-ms-snapshot\",\n  \"x-ms-source-range\",\n  \"If-Match\",\n  \"If-Modified-Since\",\n  \"If-None-Match\",\n  \"If-Unmodified-Since\",\n  \"x-ms-access-tier\",\n  \"x-ms-access-tier-change-time\",\n  \"x-ms-access-tier-inferred\",\n  \"x-ms-account-kind\",\n  \"x-ms-archive-status\",\n  \"x-ms-blob-append-offset\",\n  \"x-ms-blob-cache-control\",\n  \"x-ms-blob-committed-block-count\",\n  \"x-ms-blob-condition-appendpos\",\n  \"x-ms-blob-condition-maxsize\",\n  \"x-ms-blob-content-disposition\",\n  \"x-ms-blob-content-encoding\",\n  \"x-ms-blob-content-language\",\n  \"x-ms-blob-content-length\",\n  \"x-ms-blob-content-md5\",\n  \"x-ms-blob-content-type\",\n  \"x-ms-blob-public-access\",\n  \"x-ms-blob-sequence-number\",\n  \"x-ms-blob-type\",\n  \"x-ms-copy-destination-snapshot\",\n  \"x-ms-creation-time\",\n  \"x-ms-default-encryption-scope\",\n  \"x-ms-delete-snapshots\",\n  \"x-ms-delete-type-permanent\",\n  \"x-ms-deny-encryption-scope-override\",\n  \"x-ms-encryption-algorithm\",\n  \"x-ms-if-sequence-number-eq\",\n  \"x-ms-if-sequence-number-le\",\n  \"x-ms-if-sequence-number-lt\",\n  \"x-ms-incremental-copy\",\n  \"x-ms-lease-action\",\n  \"x-ms-lease-break-period\",\n  \"x-ms-lease-duration\",\n  \"x-ms-lease-id\",\n  \"x-ms-lease-time\",\n  \"x-ms-page-write\",\n  \"x-ms-proposed-lease-id\",\n  \"x-ms-range-get-content-md5\",\n  \"x-ms-rehydrate-priority\",\n  \"x-ms-sequence-number-action\",\n  \"x-ms-sku-name\",\n  \"x-ms-source-content-md5\",\n  \"x-ms-source-if-match\",\n  \"x-ms-source-if-modified-since\",\n  \"x-ms-source-if-none-match\",\n  \"x-ms-source-if-unmodified-since\",\n  \"x-ms-tag-count\",\n  \"x-ms-encryption-key-sha256\"\n];\n\nexport const StorageBlobLoggingAllowedQueryParameters = [\n  \"comp\",\n  \"maxresults\",\n  \"rscc\",\n  \"rscd\",\n  \"rsce\",\n  \"rscl\",\n  \"rsct\",\n  \"se\",\n  \"si\",\n  \"sip\",\n  \"sp\",\n  \"spr\",\n  \"sr\",\n  \"srt\",\n  \"ss\",\n  \"st\",\n  \"sv\",\n  \"include\",\n  \"marker\",\n  \"prefix\",\n  \"copyid\",\n  \"restype\",\n  \"blockid\",\n  \"blocklisttype\",\n  \"delimiter\",\n  \"prevsnapshot\",\n  \"ske\",\n  \"skoid\",\n  \"sks\",\n  \"skt\",\n  \"sktid\",\n  \"skv\",\n  \"snapshot\"\n];\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { HttpHeaders, isNode, URLBuilder } from \"@azure/core-http\";\nimport { HeaderConstants, URLConstants, DevelopmentConnectionString } from \"./constants\";\n\n/**\n * Reserved URL characters must be properly escaped for Storage services like Blob or File.\n *\n * ## URL encode and escape strategy for JS SDKs\n *\n * When customers pass a URL string into XxxClient classes constrcutor, the URL string may already be URL encoded or not.\n * But before sending to Azure Storage server, the URL must be encoded. However, it's hard for a SDK to guess whether the URL\n * string has been encoded or not. We have 2 potential strategies, and chose strategy two for the XxxClient constructors.\n *\n * ### Strategy One: Assume the customer URL string is not encoded, and always encode URL string in SDK.\n *\n * This is what legacy V2 SDK does, simple and works for most of the cases.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%253A\" and send to server. A blob named \"b%3A\" will be created.\n *\n * But this strategy will make it not possible to create a blob with \"?\" in it's name. Because when customer URL string is\n * \"http://account.blob.core.windows.net/con/blob?name\", the \"?name\" will be treated as URL paramter instead of blob name.\n * If customer URL string is \"http://account.blob.core.windows.net/con/blob%3Fname\", a blob named \"blob%3Fname\" will be created.\n * V2 SDK doesn't have this issue because it doesn't allow customer pass in a full URL, it accepts a separate blob name and encodeURIComponent for it.\n * We cannot accept a SDK cannot create a blob name with \"?\". So we implement strategy two:\n *\n * ### Strategy Two: SDK doesn't assume the URL has been encoded or not. It will just escape the special characters.\n *\n * This is what V10 Blob Go SDK does. It accepts a URL type in Go, and call url.EscapedPath() to escape the special chars unescaped.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will escape \":\" like \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%3A\" to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%253A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%253A\" to server. A blob named \"b%3A\" will be created.\n *\n * This strategy gives us flexibility to create with any special characters. But \"%\" will be treated as a special characters, if the URL string\n * is not encoded, there shouldn't a \"%\" in the URL string, otherwise the URL is not a valid URL.\n * If customer needs to create a blob with \"%\" in it's blob name, use \"%25\" insead of \"%\". Just like above 3rd sample.\n * And following URL strings are invalid:\n * - \"http://account.blob.core.windows.net/con/b%\"\n * - \"http://account.blob.core.windows.net/con/b%2\"\n * - \"http://account.blob.core.windows.net/con/b%G\"\n *\n * Another special character is \"?\", use \"%2F\" to represent a blob name with \"?\" in a URL string.\n *\n * ### Strategy for containerName, blobName or other specific XXXName parameters in methods such as `containerClient.getBlobClient(blobName)`\n *\n * We will apply strategy one, and call encodeURIComponent for these parameters like blobName. Because what customers passes in is a plain name instead of a URL.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-shares--directories--files--and-metadata\n *\n * @export\n * @param {string} url\n * @returns {string}\n */\nexport function escapeURLPath(url: string): string {\n  const urlParsed = URLBuilder.parse(url);\n\n  let path = urlParsed.getPath();\n  path = path || \"/\";\n\n  path = escape(path);\n  urlParsed.setPath(path);\n\n  return urlParsed.toString();\n}\n\nexport interface ConnectionString {\n  kind: \"AccountConnString\" | \"SASConnString\";\n  url: string;\n  accountName: string;\n  accountKey?: any;\n  accountSas?: string;\n  proxyUri?: string; // Development Connection String may contain proxyUri\n}\n\nfunction getProxyUriFromDevConnString(connectionString: string): string {\n  // Development Connection String\n  // https://docs.microsoft.com/en-us/azure/storage/common/storage-configure-connection-string#connect-to-the-emulator-account-using-the-well-known-account-name-and-key\n  let proxyUri = \"\";\n  if (connectionString.search(\"DevelopmentStorageProxyUri=\") !== -1) {\n    // CONNECTION_STRING=UseDevelopmentStorage=true;DevelopmentStorageProxyUri=http://myProxyUri\n    const matchCredentials = connectionString.split(\";\");\n    for (const element of matchCredentials) {\n      if (element.trim().startsWith(\"DevelopmentStorageProxyUri=\")) {\n        proxyUri = element.trim().match(\"DevelopmentStorageProxyUri=(.*)\")![1];\n      }\n    }\n  }\n  return proxyUri;\n}\n\nexport function getValueInConnString(\n  connectionString: string,\n  argument:\n    | \"BlobEndpoint\"\n    | \"AccountName\"\n    | \"AccountKey\"\n    | \"DefaultEndpointsProtocol\"\n    | \"EndpointSuffix\"\n    | \"SharedAccessSignature\"\n) {\n  const elements = connectionString.split(\";\");\n  for (const element of elements) {\n    if (element.trim().startsWith(argument)) {\n      return element.trim().match(argument + \"=(.*)\")![1];\n    }\n  }\n  return \"\";\n}\n\n/**\n * Extracts the parts of an Azure Storage account connection string.\n *\n * @export\n * @param {string} connectionString Connection string.\n * @returns {ConnectionString}  String key value pairs of the storage account's url and credentials.\n */\nexport function extractConnectionStringParts(connectionString: string): ConnectionString {\n  let proxyUri = \"\";\n\n  if (connectionString.startsWith(\"UseDevelopmentStorage=true\")) {\n    // Development connection string\n    proxyUri = getProxyUriFromDevConnString(connectionString);\n    connectionString = DevelopmentConnectionString;\n  }\n\n  // Matching BlobEndpoint in the Account connection string\n  let blobEndpoint = getValueInConnString(connectionString, \"BlobEndpoint\");\n  // Slicing off '/' at the end if exists\n  // (The methods that use `extractConnectionStringParts` expect the url to not have `/` at the end)\n  blobEndpoint = blobEndpoint.endsWith(\"/\") ? blobEndpoint.slice(0, -1) : blobEndpoint;\n\n  if (\n    connectionString.search(\"DefaultEndpointsProtocol=\") !== -1 &&\n    connectionString.search(\"AccountKey=\") !== -1\n  ) {\n    // Account connection string\n\n    let defaultEndpointsProtocol = \"\";\n    let accountName = \"\";\n    let accountKey = Buffer.from(\"accountKey\", \"base64\");\n    let endpointSuffix = \"\";\n\n    // Get account name and key\n    accountName = getValueInConnString(connectionString, \"AccountName\");\n    accountKey = Buffer.from(getValueInConnString(connectionString, \"AccountKey\"), \"base64\");\n\n    if (!blobEndpoint) {\n      // BlobEndpoint is not present in the Account connection string\n      // Can be obtained from `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`\n\n      defaultEndpointsProtocol = getValueInConnString(connectionString, \"DefaultEndpointsProtocol\");\n      const protocol = defaultEndpointsProtocol!.toLowerCase();\n      if (protocol !== \"https\" && protocol !== \"http\") {\n        throw new Error(\n          \"Invalid DefaultEndpointsProtocol in the provided Connection String. Expecting 'https' or 'http'\"\n        );\n      }\n\n      endpointSuffix = getValueInConnString(connectionString, \"EndpointSuffix\");\n      if (!endpointSuffix) {\n        throw new Error(\"Invalid EndpointSuffix in the provided Connection String\");\n      }\n      blobEndpoint = `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`;\n    }\n\n    if (!accountName) {\n      throw new Error(\"Invalid AccountName in the provided Connection String\");\n    } else if (accountKey.length === 0) {\n      throw new Error(\"Invalid AccountKey in the provided Connection String\");\n    }\n\n    return {\n      kind: \"AccountConnString\",\n      url: blobEndpoint,\n      accountName,\n      accountKey,\n      proxyUri\n    };\n  } else {\n    // SAS connection string\n\n    let accountSas = getValueInConnString(connectionString, \"SharedAccessSignature\");\n    let accountName = getAccountNameFromUrl(blobEndpoint);\n    if (!blobEndpoint) {\n      throw new Error(\"Invalid BlobEndpoint in the provided SAS Connection String\");\n    } else if (!accountSas) {\n      throw new Error(\"Invalid SharedAccessSignature in the provided SAS Connection String\");\n    } else if (!accountName) {\n      throw new Error(\"Invalid AccountName in the provided SAS Connection String\");\n    }\n\n    return { kind: \"SASConnString\", url: blobEndpoint, accountName, accountSas };\n  }\n}\n\n/**\n * Internal escape method implmented Strategy Two mentioned in escapeURL() description.\n *\n * @param {string} text\n * @returns {string}\n */\nfunction escape(text: string): string {\n  return encodeURIComponent(text)\n    .replace(/%2F/g, \"/\") // Don't escape for \"/\"\n    .replace(/'/g, \"%27\") // Escape for \"'\"\n    .replace(/\\+/g, \"%20\")\n    .replace(/%25/g, \"%\"); // Revert encoded \"%\"\n}\n\n/**\n * Append a string to URL path. Will remove duplicated \"/\" in front of the string\n * when URL path ends with a \"/\".\n *\n * @export\n * @param {string} url Source URL string\n * @param {string} name String to be appended to URL\n * @returns {string} An updated URL string\n */\nexport function appendToURLPath(url: string, name: string): string {\n  const urlParsed = URLBuilder.parse(url);\n\n  let path = urlParsed.getPath();\n  path = path ? (path.endsWith(\"/\") ? `${path}${name}` : `${path}/${name}`) : name;\n  urlParsed.setPath(path);\n\n  return urlParsed.toString();\n}\n\n/**\n * Set URL parameter name and value. If name exists in URL parameters, old value\n * will be replaced by name key. If not provide value, the parameter will be deleted.\n *\n * @export\n * @param {string} url Source URL string\n * @param {string} name Parameter name\n * @param {string} [value] Parameter value\n * @returns {string} An updated URL string\n */\nexport function setURLParameter(url: string, name: string, value?: string): string {\n  const urlParsed = URLBuilder.parse(url);\n  urlParsed.setQueryParameter(name, value);\n  return urlParsed.toString();\n}\n\n/**\n * Get URL parameter by name.\n *\n * @export\n * @param {string} url\n * @param {string} name\n * @returns {(string | string[] | undefined)}\n */\nexport function getURLParameter(url: string, name: string): string | string[] | undefined {\n  const urlParsed = URLBuilder.parse(url);\n  return urlParsed.getQueryParameterValue(name);\n}\n\n/**\n * Set URL host.\n *\n * @export\n * @param {string} url Source URL string\n * @param {string} host New host string\n * @returns An updated URL string\n */\nexport function setURLHost(url: string, host: string): string {\n  const urlParsed = URLBuilder.parse(url);\n  urlParsed.setHost(host);\n  return urlParsed.toString();\n}\n\n/**\n * Get URL path from an URL string.\n *\n * @export\n * @param {string} url Source URL string\n * @returns {(string | undefined)}\n */\nexport function getURLPath(url: string): string | undefined {\n  const urlParsed = URLBuilder.parse(url);\n  return urlParsed.getPath();\n}\n\n/**\n * Get URL scheme from an URL string.\n *\n * @export\n * @param {string} url Source URL string\n * @returns {(string | undefined)}\n */\nexport function getURLScheme(url: string): string | undefined {\n  const urlParsed = URLBuilder.parse(url);\n  return urlParsed.getScheme();\n}\n\n/**\n * Get URL path and query from an URL string.\n *\n * @export\n * @param {string} url Source URL string\n * @returns {(string | undefined)}\n */\nexport function getURLPathAndQuery(url: string): string | undefined {\n  const urlParsed = URLBuilder.parse(url);\n  const pathString = urlParsed.getPath();\n  if (!pathString) {\n    throw new RangeError(\"Invalid url without valid path.\");\n  }\n\n  let queryString = urlParsed.getQuery() || \"\";\n  queryString = queryString.trim();\n  if (queryString != \"\") {\n    queryString = queryString.startsWith(\"?\") ? queryString : `?${queryString}`; // Ensure query string start with '?'\n  }\n\n  return `${pathString}${queryString}`;\n}\n\n/**\n * Get URL query key value pairs from an URL string.\n *\n * @export\n * @param {string} url\n * @returns {{[key: string]: string}}\n */\nexport function getURLQueries(url: string): { [key: string]: string } {\n  let queryString = URLBuilder.parse(url).getQuery();\n  if (!queryString) {\n    return {};\n  }\n\n  queryString = queryString.trim();\n  queryString = queryString.startsWith(\"?\") ? queryString.substr(1) : queryString;\n\n  let querySubStrings: string[] = queryString.split(\"&\");\n  querySubStrings = querySubStrings.filter((value: string) => {\n    const indexOfEqual = value.indexOf(\"=\");\n    const lastIndexOfEqual = value.lastIndexOf(\"=\");\n    return (\n      indexOfEqual > 0 && indexOfEqual === lastIndexOfEqual && lastIndexOfEqual < value.length - 1\n    );\n  });\n\n  const queries: { [key: string]: string } = {};\n  for (const querySubString of querySubStrings) {\n    const splitResults = querySubString.split(\"=\");\n    const key: string = splitResults[0];\n    const value: string = splitResults[1];\n    queries[key] = value;\n  }\n\n  return queries;\n}\n\n/**\n * Rounds a date off to seconds.\n *\n * @export\n * @param {Date} date\n * @param {boolean} [withMilliseconds=true] If true, YYYY-MM-DDThh:mm:ss.fffffffZ will be returned;\n *                                          If false, YYYY-MM-DDThh:mm:ssZ will be returned.\n * @returns {string} Date string in ISO8061 format, with or without 7 milliseconds component\n */\nexport function truncatedISO8061Date(date: Date, withMilliseconds: boolean = true): string {\n  // Date.toISOString() will return like \"2018-10-29T06:34:36.139Z\"\n  const dateString = date.toISOString();\n\n  return withMilliseconds\n    ? dateString.substring(0, dateString.length - 1) + \"0000\" + \"Z\"\n    : dateString.substring(0, dateString.length - 5) + \"Z\";\n}\n\n/**\n * Base64 encode.\n *\n * @export\n * @param {string} content\n * @returns {string}\n */\nexport function base64encode(content: string): string {\n  return !isNode ? btoa(content) : Buffer.from(content).toString(\"base64\");\n}\n\n/**\n * Base64 decode.\n *\n * @export\n * @param {string} encodedString\n * @returns {string}\n */\nexport function base64decode(encodedString: string): string {\n  return !isNode ? atob(encodedString) : Buffer.from(encodedString, \"base64\").toString();\n}\n\n/**\n * Generate a 64 bytes base64 block ID string.\n *\n * @export\n * @param {number} blockIndex\n * @returns {string}\n */\nexport function generateBlockID(blockIDPrefix: string, blockIndex: number): string {\n  // To generate a 64 bytes base64 string, source string should be 48\n  const maxSourceStringLength = 48;\n\n  // A blob can have a maximum of 100,000 uncommitted blocks at any given time\n  const maxBlockIndexLength = 6;\n\n  const maxAllowedBlockIDPrefixLength = maxSourceStringLength - maxBlockIndexLength;\n\n  if (blockIDPrefix.length > maxAllowedBlockIDPrefixLength) {\n    blockIDPrefix = blockIDPrefix.slice(0, maxAllowedBlockIDPrefixLength);\n  }\n  const res =\n    blockIDPrefix +\n    padStart(blockIndex.toString(), maxSourceStringLength - blockIDPrefix.length, \"0\");\n  return base64encode(res);\n}\n\n/**\n * Delay specified time interval.\n *\n * @export\n * @param {number} timeInMs\n * @param {AbortSignalLike} [aborter]\n * @param {Error} [abortError]\n */\nexport async function delay(timeInMs: number, aborter?: AbortSignalLike, abortError?: Error) {\n  return new Promise((resolve, reject) => {\n    let timeout: any;\n\n    const abortHandler = () => {\n      if (timeout !== undefined) {\n        clearTimeout(timeout);\n      }\n      reject(abortError);\n    };\n\n    const resolveHandler = () => {\n      if (aborter !== undefined) {\n        aborter.removeEventListener(\"abort\", abortHandler);\n      }\n      resolve();\n    };\n\n    timeout = setTimeout(resolveHandler, timeInMs);\n    if (aborter !== undefined) {\n      aborter.addEventListener(\"abort\", abortHandler);\n    }\n  });\n}\n\n/**\n * String.prototype.padStart()\n *\n * @export\n * @param {string} currentString\n * @param {number} targetLength\n * @param {string} [padString=\" \"]\n * @returns {string}\n */\nexport function padStart(\n  currentString: string,\n  targetLength: number,\n  padString: string = \" \"\n): string {\n  if (String.prototype.padStart) {\n    return currentString.padStart(targetLength, padString);\n  }\n\n  padString = padString || \" \";\n  if (currentString.length > targetLength) {\n    return currentString;\n  } else {\n    targetLength = targetLength - currentString.length;\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + currentString;\n  }\n}\n\nexport function sanitizeURL(url: string): string {\n  let safeURL: string = url;\n  if (getURLParameter(safeURL, URLConstants.Parameters.SIGNATURE)) {\n    safeURL = setURLParameter(safeURL, URLConstants.Parameters.SIGNATURE, \"*****\");\n  }\n\n  return safeURL;\n}\n\nexport function sanitizeHeaders(originalHeader: HttpHeaders): HttpHeaders {\n  const headers: HttpHeaders = new HttpHeaders();\n  for (const header of originalHeader.headersArray()) {\n    if (header.name.toLowerCase() === HeaderConstants.AUTHORIZATION.toLowerCase()) {\n      headers.set(header.name, \"*****\");\n    } else if (header.name.toLowerCase() === HeaderConstants.X_MS_COPY_SOURCE) {\n      headers.set(header.name, sanitizeURL(header.value));\n    } else {\n      headers.set(header.name, header.value);\n    }\n  }\n\n  return headers;\n}\n/**\n * If two strings are equal when compared case insensitive.\n *\n * @export\n * @param {string} str1\n * @param {string} str2\n * @returns {boolean}\n */\nexport function iEqual(str1: string, str2: string): boolean {\n  return str1.toLocaleLowerCase() === str2.toLocaleLowerCase();\n}\n\n/**\n * Extracts account name from the url\n * @param {string} url url to extract the account name from\n * @returns {string} with the account name\n */\nexport function getAccountNameFromUrl(url: string): string {\n  const parsedUrl: URLBuilder = URLBuilder.parse(url);\n  let accountName;\n  try {\n    if (parsedUrl.getHost()!.split(\".\")[1] === \"blob\") {\n      // `${defaultEndpointsProtocol}://${accountName}.blob.${endpointSuffix}`;\n      accountName = parsedUrl.getHost()!.split(\".\")[0];\n    } else {\n      // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/\n      // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/\n      // .getPath() -> /devstoreaccount1/\n      accountName = parsedUrl.getPath()!.split(\"/\")[1];\n    }\n\n    if (!accountName) {\n      throw new Error(\"Provided accountName is invalid.\");\n    }\n    return accountName;\n  } catch (error) {\n    throw new Error(\"Unable to extract accountName with provided information.\");\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  BaseRequestPolicy,\n  HttpOperationResponse,\n  isNode,\n  RequestPolicy,\n  RequestPolicyOptions,\n  WebResource\n} from \"@azure/core-http\";\n\nimport { HeaderConstants, URLConstants } from \"../utils/constants\";\nimport { setURLParameter } from \"../utils/utils.common\";\n\n/**\n * StorageBrowserPolicy will handle differences between Node.js and browser runtime, including:\n *\n * 1. Browsers cache GET/HEAD requests by adding conditional headers such as 'IF_MODIFIED_SINCE'.\n * StorageBrowserPolicy is a policy used to add a timestamp query to GET/HEAD request URL\n * thus avoid the browser cache.\n *\n * 2. Remove cookie header for security\n *\n * 3. Remove content-length header to avoid browsers warning\n *\n * @class StorageBrowserPolicy\n * @extends {BaseRequestPolicy}\n */\nexport class StorageBrowserPolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of StorageBrowserPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @memberof StorageBrowserPolicy\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof StorageBrowserPolicy\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (isNode) {\n      return this._nextPolicy.sendRequest(request);\n    }\n\n    if (request.method.toUpperCase() === \"GET\" || request.method.toUpperCase() === \"HEAD\") {\n      request.url = setURLParameter(\n        request.url,\n        URLConstants.Parameters.FORCE_BROWSER_NO_CACHE,\n        new Date().getTime().toString()\n      );\n    }\n\n    request.headers.remove(HeaderConstants.COOKIE);\n\n    // According to XHR standards, content-length should be fully controlled by browsers\n    request.headers.remove(HeaderConstants.CONTENT_LENGTH);\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport { StorageBrowserPolicy } from \"./policies/StorageBrowserPolicy\";\nexport { StorageBrowserPolicy };\n\n/**\n * StorageBrowserPolicyFactory is a factory class helping generating StorageBrowserPolicy objects.\n *\n * @export\n * @class StorageBrowserPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nexport class StorageBrowserPolicyFactory implements RequestPolicyFactory {\n  /**\n   * Creates a StorageBrowserPolicyFactory object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {StorageBrowserPolicy}\n   * @memberof StorageBrowserPolicyFactory\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageBrowserPolicy {\n    return new StorageBrowserPolicy(nextPolicy, options);\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { AbortError } from \"@azure/abort-controller\";\n\nimport {\n  AbortSignalLike,\n  BaseRequestPolicy,\n  HttpOperationResponse,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  RestError,\n  WebResource\n} from \"@azure/core-http\";\n\nimport { StorageRetryOptions } from \"../StorageRetryPolicyFactory\";\nimport { URLConstants } from \"../utils/constants\";\nimport { delay, setURLHost, setURLParameter } from \"../utils/utils.common\";\nimport { logger } from \"../log\";\n\n/**\n * A factory method used to generated a RetryPolicy factory.\n *\n * @export\n * @param {StorageRetryOptions} retryOptions\n * @returns\n */\nexport function NewRetryPolicyFactory(retryOptions?: StorageRetryOptions): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageRetryPolicy => {\n      return new StorageRetryPolicy(nextPolicy, options, retryOptions);\n    }\n  };\n}\n\n/**\n * RetryPolicy types.\n *\n * @export\n * @enum {number}\n */\nexport enum StorageRetryPolicyType {\n  /**\n   * Exponential retry. Retry time delay grows exponentially.\n   */\n  EXPONENTIAL,\n  /**\n   * Linear retry. Retry time delay grows linearly.\n   */\n  FIXED\n}\n\n// Default values of StorageRetryOptions\nconst DEFAULT_RETRY_OPTIONS: StorageRetryOptions = {\n  maxRetryDelayInMs: 120 * 1000,\n  maxTries: 4,\n  retryDelayInMs: 4 * 1000,\n  retryPolicyType: StorageRetryPolicyType.EXPONENTIAL,\n  secondaryHost: \"\",\n  tryTimeoutInMs: undefined // Use server side default timeout strategy\n};\n\nconst RETRY_ABORT_ERROR = new AbortError(\"The operation was aborted.\");\n\n/**\n * Retry policy with exponential retry and linear retry implemented.\n *\n * @class RetryPolicy\n * @extends {BaseRequestPolicy}\n */\nexport class StorageRetryPolicy extends BaseRequestPolicy {\n  /**\n   * RetryOptions.\n   *\n   * @private\n   * @type {StorageRetryOptions}\n   * @memberof StorageRetryPolicy\n   */\n  private readonly retryOptions: StorageRetryOptions;\n\n  /**\n   * Creates an instance of RetryPolicy.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @param {StorageRetryOptions} [retryOptions=DEFAULT_RETRY_OPTIONS]\n   * @memberof StorageRetryPolicy\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    retryOptions: StorageRetryOptions = DEFAULT_RETRY_OPTIONS\n  ) {\n    super(nextPolicy, options);\n\n    // Initialize retry options\n    this.retryOptions = {\n      retryPolicyType: retryOptions.retryPolicyType\n        ? retryOptions.retryPolicyType\n        : DEFAULT_RETRY_OPTIONS.retryPolicyType,\n\n      maxTries:\n        retryOptions.maxTries && retryOptions.maxTries >= 1\n          ? Math.floor(retryOptions.maxTries)\n          : DEFAULT_RETRY_OPTIONS.maxTries,\n\n      tryTimeoutInMs:\n        retryOptions.tryTimeoutInMs && retryOptions.tryTimeoutInMs >= 0\n          ? retryOptions.tryTimeoutInMs\n          : DEFAULT_RETRY_OPTIONS.tryTimeoutInMs,\n\n      retryDelayInMs:\n        retryOptions.retryDelayInMs && retryOptions.retryDelayInMs >= 0\n          ? Math.min(\n              retryOptions.retryDelayInMs,\n              retryOptions.maxRetryDelayInMs\n                ? retryOptions.maxRetryDelayInMs\n                : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs!\n            )\n          : DEFAULT_RETRY_OPTIONS.retryDelayInMs,\n\n      maxRetryDelayInMs:\n        retryOptions.maxRetryDelayInMs && retryOptions.maxRetryDelayInMs >= 0\n          ? retryOptions.maxRetryDelayInMs\n          : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs,\n\n      secondaryHost: retryOptions.secondaryHost\n        ? retryOptions.secondaryHost\n        : DEFAULT_RETRY_OPTIONS.secondaryHost\n    };\n  }\n\n  /**\n   * Sends request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof StorageRetryPolicy\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this.attemptSendRequest(request, false, 1);\n  }\n\n  /**\n   * Decide and perform next retry. Won't mutate request parameter.\n   *\n   * @protected\n   * @param {WebResource} request\n   * @param {boolean} secondaryHas404  If attempt was against the secondary & it returned a StatusNotFound (404), then\n   *                                   the resource was not found. This may be due to replication delay. So, in this\n   *                                   case, we'll never try the secondary again for this operation.\n   * @param {number} attempt           How many retries has been attempted to performed, starting from 1, which includes\n   *                                   the attempt will be performed by this method call.\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof StorageRetryPolicy\n   */\n  protected async attemptSendRequest(\n    request: WebResource,\n    secondaryHas404: boolean,\n    attempt: number\n  ): Promise<HttpOperationResponse> {\n    const newRequest: WebResource = request.clone();\n\n    const isPrimaryRetry =\n      secondaryHas404 ||\n      !this.retryOptions.secondaryHost ||\n      !(request.method === \"GET\" || request.method === \"HEAD\" || request.method === \"OPTIONS\") ||\n      attempt % 2 === 1;\n\n    if (!isPrimaryRetry) {\n      newRequest.url = setURLHost(newRequest.url, this.retryOptions.secondaryHost!);\n    }\n\n    // Set the server-side timeout query parameter \"timeout=[seconds]\"\n    if (this.retryOptions.tryTimeoutInMs) {\n      newRequest.url = setURLParameter(\n        newRequest.url,\n        URLConstants.Parameters.TIMEOUT,\n        Math.floor(this.retryOptions.tryTimeoutInMs! / 1000).toString()\n      );\n    }\n\n    let response: HttpOperationResponse | undefined;\n    try {\n      logger.info(`RetryPolicy: =====> Try=${attempt} ${isPrimaryRetry ? \"Primary\" : \"Secondary\"}`);\n      response = await this._nextPolicy.sendRequest(newRequest);\n      if (!this.shouldRetry(isPrimaryRetry, attempt, response)) {\n        return response;\n      }\n\n      secondaryHas404 = secondaryHas404 || (!isPrimaryRetry && response.status === 404);\n    } catch (err) {\n      logger.error(`RetryPolicy: Caught error, message: ${err.message}, code: ${err.code}`);\n      if (!this.shouldRetry(isPrimaryRetry, attempt, response, err)) {\n        throw err;\n      }\n    }\n\n    await this.delay(isPrimaryRetry, attempt, request.abortSignal);\n    return await this.attemptSendRequest(request, secondaryHas404, ++attempt);\n  }\n\n  /**\n   * Decide whether to retry according to last HTTP response and retry counters.\n   *\n   * @protected\n   * @param {boolean} isPrimaryRetry\n   * @param {number} attempt\n   * @param {HttpOperationResponse} [response]\n   * @param {RestError} [err]\n   * @returns {boolean}\n   * @memberof StorageRetryPolicy\n   */\n  protected shouldRetry(\n    isPrimaryRetry: boolean,\n    attempt: number,\n    response?: HttpOperationResponse,\n    err?: RestError\n  ): boolean {\n    if (attempt >= this.retryOptions.maxTries!) {\n      logger.info(\n        `RetryPolicy: Attempt(s) ${attempt} >= maxTries ${this.retryOptions\n          .maxTries!}, no further try.`\n      );\n      return false;\n    }\n\n    // Handle network failures, you may need to customize the list when you implement\n    // your own http client\n    const retriableErrors = [\n      \"ETIMEDOUT\",\n      \"ESOCKETTIMEDOUT\",\n      \"ECONNREFUSED\",\n      \"ECONNRESET\",\n      \"ENOENT\",\n      \"ENOTFOUND\",\n      \"TIMEOUT\",\n      \"EPIPE\",\n      \"REQUEST_SEND_ERROR\" // For default xhr based http client provided in ms-rest-js\n    ];\n    if (err) {\n      for (const retriableError of retriableErrors) {\n        if (\n          err.name.toUpperCase().includes(retriableError) ||\n          err.message.toUpperCase().includes(retriableError) ||\n          (err.code &&\n            err.code\n              .toString()\n              .toUpperCase()\n              .includes(retriableError))\n        ) {\n          logger.info(`RetryPolicy: Network error ${retriableError} found, will retry.`);\n          return true;\n        }\n      }\n    }\n\n    // If attempt was against the secondary & it returned a StatusNotFound (404), then\n    // the resource was not found. This may be due to replication delay. So, in this\n    // case, we'll never try the secondary again for this operation.\n    if (response || err) {\n      const statusCode = response ? response.status : err ? err.statusCode : 0;\n      if (!isPrimaryRetry && statusCode === 404) {\n        logger.info(`RetryPolicy: Secondary access with 404, will retry.`);\n        return true;\n      }\n\n      // Server internal error or server timeout\n      if (statusCode === 503 || statusCode === 500) {\n        logger.info(`RetryPolicy: Will retry for status code ${statusCode}.`);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Delay a calculated time between retries.\n   *\n   * @private\n   * @param {boolean} isPrimaryRetry\n   * @param {number} attempt\n   * @param {AbortSignalLike} [abortSignal]\n   * @memberof StorageRetryPolicy\n   */\n  private async delay(isPrimaryRetry: boolean, attempt: number, abortSignal?: AbortSignalLike) {\n    let delayTimeInMs: number = 0;\n\n    if (isPrimaryRetry) {\n      switch (this.retryOptions.retryPolicyType) {\n        case StorageRetryPolicyType.EXPONENTIAL:\n          delayTimeInMs = Math.min(\n            (Math.pow(2, attempt - 1) - 1) * this.retryOptions.retryDelayInMs!,\n            this.retryOptions.maxRetryDelayInMs!\n          );\n          break;\n        case StorageRetryPolicyType.FIXED:\n          delayTimeInMs = this.retryOptions.retryDelayInMs!;\n          break;\n      }\n    } else {\n      delayTimeInMs = Math.random() * 1000;\n    }\n\n    logger.info(`RetryPolicy: Delay for ${delayTimeInMs}ms`);\n    return delay(delayTimeInMs, abortSignal, RETRY_ABORT_ERROR);\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport { StorageRetryPolicy, StorageRetryPolicyType } from \"./policies/StorageRetryPolicy\";\n\nexport { StorageRetryPolicyType, StorageRetryPolicy };\n\n/**\n * Storage Blob retry options interface.\n *\n * @export\n * @interface StorageRetryOptions\n */\nexport interface StorageRetryOptions {\n  /**\n   * Optional. StorageRetryPolicyType, default is exponential retry policy.\n   *\n   * @type {StorageRetryPolicyType}\n   * @memberof StorageRetryOptions\n   */\n  readonly retryPolicyType?: StorageRetryPolicyType;\n\n  /**\n   * Optional. Max try number of attempts, default is 4.\n   * A value of 1 means 1 try and no retries.\n   * A value smaller than 1 means default retry number of attempts.\n   *\n   * @type {number}\n   * @memberof StorageRetryOptions\n   */\n  readonly maxTries?: number;\n\n  /**\n   * Optional. Indicates the maximum time in ms allowed for any single try of an HTTP request.\n   * A value of zero or undefined means no default timeout on SDK client, Azure\n   * Storage server's default timeout policy will be used.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/setting-timeouts-for-blob-service-operations\n   *\n   * @type {number}\n   * @memberof StorageRetryOptions\n   */\n  readonly tryTimeoutInMs?: number;\n\n  /**\n   * Optional. Specifies the amount of delay to use before retrying an operation (default is 4s or 4 * 1000ms).\n   * The delay increases (exponentially or linearly) with each retry up to a maximum specified by\n   * maxRetryDelayInMs. If you specify 0, then you must also specify 0 for maxRetryDelayInMs.\n   *\n   * @type {number}\n   * @memberof StorageRetryOptions\n   */\n  readonly retryDelayInMs?: number;\n\n  /**\n   * Optional. Specifies the maximum delay allowed before retrying an operation (default is 120s or 120 * 1000ms).\n   * If you specify 0, then you must also specify 0 for retryDelayInMs.\n   *\n   * @type {number}\n   * @memberof StorageRetryOptions\n   */\n  readonly maxRetryDelayInMs?: number;\n\n  /**\n   * If a secondaryHost is specified, retries will be tried against this host. If secondaryHost is undefined\n   * (the default) then operations are not retried against another host.\n   *\n   * NOTE: Before setting this field, make sure you understand the issues around\n   * reading stale and potentially-inconsistent data at\n   * {@link https://docs.microsoft.com/en-us/azure/storage/common/storage-designing-ha-apps-with-ragrs}\n   *\n   * @type {string}\n   * @memberof StorageRetryOptions\n   */\n  readonly secondaryHost?: string;\n}\n\n/**\n * StorageRetryPolicyFactory is a factory class helping generating {@link StorageRetryPolicy} objects.\n *\n * @export\n * @class StorageRetryPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nexport class StorageRetryPolicyFactory implements RequestPolicyFactory {\n  private retryOptions?: StorageRetryOptions;\n\n  /**\n   * Creates an instance of StorageRetryPolicyFactory.\n   * @param {StorageRetryOptions} [retryOptions]\n   * @memberof StorageRetryPolicyFactory\n   */\n  constructor(retryOptions?: StorageRetryOptions) {\n    this.retryOptions = retryOptions;\n  }\n\n  /**\n   * Creates a StorageRetryPolicy object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {StorageRetryPolicy}\n   * @memberof StorageRetryPolicyFactory\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageRetryPolicy {\n    return new StorageRetryPolicy(nextPolicy, options, this.retryOptions);\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  BaseRequestPolicy,\n  HttpHeaders,\n  HttpOperationResponse,\n  isNode,\n  RequestPolicy,\n  RequestPolicyOptions,\n  WebResource\n} from \"@azure/core-http\";\n\nimport { HeaderConstants } from \"../utils/constants\";\n\n/**\n * TelemetryPolicy is a policy used to tag user-agent header for every requests.\n *\n * @class TelemetryPolicy\n * @extends {BaseRequestPolicy}\n */\nexport class TelemetryPolicy extends BaseRequestPolicy {\n  /**\n   * Telemetry string.\n   *\n   * @type {string}\n   * @memberof TelemetryPolicy\n   */\n  public readonly telemetry: string;\n\n  /**\n   * Creates an instance of TelemetryPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @param {string} telemetry\n   * @memberof TelemetryPolicy\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions, telemetry: string) {\n    super(nextPolicy, options);\n    this.telemetry = telemetry;\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof TelemetryPolicy\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (isNode) {\n      if (!request.headers) {\n        request.headers = new HttpHeaders();\n      }\n      if (!request.headers.get(HeaderConstants.USER_AGENT)) {\n        request.headers.set(HeaderConstants.USER_AGENT, this.telemetry);\n      }\n    }\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  isNode,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  UserAgentOptions\n} from \"@azure/core-http\";\nimport * as os from \"os\";\n\nimport { TelemetryPolicy } from \"./policies/TelemetryPolicy\";\nimport { SDK_VERSION } from \"./utils/constants\";\n\n/**\n * TelemetryPolicyFactory is a factory class helping generating {@link TelemetryPolicy} objects.\n *\n * @export\n * @class TelemetryPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nexport class TelemetryPolicyFactory implements RequestPolicyFactory {\n  /**\n   * @internal\n   * @ignore\n   */\n  public readonly telemetryString: string;\n\n  /**\n   * Creates an instance of TelemetryPolicyFactory.\n   * @param {UserAgentOptions} [telemetry]\n   * @memberof TelemetryPolicyFactory\n   */\n  constructor(telemetry?: UserAgentOptions) {\n    const userAgentInfo: string[] = [];\n\n    if (isNode) {\n      if (telemetry) {\n        const telemetryString = (telemetry.userAgentPrefix || \"\").replace(\" \", \"\");\n        if (telemetryString.length > 0 && userAgentInfo.indexOf(telemetryString) === -1) {\n          userAgentInfo.push(telemetryString);\n        }\n      }\n\n      // e.g. azsdk-js-storageblob/10.0.0\n      const libInfo = `azsdk-js-storageblob/${SDK_VERSION}`;\n      if (userAgentInfo.indexOf(libInfo) === -1) {\n        userAgentInfo.push(libInfo);\n      }\n\n      // e.g. (NODE-VERSION 4.9.1; Windows_NT 10.0.16299)\n      const runtimeInfo = `(NODE-VERSION ${process.version}; ${os.type()} ${os.release()})`;\n      if (userAgentInfo.indexOf(runtimeInfo) === -1) {\n        userAgentInfo.push(runtimeInfo);\n      }\n    }\n\n    this.telemetryString = userAgentInfo.join(\" \");\n  }\n\n  /**\n   * Creates a TelemetryPolicy object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {TelemetryPolicy}\n   * @memberof TelemetryPolicyFactory\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): TelemetryPolicy {\n    return new TelemetryPolicy(nextPolicy, options, this.telemetryString);\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { DefaultHttpClient } from \"@azure/core-http\";\nimport { IHttpClient } from \"../Pipeline\";\n\nconst _defaultHttpClient = new DefaultHttpClient();\n\nexport function getCachedDefaultHttpClient(): IHttpClient {\n  return _defaultHttpClient;\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  BaseRequestPolicy,\n  deserializationPolicy,\n  disableResponseDecompressionPolicy,\n  HttpClient as IHttpClient,\n  HttpHeaders,\n  HttpOperationResponse,\n  HttpRequestBody,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  ServiceClientOptions,\n  WebResource,\n  proxyPolicy,\n  isNode,\n  TokenCredential,\n  isTokenCredential,\n  bearerTokenAuthenticationPolicy,\n  tracingPolicy,\n  logPolicy,\n  ProxyOptions,\n  keepAlivePolicy,\n  KeepAliveOptions,\n  generateClientRequestIdPolicy,\n  UserAgentOptions\n} from \"@azure/core-http\";\n\nimport { logger } from \"./log\";\nimport { StorageBrowserPolicyFactory } from \"./StorageBrowserPolicyFactory\";\nimport { StorageRetryOptions, StorageRetryPolicyFactory } from \"./StorageRetryPolicyFactory\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport {\n  StorageOAuthScopes,\n  StorageBlobLoggingAllowedHeaderNames,\n  StorageBlobLoggingAllowedQueryParameters\n} from \"./utils/constants\";\nimport { TelemetryPolicyFactory } from \"./TelemetryPolicyFactory\";\nimport { getCachedDefaultHttpClient } from \"./utils/cache\";\n\n// Export following interfaces and types for customers who want to implement their\n// own RequestPolicy or HTTPClient\nexport {\n  BaseRequestPolicy,\n  StorageOAuthScopes,\n  deserializationPolicy,\n  IHttpClient,\n  HttpHeaders,\n  HttpRequestBody,\n  HttpOperationResponse,\n  WebResource,\n  RequestPolicyFactory,\n  RequestPolicy,\n  RequestPolicyOptions\n};\n\n/**\n * Option interface for Pipeline constructor.\n *\n * @export\n * @interface PipelineOptions\n */\nexport interface PipelineOptions {\n  /**\n   * Optional. Configures the HTTP client to send requests and receive responses.\n   *\n   * @type {IHttpClient}\n   * @memberof PipelineOptions\n   */\n  httpClient?: IHttpClient;\n}\n\n/**\n * A Pipeline class containing HTTP request policies.\n * You can create a default Pipeline by calling {@link newPipeline}.\n * Or you can create a Pipeline with your own policies by the constructor of Pipeline.\n *\n * Refer to {@link newPipeline} and provided policies before implementing your\n * customized Pipeline.\n *\n * @export\n * @class Pipeline\n */\nexport class Pipeline {\n  /**\n   * A list of chained request policy factories.\n   *\n   * @type {RequestPolicyFactory[]}\n   * @memberof Pipeline\n   */\n  public readonly factories: RequestPolicyFactory[];\n  /**\n   * Configures pipeline logger and HTTP client.\n   *\n   * @type {PipelineOptions}\n   * @memberof Pipeline\n   */\n  public readonly options: PipelineOptions;\n\n  /**\n   * Creates an instance of Pipeline. Customize HTTPClient by implementing IHttpClient interface.\n   *\n   * @param {RequestPolicyFactory[]} factories\n   * @param {PipelineOptions} [options={}]\n   * @memberof Pipeline\n   */\n  constructor(factories: RequestPolicyFactory[], options: PipelineOptions = {}) {\n    this.factories = factories;\n    // when options.httpClient is not specified, passing in a DefaultHttpClient instance to\n    // avoid each client creating its own http client.\n    this.options = {\n      ...options,\n      httpClient: options.httpClient || getCachedDefaultHttpClient()\n    };\n  }\n\n  /**\n   * Transfer Pipeline object to ServiceClientOptions object which is required by\n   * ServiceClient constructor.\n   *\n   * @returns {ServiceClientOptions} The ServiceClientOptions object from this Pipeline.\n   * @memberof Pipeline\n   */\n  public toServiceClientOptions(): ServiceClientOptions {\n    return {\n      httpClient: this.options.httpClient,\n      requestPolicyFactories: this.factories\n    };\n  }\n}\n\n/**\n * Options interface for the {@link newPipeline} function.\n *\n * @export\n * @interface StoragePipelineOptions\n */\nexport interface StoragePipelineOptions {\n  /**\n   * Options to configure a proxy for outgoing requests.\n   */\n  proxyOptions?: ProxyOptions;\n  /**\n   * Options for adding user agent details to outgoing requests.\n   *\n   * @type {UserAgentOptions}\n   * @memberof StoragePipelineOptions\n   */\n  userAgentOptions?: UserAgentOptions;\n  /**\n   * Configures the built-in retry policy behavior.\n   *\n   * @type {StorageRetryOptions}\n   * @memberof StoragePipelineOptions\n   */\n  retryOptions?: StorageRetryOptions;\n  /**\n   * Keep alive configurations. Default keep-alive is enabled.\n   *\n   * @type {KeepAliveOptions}\n   * @memberof StoragePipelineOptions\n   */\n  keepAliveOptions?: KeepAliveOptions;\n\n  /**\n   * Configures the HTTP client to send requests and receive responses.\n   *\n   * @type {IHttpClient}\n   * @memberof StoragePipelineOptions\n   */\n  httpClient?: IHttpClient;\n}\n\n/**\n * Creates a new Pipeline object with Credential provided.\n *\n * @export\n * @param {StorageSharedKeyCredential | AnonymousCredential | TokenCredential} credential  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the @azure/identity package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n * @param {StoragePipelineOptions} [pipelineOptions] Optional. Options.\n * @returns {Pipeline} A new Pipeline object.\n */\nexport function newPipeline(\n  credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n  pipelineOptions: StoragePipelineOptions = {}\n): Pipeline {\n  // Order is important. Closer to the API at the top & closer to the network at the bottom.\n  // The credential's policy factory must appear close to the wire so it can sign any\n  // changes made by other factories (like UniqueRequestIDPolicyFactory)\n\n  const telemetryPolicy = new TelemetryPolicyFactory(pipelineOptions.userAgentOptions);\n  const factories: RequestPolicyFactory[] = [\n    tracingPolicy({ userAgent: telemetryPolicy.telemetryString }),\n    keepAlivePolicy(pipelineOptions.keepAliveOptions),\n    telemetryPolicy,\n    generateClientRequestIdPolicy(),\n    new StorageBrowserPolicyFactory(),\n    deserializationPolicy(), // Default deserializationPolicy is provided by protocol layer\n    new StorageRetryPolicyFactory(pipelineOptions.retryOptions),\n    logPolicy({\n      logger: logger.info,\n      allowedHeaderNames: StorageBlobLoggingAllowedHeaderNames,\n      allowedQueryParameters: StorageBlobLoggingAllowedQueryParameters\n    })\n  ];\n\n  if (isNode) {\n    // policies only avaiable in Node.js runtime, not in browsers\n    factories.push(proxyPolicy(pipelineOptions.proxyOptions));\n    factories.push(disableResponseDecompressionPolicy());\n  }\n  factories.push(\n    isTokenCredential(credential)\n      ? bearerTokenAuthenticationPolicy(credential, StorageOAuthScopes)\n      : credential\n  );\n\n  return new Pipeline(factories, pipelineOptions);\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { TransferProgressEvent } from \"@azure/core-http\";\nimport { Readable } from \"stream\";\n\nimport { AbortSignal, AbortSignalLike, AbortError } from \"@azure/abort-controller\";\n\nexport type ReadableStreamGetter = (offset: number) => Promise<NodeJS.ReadableStream>;\n\nexport interface RetriableReadableStreamOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof RetriableReadableStreamOptions\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Max retry count (>=0), undefined or invalid value means no retry\n   *\n   * @type {number}\n   * @memberof RetriableReadableStreamOptions\n   */\n  maxRetryRequests?: number;\n\n  /**\n   * Read progress event handler\n   *\n   * @memberof RetriableReadableStreamOptions\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Debug purpose only. Used to inject an unexpected end to existing internal stream,\n   * to test stream retry works well or not.\n   *\n   * When assign it to true, for next incoming \"data\" event of internal stream,\n   * RetriableReadableStream will try to emit an \"end\" event to existing internal\n   * stream to force it end and start retry from the breaking point.\n   * The value will then update to \"undefined\", once the injection works.\n   *\n   * @type {boolean}\n   * @memberof RetriableReadableStreamOptions\n   */\n  doInjectErrorOnce?: boolean;\n}\n\nconst ABORT_ERROR = new AbortError(\"The operation was aborted.\");\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * A Node.js ReadableStream will internally retry when internal ReadableStream unexpected ends.\n *\n * @class RetriableReadableStream\n * @extends {Readable}\n */\nexport class RetriableReadableStream extends Readable {\n  private aborter: AbortSignalLike;\n  private start: number;\n  private offset: number;\n  private end: number;\n  private getter: ReadableStreamGetter;\n  private source: NodeJS.ReadableStream;\n  private retries: number = 0;\n  private maxRetryRequests: number;\n  private onProgress?: (progress: TransferProgressEvent) => void;\n  private options: RetriableReadableStreamOptions;\n  private abortHandler = () => {\n    this.source.pause();\n    this.emit(\"error\", ABORT_ERROR);\n  };\n\n  /**\n   * Creates an instance of RetriableReadableStream.\n   *\n   * @param {NodeJS.ReadableStream} source The current ReadableStream returned from getter\n   * @param {ReadableStreamGetter} getter A method calling downloading request returning\n   *                                      a new ReadableStream from specified offset\n   * @param {number} offset Offset position in original data source to read\n   * @param {number} count How much data in original data source to read\n   * @param {RetriableReadableStreamOptions} [options={}]\n   * @memberof RetriableReadableStream\n   */\n  public constructor(\n    source: NodeJS.ReadableStream,\n    getter: ReadableStreamGetter,\n    offset: number,\n    count: number,\n    options: RetriableReadableStreamOptions = {}\n  ) {\n    super();\n    this.aborter = options.abortSignal || AbortSignal.none;\n    this.getter = getter;\n    this.source = source;\n    this.start = offset;\n    this.offset = offset;\n    this.end = offset + count - 1;\n    this.maxRetryRequests =\n      options.maxRetryRequests && options.maxRetryRequests >= 0 ? options.maxRetryRequests : 0;\n    this.onProgress = options.onProgress;\n    this.options = options;\n\n    this.aborter.addEventListener(\"abort\", this.abortHandler);\n\n    this.setSourceDataHandler();\n    this.setSourceEndHandler();\n    this.setSourceErrorHandler();\n  }\n\n  public _read() {\n    if (!this.aborter.aborted) {\n      this.source.resume();\n    }\n  }\n\n  private setSourceDataHandler() {\n    this.source.on(\"data\", (data: Buffer) => {\n      if (this.options.doInjectErrorOnce) {\n        this.options.doInjectErrorOnce = undefined;\n        this.source.pause();\n        this.source.removeAllListeners(\"data\");\n        this.source.emit(\"end\");\n        return;\n      }\n\n      // console.log(\n      //   `Offset: ${this.offset}, Received ${data.length} from internal stream`\n      // );\n      this.offset += data.length;\n      if (this.onProgress) {\n        this.onProgress({ loadedBytes: this.offset - this.start });\n      }\n      if (!this.push(data)) {\n        this.source.pause();\n      }\n    });\n  }\n\n  private setSourceEndHandler() {\n    this.source.on(\"end\", () => {\n      // console.log(\n      //   `Source stream emits end, offset: ${\n      //     this.offset\n      //   }, dest end : ${this.end}`\n      // );\n      if (this.offset - 1 === this.end) {\n        this.aborter.removeEventListener(\"abort\", this.abortHandler);\n        this.push(null);\n      } else if (this.offset <= this.end) {\n        // console.log(\n        //   `retries: ${this.retries}, max retries: ${this.maxRetries}`\n        // );\n        if (this.retries < this.maxRetryRequests) {\n          this.retries += 1;\n          this.getter(this.offset)\n            .then((newSource) => {\n              this.source = newSource;\n              this.setSourceDataHandler();\n              this.setSourceEndHandler();\n              this.setSourceErrorHandler();\n            })\n            .catch((error) => {\n              this.emit(\"error\", error);\n            });\n        } else {\n          this.emit(\n            \"error\",\n            new Error(\n              // tslint:disable-next-line:max-line-length\n              `Data corruption failure: received less data than required and reached maxRetires limitation. Received data offset: ${this\n                .offset - 1}, data needed offset: ${this.end}, retries: ${\n                this.retries\n              }, max retries: ${this.maxRetryRequests}`\n            )\n          );\n        }\n      } else {\n        this.emit(\n          \"error\",\n          new Error(\n            `Data corruption failure: Received more data than original request, data needed offset is ${\n              this.end\n            }, received offset: ${this.offset - 1}`\n          )\n        );\n      }\n    });\n  }\n\n  private setSourceErrorHandler() {\n    this.source.on(\"error\", (error) => {\n      this.emit(\"error\", error);\n    });\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { HttpResponse, isNode } from \"@azure/core-http\";\n\nimport {\n  BlobDownloadResponseModel,\n  BlobType,\n  CopyStatusType,\n  LeaseDurationType,\n  LeaseStateType,\n  LeaseStatusType,\n  BlobDownloadHeaders\n} from \"./generatedModels\";\nimport { Metadata } from \"./models\";\nimport { RetriableReadableStreamOptions } from \"./utils/RetriableReadableStream\";\nimport { ReadableStreamGetter, RetriableReadableStream } from \"./utils/RetriableReadableStream\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * BlobDownloadResponse implements BlobDownloadResponseModel interface, and in Node.js runtime it will\n * automatically retry when internal read stream unexpected ends. (This kind of unexpected ends cannot\n * trigger retries defined in pipeline retry policy.)\n *\n * The {@link readableStreamBody} stream will retry underlayer, you can just use it as a normal Node.js\n * Readable stream.\n *\n * @export\n * @class BlobDownloadResponse\n * @implements {BlobDownloadResponseModel}\n */\nexport class BlobDownloadResponse implements BlobDownloadResponseModel {\n  /**\n   * Indicates that the service supports\n   * requests for partial file content.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get acceptRanges(): string | undefined {\n    return this.originalResponse.acceptRanges;\n  }\n\n  /**\n   * Returns if it was previously specified\n   * for the file.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get cacheControl(): string | undefined {\n    return this.originalResponse.cacheControl;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the 'x-ms-content-disposition' header and specifies how to process the\n   * response.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get contentDisposition(): string | undefined {\n    return this.originalResponse.contentDisposition;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Encoding request header.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get contentEncoding(): string | undefined {\n    return this.originalResponse.contentEncoding;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Language request header.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get contentLanguage(): string | undefined {\n    return this.originalResponse.contentLanguage;\n  }\n\n  /**\n   * The current sequence number for a\n   * page blob. This header is not returned for block blobs or append blobs.\n   *\n   * @readonly\n   * @type {(number | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get blobSequenceNumber(): number | undefined {\n    return this.originalResponse.blobSequenceNumber;\n  }\n\n  /**\n   * The blob's type. Possible values include:\n   * 'BlockBlob', 'PageBlob', 'AppendBlob'.\n   *\n   * @readonly\n   * @type {(BlobType | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get blobType(): BlobType | undefined {\n    return this.originalResponse.blobType;\n  }\n\n  /**\n   * The number of bytes present in the\n   * response body.\n   *\n   * @readonly\n   * @type {(number | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get contentLength(): number | undefined {\n    return this.originalResponse.contentLength;\n  }\n\n  /**\n   * If the file has an MD5 hash and the\n   * request is to read the full file, this response header is returned so that\n   * the client can check for message content integrity. If the request is to\n   * read a specified range and the 'x-ms-range-get-content-md5' is set to\n   * true, then the request returns an MD5 hash for the range, as long as the\n   * range size is less than or equal to 4 MB. If neither of these sets of\n   * conditions is true, then no value is returned for the 'Content-MD5'\n   * header.\n   *\n   * @readonly\n   * @type {(Uint8Array | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get contentMD5(): Uint8Array | undefined {\n    return this.originalResponse.contentMD5;\n  }\n\n  /**\n   * Indicates the range of bytes returned if\n   * the client requested a subset of the file by setting the Range request\n   * header.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get contentRange(): string | undefined {\n    return this.originalResponse.contentRange;\n  }\n\n  /**\n   * The content type specified for the file.\n   * The default content type is 'application/octet-stream'\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get contentType(): string | undefined {\n    return this.originalResponse.contentType;\n  }\n\n  /**\n   * Conclusion time of the last attempted\n   * Copy File operation where this file was the destination file. This value\n   * can specify the time of a completed, aborted, or failed copy attempt.\n   *\n   * @readonly\n   * @type {(Date | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get copyCompletedOn(): Date | undefined {\n    return this.originalResponse.copyCompletedOn;\n  }\n\n  /**\n   * String identifier for the last attempted Copy\n   * File operation where this file was the destination file.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get copyId(): string | undefined {\n    return this.originalResponse.copyId;\n  }\n\n  /**\n   * Contains the number of bytes copied and\n   * the total bytes in the source in the last attempted Copy File operation\n   * where this file was the destination file. Can show between 0 and\n   * Content-Length bytes copied.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get copyProgress(): string | undefined {\n    return this.originalResponse.copyProgress;\n  }\n\n  /**\n   * URL up to 2KB in length that specifies the\n   * source file used in the last attempted Copy File operation where this file\n   * was the destination file.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get copySource(): string | undefined {\n    return this.originalResponse.copySource;\n  }\n\n  /**\n   * State of the copy operation\n   * identified by 'x-ms-copy-id'. Possible values include: 'pending',\n   * 'success', 'aborted', 'failed'\n   *\n   * @readonly\n   * @type {(CopyStatusType | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get copyStatus(): CopyStatusType | undefined {\n    return this.originalResponse.copyStatus;\n  }\n\n  /**\n   * Only appears when\n   * x-ms-copy-status is failed or pending. Describes cause of fatal or\n   * non-fatal copy operation failure.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get copyStatusDescription(): string | undefined {\n    return this.originalResponse.copyStatusDescription;\n  }\n\n  /**\n   * When a blob is leased,\n   * specifies whether the lease is of infinite or fixed duration. Possible\n   * values include: 'infinite', 'fixed'.\n   *\n   * @readonly\n   * @type {(LeaseDurationType | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get leaseDuration(): LeaseDurationType | undefined {\n    return this.originalResponse.leaseDuration;\n  }\n\n  /**\n   * Lease state of the blob. Possible\n   * values include: 'available', 'leased', 'expired', 'breaking', 'broken'.\n   *\n   * @readonly\n   * @type {(LeaseStateType | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get leaseState(): LeaseStateType | undefined {\n    return this.originalResponse.leaseState;\n  }\n\n  /**\n   * The current lease status of the\n   * blob. Possible values include: 'locked', 'unlocked'.\n   *\n   * @readonly\n   * @type {(LeaseStatusType | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get leaseStatus(): LeaseStatusType | undefined {\n    return this.originalResponse.leaseStatus;\n  }\n\n  /**\n   * A UTC date/time value generated by the service that\n   * indicates the time at which the response was initiated.\n   *\n   * @readonly\n   * @type {(Date | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get date(): Date | undefined {\n    return this.originalResponse.date;\n  }\n\n  /**\n   * The number of committed blocks\n   * present in the blob. This header is returned only for append blobs.\n   *\n   * @readonly\n   * @type {(number | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get blobCommittedBlockCount(): number | undefined {\n    return this.originalResponse.blobCommittedBlockCount;\n  }\n\n  /**\n   * The ETag contains a value that you can use to\n   * perform operations conditionally, in quotes.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get etag(): string | undefined {\n    return this.originalResponse.etag;\n  }\n\n  /**\n   * The error code.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get errorCode(): string | undefined {\n    return this.originalResponse.errorCode;\n  }\n\n  /**\n   * The value of this header is set to\n   * true if the file data and application metadata are completely encrypted\n   * using the specified algorithm. Otherwise, the value is set to false (when\n   * the file is unencrypted, or if only parts of the file/application metadata\n   * are encrypted).\n   *\n   * @readonly\n   * @type {(boolean | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get isServerEncrypted(): boolean | undefined {\n    return this.originalResponse.isServerEncrypted;\n  }\n\n  /**\n   * If the blob has a MD5 hash, and if\n   * request contains range header (Range or x-ms-range), this response header\n   * is returned with the value of the whole blob's MD5 value. This value may\n   * or may not be equal to the value returned in Content-MD5 header, with the\n   * latter calculated from the requested range.\n   *\n   * @readonly\n   * @type {(Uint8Array | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get blobContentMD5(): Uint8Array | undefined {\n    return this.originalResponse.blobContentMD5;\n  }\n\n  /**\n   * Returns the date and time the file was last\n   * modified. Any operation that modifies the file or its properties updates\n   * the last modified time.\n   *\n   * @readonly\n   * @type {(Date | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get lastModified(): Date | undefined {\n    return this.originalResponse.lastModified;\n  }\n\n  /**\n   * A name-value pair\n   * to associate with a file storage object.\n   *\n   * @readonly\n   * @type {(Metadata | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get metadata(): Metadata | undefined {\n    return this.originalResponse.metadata;\n  }\n\n  /**\n   * This header uniquely identifies the request\n   * that was made and can be used for troubleshooting the request.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get requestId(): string | undefined {\n    return this.originalResponse.requestId;\n  }\n\n  /**\n   * If a client request id header is sent in the request, this header will be present in the\n   * response with the same value.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get clientRequestId(): string | undefined {\n    return this.originalResponse.clientRequestId;\n  }\n\n  /**\n   * Indicates the version of the File service used\n   * to execute the request.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get version(): string | undefined {\n    return this.originalResponse.version;\n  }\n\n  /**\n   * The SHA-256 hash of the encryption key used to encrypt the blob. This value is only returned\n   * when the blob was encrypted with a customer-provided key.\n   *\n   * @readonly\n   * @type {(string | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get encryptionKeySha256(): string | undefined {\n    return this.originalResponse.encryptionKeySha256;\n  }\n\n  /**\n   * If the request is to read a specified range and the x-ms-range-get-content-crc64 is set to\n   * true, then the request returns a crc64 for the range, as long as the range size is less than\n   * or equal to 4 MB. If both x-ms-range-get-content-crc64 & x-ms-range-get-content-md5 is\n   * specified in the same request, it will fail with 400(Bad Request)\n   *\n   * @type {(Uint8Array | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get contentCrc64(): Uint8Array | undefined {\n    return this.originalResponse.contentCrc64;\n  }\n\n  /**\n   * The response body as a browser Blob.\n   * Always undefined in node.js.\n   *\n   * @readonly\n   * @type {(Promise<Blob> | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get contentAsBlob(): Promise<Blob> | undefined {\n    return this.originalResponse.blobBody;\n  }\n\n  /**\n   * The response body as a node.js Readable stream.\n   * Always undefined in the browser.\n   *\n   * It will automatically retry when internal read stream unexpected ends.\n   *\n   * @readonly\n   * @type {(NodeJS.ReadableStream | undefined)}\n   * @memberof BlobDownloadResponse\n   */\n  public get readableStreamBody(): NodeJS.ReadableStream | undefined {\n    return isNode ? this.blobDownloadStream : undefined;\n  }\n\n  /**\n   * The HTTP response.\n   *\n   * @type {HttpResponse}\n   * @memberof BlobDownloadResponse\n   */\n  public get _response(): HttpResponse & {\n    parsedHeaders: BlobDownloadHeaders;\n  } {\n    return this.originalResponse._response;\n  }\n\n  private originalResponse: BlobDownloadResponseModel;\n  private blobDownloadStream?: RetriableReadableStream;\n\n  /**\n   * Creates an instance of BlobDownloadResponse.\n   *\n   * @param {BlobDownloadResponseModel} originalResponse\n   * @param {ReadableStreamGetter} getter\n   * @param {number} offset\n   * @param {number} count\n   * @param {RetriableReadableStreamOptions} [options={}]\n   * @memberof BlobDownloadResponse\n   */\n  public constructor(\n    originalResponse: BlobDownloadResponseModel,\n    getter: ReadableStreamGetter,\n    offset: number,\n    count: number,\n    options: RetriableReadableStreamOptions = {}\n  ) {\n    this.originalResponse = originalResponse;\n    this.blobDownloadStream = new RetriableReadableStream(\n      this.originalResponse.readableStreamBody!,\n      getter,\n      offset,\n      count,\n      options\n    );\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// tslint:disable:max-line-length\n/**\n * Range for Blob Service Operations.\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-the-range-header-for-blob-service-operations\n *\n * @export\n * @interface Range\n */\nexport interface Range {\n  /**\n   * StartByte, larger than or equal 0.\n   *\n   * @type {string}\n   * @memberof Range\n   */\n  offset: number;\n  /**\n   * Optional. Count of bytes, larger than 0.\n   * If not provided, will return bytes from offset to the end.\n   *\n   * @type {string}\n   * @memberof Range\n   */\n  count?: number;\n}\n\n/**\n * Generate a range string. For example:\n *\n * \"bytes=255-\" or \"bytes=0-511\"\n *\n * @export\n * @param {Range} iRange\n * @returns {string}\n */\nexport function rangeToString(iRange: Range): string {\n  if (iRange.offset < 0) {\n    throw new RangeError(`Range.offset cannot be smaller than 0.`);\n  }\n  if (iRange.count && iRange.count <= 0) {\n    throw new RangeError(\n      `Range.count must be larger than 0. Leave it undefined if you want a range from offset to the end.`\n    );\n  }\n  return iRange.count\n    ? `bytes=${iRange.offset}-${iRange.offset + iRange.count - 1}`\n    : `bytes=${iRange.offset}-`;\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  ModifiedAccessConditions,\n  LeaseAccessConditions,\n  SequenceNumberAccessConditions,\n  AppendPositionAccessConditions,\n  AccessTier,\n  CpkInfo\n} from \"./generatedModels\";\nimport { EncryptionAlgorithmAES25 } from \"./utils/constants\";\n\n/**\n * A map of name-value pairs to associate with the resource.\n */\nexport interface Metadata {\n  /**\n   * A name-value pair.\n   */\n  [propertyName: string]: string;\n}\n\n/**\n * Conditions to add to the creation of this blob.\n */\nexport interface BlobRequestConditions extends ModifiedAccessConditions, LeaseAccessConditions {}\n\n/**\n * Conditions to add to the creation of this page blob.\n */\nexport interface PageBlobRequestConditions\n  extends BlobRequestConditions,\n    SequenceNumberAccessConditions {}\n\n/**\n * Conditions to add to the creation of this append blob.\n */\nexport interface AppendBlobRequestConditions\n  extends BlobRequestConditions,\n    AppendPositionAccessConditions {}\n\n/**\n * Represents the access tier on a blob.\n * For detailed information about block blob level tiering see {@link https://docs.microsoft.com/azure/storage/blobs/storage-blob-storage-tiers|Hot, cool and archive storage tiers.}\n */\nexport enum BlockBlobTier {\n  /**\n   * Optmized for storing data that is accessed frequently.\n   */\n  Hot = \"Hot\",\n  /**\n   * Optimized for storing data that is infrequently accessed and stored for at least 30 days.\n   */\n  Cool = \"Cool\",\n  /**\n   * Optimized for storing data that is rarely accessed and stored for at least 180 days\n   * with flexible latency requirements (on the order of hours).\n   */\n  Archive = \"Archive\"\n}\n\n/**\n * Specifies the page blob tier to set the blob to. This is only applicable to page blobs on premium storage accounts.\n * Please see {@link https://docs.microsoft.com/azure/storage/storage-premium-storage#scalability-and-performance-targets|here}\n * for detailed information on the corresponding IOPS and throughtput per PageBlobTier.\n */\nexport enum PremiumPageBlobTier {\n  /**\n   * P4 Tier.\n   */\n  P4 = \"P4\",\n  /**\n   * P6 Tier.\n   */\n  P6 = \"P6\",\n  /**\n   * P10 Tier.\n   */\n  P10 = \"P10\",\n  /**\n   * P15 Tier.\n   */\n  P15 = \"P15\",\n  /**\n   * P20 Tier.\n   */\n  P20 = \"P20\",\n  /**\n   * P30 Tier.\n   */\n  P30 = \"P30\",\n  /**\n   * P40 Tier.\n   */\n  P40 = \"P40\",\n  /**\n   * P50 Tier.\n   */\n  P50 = \"P50\",\n  /**\n   * P60 Tier.\n   */\n  P60 = \"P60\",\n  /**\n   * P70 Tier.\n   */\n  P70 = \"P70\",\n  /**\n   * P80 Tier.\n   */\n  P80 = \"P80\"\n}\n\nexport function toAccessTier(\n  tier: BlockBlobTier | PremiumPageBlobTier | string | undefined\n): AccessTier | undefined {\n  if (tier == undefined) {\n    return undefined;\n  }\n\n  return tier as AccessTier; // No more check if string is a valid AccessTier, and left this to underlay logic to decide(service).\n}\n\nexport function ensureCpkIfSpecified(cpk: CpkInfo | undefined, isHttps: boolean) {\n  if (cpk && !isHttps) {\n    throw new RangeError(\"Customer-provided encryption key must be used over HTTPS.\");\n  }\n\n  if (cpk && !cpk.encryptionAlgorithm) {\n    cpk.encryptionAlgorithm = EncryptionAlgorithmAES25;\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport * as fs from \"fs\";\nimport * as util from \"util\";\n\n/**\n * Reads a readable stream into buffer. Fill the buffer from offset to end.\n *\n * @export\n * @param {NodeJS.ReadableStream} stream A Node.js Readable stream\n * @param {Buffer} buffer Buffer to be filled, length must >= offset\n * @param {number} offset From which position in the buffer to be filled, inclusive\n * @param {number} end To which position in the buffer to be filled, exclusive\n * @param {string} [encoding] Encoding of the Readable stream\n * @returns {Promise<void>}\n */\nexport async function streamToBuffer(\n  stream: NodeJS.ReadableStream,\n  buffer: Buffer,\n  offset: number,\n  end: number,\n  encoding?: string\n): Promise<void> {\n  let pos = 0; // Position in stream\n  const count = end - offset; // Total amount of data needed in stream\n\n  return new Promise<void>((resolve, reject) => {\n    stream.on(\"readable\", () => {\n      if (pos >= count) {\n        resolve();\n        return;\n      }\n\n      let chunk = stream.read();\n      if (!chunk) {\n        return;\n      }\n      if (typeof chunk === \"string\") {\n        chunk = Buffer.from(chunk, encoding);\n      }\n\n      // How much data needed in this chunk\n      const chunkLength = pos + chunk.length > count ? count - pos : chunk.length;\n\n      buffer.fill(chunk.slice(0, chunkLength), offset + pos, offset + pos + chunkLength);\n      pos += chunkLength;\n    });\n\n    stream.on(\"end\", () => {\n      if (pos < count) {\n        reject(\n          new Error(\n            `Stream drains before getting enough data needed. Data read: ${pos}, data need: ${count}`\n          )\n        );\n      }\n      resolve();\n    });\n\n    stream.on(\"error\", reject);\n  });\n}\n\n/**\n * Reads a readable stream into buffer entirely.\n *\n * @export\n * @param {NodeJS.ReadableStream} stream A Node.js Readable stream\n * @param {Buffer} buffer Buffer to be filled, length must >= offset\n * @param {string} [encoding] Encoding of the Readable stream\n * @returns {Promise<number>} with the count of bytes read.\n * @throws {RangeError} If buffer size is not big enough.\n */\nexport async function streamToBuffer2(\n  stream: NodeJS.ReadableStream,\n  buffer: Buffer,\n  encoding?: string\n): Promise<number> {\n  let pos = 0; // Position in stream\n  let bufferSize = buffer.length;\n\n  return new Promise<number>((resolve, reject) => {\n    stream.on(\"readable\", () => {\n      let chunk = stream.read();\n      if (!chunk) {\n        return;\n      }\n      if (typeof chunk === \"string\") {\n        chunk = Buffer.from(chunk, encoding);\n      }\n\n      if (pos + chunk.length > bufferSize) {\n        reject(new Error(`Stream exceeds buffer size. Buffer size: ${bufferSize}`));\n        return;\n      }\n\n      buffer.fill(chunk, pos, pos + chunk.length);\n      pos += chunk.length;\n    });\n\n    stream.on(\"end\", () => {\n      resolve(pos);\n    });\n\n    stream.on(\"error\", reject);\n  });\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Writes the content of a readstream to a local file. Returns a Promise which is completed after the file handle is closed.\n *\n * @export\n * @param {NodeJS.ReadableStream} rs The read stream.\n * @param {string} file Destination file path.\n * @returns {Promise<void>}\n */\nexport async function readStreamToLocalFile(\n  rs: NodeJS.ReadableStream,\n  file: string\n): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    const ws = fs.createWriteStream(file);\n\n    rs.on(\"error\", (err: Error) => {\n      reject(err);\n    });\n\n    ws.on(\"error\", (err: Error) => {\n      reject(err);\n    });\n\n    ws.on(\"close\", resolve);\n\n    rs.pipe(ws);\n  });\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Promisified version of fs.stat().\n */\nexport const fsStat = util.promisify(fs.stat);\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { BaseRequestPolicy, HttpOperationResponse, WebResource } from \"@azure/core-http\";\n\n/**\n * Credential policy used to sign HTTP(S) requests before sending. This is an\n * abstract class.\n *\n * @export\n * @abstract\n * @class CredentialPolicy\n * @extends {BaseRequestPolicy}\n */\nexport abstract class CredentialPolicy extends BaseRequestPolicy {\n  /**\n   * Sends out request.\n   *\n   * @param {WebResource} request\n   * @returns {Promise<HttpOperationResponse>}\n   * @memberof CredentialPolicy\n   */\n  public sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this._nextPolicy.sendRequest(this.signRequest(request));\n  }\n\n  /**\n   * Child classes must implement this method with request signing. This method\n   * will be executed in {@link sendRequest}.\n   *\n   * @protected\n   * @abstract\n   * @param {WebResource} request\n   * @returns {WebResource}\n   * @memberof CredentialPolicy\n   */\n  protected signRequest(request: WebResource): WebResource {\n    // Child classes must override this method with request signing. This method\n    // will be executed in sendRequest().\n    return request;\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyOptions, WebResource } from \"@azure/core-http\";\nimport { StorageSharedKeyCredential } from \"../credentials/StorageSharedKeyCredential\";\nimport { HeaderConstants } from \"../utils/constants\";\nimport { getURLPath, getURLQueries } from \"../utils/utils.common\";\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n\n/**\n * StorageSharedKeyCredentialPolicy is a policy used to sign HTTP request with a shared key.\n *\n * @export\n * @class StorageSharedKeyCredentialPolicy\n * @extends {CredentialPolicy}\n */\nexport class StorageSharedKeyCredentialPolicy extends CredentialPolicy {\n  /**\n   * Reference to StorageSharedKeyCredential which generates StorageSharedKeyCredentialPolicy\n   *\n   * @type {StorageSharedKeyCredential}\n   * @memberof StorageSharedKeyCredentialPolicy\n   */\n  private readonly factory: StorageSharedKeyCredential;\n\n  /**\n   * Creates an instance of StorageSharedKeyCredentialPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @param {StorageSharedKeyCredential} factory\n   * @memberof StorageSharedKeyCredentialPolicy\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    factory: StorageSharedKeyCredential\n  ) {\n    super(nextPolicy, options);\n    this.factory = factory;\n  }\n\n  /**\n   * Signs request.\n   *\n   * @protected\n   * @param {WebResource} request\n   * @returns {WebResource}\n   * @memberof StorageSharedKeyCredentialPolicy\n   */\n  protected signRequest(request: WebResource): WebResource {\n    request.headers.set(HeaderConstants.X_MS_DATE, new Date().toUTCString());\n\n    if (request.body && typeof request.body === \"string\" && request.body.length > 0) {\n      request.headers.set(HeaderConstants.CONTENT_LENGTH, Buffer.byteLength(request.body));\n    }\n\n    const stringToSign: string =\n      [\n        request.method.toUpperCase(),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_LANGUAGE),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_ENCODING),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_LENGTH),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_MD5),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_TYPE),\n        this.getHeaderValueToSign(request, HeaderConstants.DATE),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_MODIFIED_SINCE),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_MATCH),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_NONE_MATCH),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_UNMODIFIED_SINCE),\n        this.getHeaderValueToSign(request, HeaderConstants.RANGE)\n      ].join(\"\\n\") +\n      \"\\n\" +\n      this.getCanonicalizedHeadersString(request) +\n      this.getCanonicalizedResourceString(request);\n\n    const signature: string = this.factory.computeHMACSHA256(stringToSign);\n    request.headers.set(\n      HeaderConstants.AUTHORIZATION,\n      `SharedKey ${this.factory.accountName}:${signature}`\n    );\n\n    // Workaround for https://github.com/axios/axios/issues/2107\n    // We should always keep the 'content-length' header once the issue is solved\n    // For a better explanation about this workaround, look here: https://github.com/Azure/azure-sdk-for-js/pull/3273\n    if (typeof request.body !== \"function\" && !(request.body && request.onUploadProgress)) {\n      request.headers.remove(HeaderConstants.CONTENT_LENGTH);\n    }\n\n    // console.log(`[URL]:${request.url}`);\n    // console.log(`[HEADERS]:${request.headers.toString()}`);\n    // console.log(`[STRING TO SIGN]:${JSON.stringify(stringToSign)}`);\n    // console.log(`[KEY]: ${request.headers.get(HeaderConstants.AUTHORIZATION)}`);\n    return request;\n  }\n\n  /**\n   * Retrieve header value according to shared key sign rules.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/authenticate-with-shared-key\n   *\n   * @private\n   * @param {WebResource} request\n   * @param {string} headerName\n   * @returns {string}\n   * @memberof StorageSharedKeyCredentialPolicy\n   */\n  private getHeaderValueToSign(request: WebResource, headerName: string): string {\n    const value = request.headers.get(headerName);\n\n    if (!value) {\n      return \"\";\n    }\n\n    // When using version 2015-02-21 or later, if Content-Length is zero, then\n    // set the Content-Length part of the StringToSign to an empty string.\n    // https://docs.microsoft.com/en-us/rest/api/storageservices/authenticate-with-shared-key\n    if (headerName === HeaderConstants.CONTENT_LENGTH && value === \"0\") {\n      return \"\";\n    }\n\n    return value;\n  }\n\n  /**\n   * To construct the CanonicalizedHeaders portion of the signature string, follow these steps:\n   * 1. Retrieve all headers for the resource that begin with x-ms-, including the x-ms-date header.\n   * 2. Convert each HTTP header name to lowercase.\n   * 3. Sort the headers lexicographically by header name, in ascending order.\n   *    Each header may appear only once in the string.\n   * 4. Replace any linear whitespace in the header value with a single space.\n   * 5. Trim any whitespace around the colon in the header.\n   * 6. Finally, append a new-line character to each canonicalized header in the resulting list.\n   *    Construct the CanonicalizedHeaders string by concatenating all headers in this list into a single string.\n   *\n   * @private\n   * @param {WebResource} request\n   * @returns {string}\n   * @memberof StorageSharedKeyCredentialPolicy\n   */\n  private getCanonicalizedHeadersString(request: WebResource): string {\n    let headersArray = request.headers.headersArray().filter((value) => {\n      return value.name.toLowerCase().startsWith(HeaderConstants.PREFIX_FOR_STORAGE);\n    });\n\n    headersArray.sort((a, b): number => {\n      return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n    });\n\n    // Remove duplicate headers\n    headersArray = headersArray.filter((value, index, array) => {\n      if (index > 0 && value.name.toLowerCase() === array[index - 1].name.toLowerCase()) {\n        return false;\n      }\n      return true;\n    });\n\n    let canonicalizedHeadersStringToSign: string = \"\";\n    headersArray.forEach((header) => {\n      canonicalizedHeadersStringToSign += `${header.name\n        .toLowerCase()\n        .trimRight()}:${header.value.trimLeft()}\\n`;\n    });\n\n    return canonicalizedHeadersStringToSign;\n  }\n\n  /**\n   * Retrieves the webResource canonicalized resource string.\n   *\n   * @private\n   * @param {WebResource} request\n   * @returns {string}\n   * @memberof StorageSharedKeyCredentialPolicy\n   */\n  private getCanonicalizedResourceString(request: WebResource): string {\n    const path = getURLPath(request.url) || \"/\";\n\n    let canonicalizedResourceString: string = \"\";\n    canonicalizedResourceString += `/${this.factory.accountName}${path}`;\n\n    const queries = getURLQueries(request.url);\n    const lowercaseQueries: { [key: string]: string } = {};\n    if (queries) {\n      const queryKeys: string[] = [];\n      for (const key in queries) {\n        if (queries.hasOwnProperty(key)) {\n          const lowercaseKey = key.toLowerCase();\n          lowercaseQueries[lowercaseKey] = queries[key];\n          queryKeys.push(lowercaseKey);\n        }\n      }\n\n      queryKeys.sort();\n      for (const key of queryKeys) {\n        canonicalizedResourceString += `\\n${key}:${decodeURIComponent(lowercaseQueries[key])}`;\n      }\n    }\n\n    return canonicalizedResourceString;\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport { CredentialPolicy } from \"../policies/CredentialPolicy\";\n\n/**\n * Credential is an abstract class for Azure Storage HTTP requests signing. This\n * class will host an credentialPolicyCreator factory which generates CredentialPolicy.\n *\n * @export\n * @abstract\n * @class Credential\n */\nexport abstract class Credential implements RequestPolicyFactory {\n  /**\n   * Creates a RequestPolicy object.\n   *\n   * @param {RequestPolicy} _nextPolicy\n   * @param {RequestPolicyOptions} _options\n   * @returns {RequestPolicy}\n   * @memberof Credential\n   */\n  public create(\n    // tslint:disable-next-line:variable-name\n    _nextPolicy: RequestPolicy,\n    // tslint:disable-next-line:variable-name\n    _options: RequestPolicyOptions\n  ): RequestPolicy {\n    throw new Error(\"Method should be implemented in children classes.\");\n  }\n}\n\n/**\n * A factory function that creates a new CredentialPolicy that uses the provided nextPolicy.\n */\nexport type CredentialPolicyCreator = (\n  nextPolicy: RequestPolicy,\n  options: RequestPolicyOptions\n) => CredentialPolicy;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { createHmac } from \"crypto\";\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { StorageSharedKeyCredentialPolicy } from \"../policies/StorageSharedKeyCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * StorageSharedKeyCredential for account key authorization of Azure Storage service.\n *\n * @export\n * @class StorageSharedKeyCredential\n * @extends {Credential}\n */\nexport class StorageSharedKeyCredential extends Credential {\n  /**\n   * Azure Storage account name; readonly.\n   *\n   * @type {string}\n   * @memberof StorageSharedKeyCredential\n   */\n  public readonly accountName: string;\n\n  /**\n   * Azure Storage account key; readonly.\n   *\n   * @type {Buffer}\n   * @memberof StorageSharedKeyCredential\n   */\n  private readonly accountKey: Buffer;\n\n  /**\n   * Creates an instance of StorageSharedKeyCredential.\n   * @param {string} accountName\n   * @param {string} accountKey\n   * @memberof StorageSharedKeyCredential\n   */\n  constructor(accountName: string, accountKey: string) {\n    super();\n    this.accountName = accountName;\n    this.accountKey = Buffer.from(accountKey, \"base64\");\n  }\n\n  /**\n   * Creates a StorageSharedKeyCredentialPolicy object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {StorageSharedKeyCredentialPolicy}\n   * @memberof StorageSharedKeyCredential\n   */\n  public create(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions\n  ): StorageSharedKeyCredentialPolicy {\n    return new StorageSharedKeyCredentialPolicy(nextPolicy, options, this);\n  }\n\n  /**\n   * Generates a hash signature for an HTTP request or for a SAS.\n   *\n   * @param {string} stringToSign\n   * @returns {string}\n   * @memberof StorageSharedKeyCredential\n   */\n  public computeHMACSHA256(stringToSign: string): string {\n    return createHmac(\"sha256\", this.accountKey)\n      .update(stringToSign, \"utf8\")\n      .digest(\"base64\");\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n\n/**\n * AnonymousCredentialPolicy is used with HTTP(S) requests that read public resources\n * or for use with Shared Access Signatures (SAS).\n *\n * @export\n * @class AnonymousCredentialPolicy\n * @extends {CredentialPolicy}\n */\nexport class AnonymousCredentialPolicy extends CredentialPolicy {\n  /**\n   * Creates an instance of AnonymousCredentialPolicy.\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @memberof AnonymousCredentialPolicy\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { AnonymousCredentialPolicy } from \"../policies/AnonymousCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n\n/**\n * AnonymousCredential provides a credentialPolicyCreator member used to create\n * AnonymousCredentialPolicy objects. AnonymousCredentialPolicy is used with\n * HTTP(S) requests that read public resources or for use with Shared Access\n * Signatures (SAS).\n *\n * @export\n * @class AnonymousCredential\n * @extends {Credential}\n */\nexport class AnonymousCredential extends Credential {\n  /**\n   * Creates an {@link AnonymousCredentialPolicy} object.\n   *\n   * @param {RequestPolicy} nextPolicy\n   * @param {RequestPolicyOptions} options\n   * @returns {AnonymousCredentialPolicy}\n   * @memberof AnonymousCredential\n   */\n  public create(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions\n  ): AnonymousCredentialPolicy {\n    return new AnonymousCredentialPolicy(nextPolicy, options);\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// In browser, during webpack or browserify bundling, this module will be replaced by 'events'\n// https://github.com/Gozala/events\nimport { EventEmitter } from \"events\";\n\n/**\n * Operation is an async function to be executed and managed by Batch.\n */\nexport declare type Operation = () => Promise<any>;\n\n/**\n * States for Batch.\n *\n * @enum {number}\n */\nenum BatchStates {\n  Good,\n  Error\n}\n\n/**\n * Batch provides basic parallel execution with concurrency limits.\n * Will stop execute left operations when one of the executed operation throws an error.\n * But Batch cannot cancel ongoing operations, you need to cancel them by yourself.\n *\n * @export\n * @class Batch\n */\nexport class Batch {\n  /**\n   * Concurrency. Must be lager than 0.\n   *\n   * @type {number}\n   * @memberof Batch\n   */\n  private concurrency: number;\n\n  /**\n   * Number of active operations under execution.\n   *\n   * @private\n   * @type {number}\n   * @memberof Batch\n   */\n  private actives: number = 0;\n\n  /**\n   * Number of completed operations under execution.\n   *\n   * @private\n   * @type {number}\n   * @memberof Batch\n   */\n  private completed: number = 0;\n\n  /**\n   * Offset of next operation to be executed.\n   *\n   * @private\n   * @type {number}\n   * @memberof Batch\n   */\n  private offset: number = 0;\n\n  /**\n   * Operation array to be executed.\n   *\n   * @private\n   * @type {Operation[]}\n   * @memberof Batch\n   */\n  private operations: Operation[] = [];\n\n  /**\n   * States of Batch. When an error happens, state will turn into error.\n   * Batch will stop execute left operations.\n   *\n   * @private\n   * @type {BatchStates}\n   * @memberof Batch\n   */\n  private state: BatchStates = BatchStates.Good;\n\n  /**\n   * A private emitter used to pass events inside this class.\n   *\n   * @private\n   * @type {EventEmitter}\n   * @memberof Batch\n   */\n  private emitter: EventEmitter;\n\n  /**\n   * Creates an instance of Batch.\n   * @param {number} [concurrency=5]\n   * @memberof Batch\n   */\n  public constructor(concurrency: number = 5) {\n    if (concurrency < 1) {\n      throw new RangeError(\"concurrency must be larger than 0\");\n    }\n    this.concurrency = concurrency;\n    this.emitter = new EventEmitter();\n  }\n\n  /**\n   * Add a operation into queue.\n   *\n   * @param {Operation} operation\n   * @memberof Batch\n   */\n  public addOperation(operation: Operation): void {\n    this.operations.push(async () => {\n      try {\n        this.actives++;\n        await operation();\n        this.actives--;\n        this.completed++;\n        this.parallelExecute();\n      } catch (error) {\n        this.emitter.emit(\"error\", error);\n      }\n    });\n  }\n\n  /**\n   * Start execute operations in the queue.\n   *\n   * @returns {Promise<void>}\n   * @memberof Batch\n   */\n  public async do(): Promise<void> {\n    if (this.operations.length === 0) {\n      return Promise.resolve();\n    }\n\n    this.parallelExecute();\n\n    return new Promise<void>((resolve, reject) => {\n      this.emitter.on(\"finish\", resolve);\n\n      this.emitter.on(\"error\", (error) => {\n        this.state = BatchStates.Error;\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Get next operation to be executed. Return null when reaching ends.\n   *\n   * @private\n   * @returns {(Operation | null)}\n   * @memberof Batch\n   */\n  private nextOperation(): Operation | null {\n    if (this.offset < this.operations.length) {\n      return this.operations[this.offset++];\n    }\n    return null;\n  }\n\n  /**\n   * Start execute operations. One one the most important difference between\n   * this method with do() is that do() wraps as an sync method.\n   *\n   * @private\n   * @returns {void}\n   * @memberof Batch\n   */\n  private parallelExecute(): void {\n    if (this.state === BatchStates.Error) {\n      return;\n    }\n\n    if (this.completed >= this.operations.length) {\n      this.emitter.emit(\"finish\");\n      return;\n    }\n\n    while (this.actives < this.concurrency) {\n      const operation = this.nextOperation();\n      if (operation) {\n        operation();\n      } else {\n        return;\n      }\n    }\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { getTracer, OperationTracingOptions, SpanOptions } from \"@azure/core-tracing\";\nimport { Span, SpanOptions as OTSpanOptions, SpanKind } from \"@opentelemetry/api\";\n\n/**\n * Creates a span using the global tracer.\n * @param name The name of the operation being performed.\n * @param tracingOptions The options for the underlying http request.\n */\nexport function createSpan(\n  operationName: string,\n  tracingOptions: OperationTracingOptions = {}\n): { span: Span; spanOptions: SpanOptions } {\n  const tracer = getTracer();\n  const spanOptions: OTSpanOptions = {\n    ...tracingOptions.spanOptions,\n    kind: SpanKind.INTERNAL\n  };\n\n  const span = tracer.startSpan(`Azure.Storage.Blob.${operationName}`, spanOptions);\n  span.setAttribute(\"az.namespace\", \"Microsoft.Storage\");\n\n  let newOptions = tracingOptions.spanOptions || {};\n  if (span.isRecording()) {\n    newOptions = {\n      ...tracingOptions.spanOptions,\n      parent: span.context(),\n      attributes: {\n        ...spanOptions.attributes,\n        \"az.namespace\": \"Microsoft.Storage\"\n      }\n    };\n  }\n\n  return {\n    span,\n    spanOptions: newOptions\n  };\n}\n", "/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\nconst packageName = \"azure-storage-blob\";\nconst packageVersion = \"12.1.2\";\n\nexport class StorageClientContext extends coreHttp.ServiceClient {\n  url: string;\n  version: string;\n\n  /**\n   * Initializes a new instance of the StorageClientContext class.\n   * @param url The URL of the service account, container, or blob that is the targe of the desired\n   * operation.\n   * @param [options] The parameter options\n   */\n  constructor(url: string, options?: coreHttp.ServiceClientOptions) {\n    if (url == undefined) {\n      throw new Error(\"'url' cannot be null.\");\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = coreHttp.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(undefined, options);\n\n    this.version = '2019-07-07';\n    this.baseUri = \"{url}\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.url = url;\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { StorageClientContext } from \"./generated/src/storageClientContext\";\nimport { Pipeline } from \"./Pipeline\";\nimport { escapeURLPath, getURLScheme, iEqual, getAccountNameFromUrl } from \"./utils/utils.common\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { TokenCredential, isTokenCredential, isNode } from \"@azure/core-http\";\nimport { OperationTracingOptions } from \"@azure/core-tracing\";\n\n/**\n * An interface for options common to every remote operation.\n */\nexport interface CommonOptions {\n  /**\n   * Options to configure spans created when tracing is enabled.\n   */\n  tracingOptions?: OperationTracingOptions;\n}\n\n/**\n * A StorageClient represents a based URL class for {@link BlobServiceClient}, {@link ContainerClient}\n * and etc.\n *\n * @export\n * @class StorageClient\n */\nexport abstract class StorageClient {\n  /**\n   * Encoded URL string value.\n   *\n   * @type {string}\n   * @memberof StorageClient\n   */\n  public readonly url: string;\n  public readonly accountName: string;\n  /**\n   * Request policy pipeline.\n   *\n   * @internal\n   * @ignore\n   * @type {Pipeline}\n   * @memberof StorageClient\n   */\n  protected readonly pipeline: Pipeline;\n  /**\n   * Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the @azure/identity package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   *\n   * @type {StorageSharedKeyCredential | AnonymousCredential | TokenCredential}\n   * @memberof StorageClient\n   */\n  public readonly credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential;\n  /**\n   * StorageClient is a reference to protocol layer operations entry, which is\n   * generated by AutoRest generator.\n   *\n   * @protected\n   * @type {StorageClientContext}\n   * @memberof StorageClient\n   */\n  protected readonly storageClientContext: StorageClientContext;\n  /**\n   * @protected\n   * @type {boolean}\n   * @memberof StorageClient\n   */\n  protected readonly isHttps: boolean;\n\n  /**\n   * Creates an instance of StorageClient.\n   * @param {string} url url to resource\n   * @param {Pipeline} pipeline request policy pipeline.\n   * @memberof StorageClient\n   */\n  protected constructor(url: string, pipeline: Pipeline) {\n    // URL should be encoded and only once, protocol layer shouldn't encode URL again\n    this.url = escapeURLPath(url);\n    this.accountName = getAccountNameFromUrl(url);\n    this.pipeline = pipeline;\n    this.storageClientContext = new StorageClientContext(\n      this.url,\n      pipeline.toServiceClientOptions()\n    );\n\n    this.isHttps = iEqual(getURLScheme(this.url) || \"\", \"https\");\n\n    this.credential = new AnonymousCredential();\n    for (const factory of this.pipeline.factories) {\n      if (\n        (isNode && factory instanceof StorageSharedKeyCredential) ||\n        factory instanceof AnonymousCredential ||\n        isTokenCredential(factory)\n      ) {\n        this.credential = factory;\n      }\n    }\n\n    // Override protocol layer's default content-type\n    const storageClientContext = this.storageClientContext as any;\n    storageClientContext.requestContentType = undefined;\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { EventEmitter } from \"events\";\nimport { Readable } from \"stream\";\n\n/**\n * OutgoingHandler is an async function triggered by BufferScheduler.\n */\nexport declare type OutgoingHandler = (buffer: Buffer, offset?: number) => Promise<any>;\n\n/**\n * This class accepts a Node.js Readable stream as input, and keeps reading data\n * from the stream into the internal buffer structure, until it reaches maxBuffers.\n * Every available buffer will try to trigger outgoingHandler.\n *\n * The internal buffer structure includes an incoming buffer array, and a outgoing\n * buffer array. The incoming buffer array includes the \"empty\" buffers can be filled\n * with new incoming data. The outgoing array includes the filled buffers to be\n * handled by outgoingHandler. Every above buffer size is defined by parameter bufferSize.\n *\n * NUM_OF_ALL_BUFFERS = BUFFERS_IN_INCOMING + BUFFERS_IN_OUTGOING + BUFFERS_UNDER_HANDLING\n *\n * NUM_OF_ALL_BUFFERS <= maxBuffers\n *\n * PERFORMANCE IMPROVEMENT TIPS:\n * 1. Input stream highWaterMark is better to set a same value with bufferSize\n *    parameter, which will avoid Buffer.concat() operations.\n * 2. concurrency should set a smaller value than maxBuffers, which is helpful to\n *    reduce the possibility when a outgoing handler waits for the stream data.\n *    in this situation, outgoing handlers are blocked.\n *    Outgoing queue shouldn't be empty.\n * @export\n * @class BufferScheduler\n */\nexport class BufferScheduler {\n  /**\n   * Size of buffers in incoming and outgoing queues. This class will try to align\n   * data read from Readable stream into buffer chunks with bufferSize defined.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private readonly bufferSize: number;\n\n  /**\n   * How many buffers can be created or maintained.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private readonly maxBuffers: number;\n\n  /**\n   * A Node.js Readable stream.\n   *\n   * @private\n   * @type {Readable}\n   * @memberof BufferScheduler\n   */\n  private readonly readable: Readable;\n\n  /**\n   * OutgoingHandler is an async function triggered by BufferScheduler when there\n   * are available buffers in outgoing array.\n   *\n   * @private\n   * @type {OutgoingHandler}\n   * @memberof BufferScheduler\n   */\n  private readonly outgoingHandler: OutgoingHandler;\n\n  /**\n   * An internal event emitter.\n   *\n   * @private\n   * @type {EventEmitter}\n   * @memberof BufferScheduler\n   */\n  private readonly emitter: EventEmitter = new EventEmitter();\n\n  /**\n   * Concurrency of executing outgoingHandlers. (0 < concurrency <= maxBuffers)\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private readonly concurrency: number;\n\n  /**\n   * An internal offset marker to track data offset in bytes of next outgoingHandler.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private offset: number = 0;\n\n  /**\n   * An internal marker to track whether stream is end.\n   *\n   * @private\n   * @type {boolean}\n   * @memberof BufferScheduler\n   */\n  private isStreamEnd: boolean = false;\n\n  /**\n   * An internal marker to track whether stream or outgoingHandler returns error.\n   *\n   * @private\n   * @type {boolean}\n   * @memberof BufferScheduler\n   */\n  private isError: boolean = false;\n\n  /**\n   * How many handlers are executing.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private executingOutgoingHandlers: number = 0;\n\n  /**\n   * Encoding of the input Readable stream which has string data type instead of Buffer.\n   *\n   * @private\n   * @type {string}\n   * @memberof BufferScheduler\n   */\n  private encoding?: string;\n\n  /**\n   * How many buffers have been allocated.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private numBuffers: number = 0;\n\n  /**\n   * Because this class doesn't know how much data every time stream pops, which\n   * is defined by highWaterMarker of the stream. So BufferScheduler will cache\n   * data received from the stream, when data in unresolvedDataArray exceeds the\n   * blockSize defined, it will try to concat a blockSize of buffer, fill into available\n   * buffers from incoming and push to outgoing array.\n   *\n   * @private\n   * @type {Buffer[]}\n   * @memberof BufferScheduler\n   */\n  private unresolvedDataArray: Buffer[] = [];\n\n  /**\n   * How much data consisted in unresolvedDataArray.\n   *\n   * @private\n   * @type {number}\n   * @memberof BufferScheduler\n   */\n  private unresolvedLength: number = 0;\n\n  /**\n   * The array includes all the available buffers can be used to fill data from stream.\n   *\n   * @private\n   * @type {Buffer[]}\n   * @memberof BufferScheduler\n   */\n  private incoming: Buffer[] = [];\n\n  /**\n   * The array (queue) includes all the buffers filled from stream data.\n   *\n   * @private\n   * @type {Buffer[]}\n   * @memberof BufferScheduler\n   */\n  private outgoing: Buffer[] = [];\n\n  /**\n   * Creates an instance of BufferScheduler.\n   *\n   * @param {Readable} readable A Node.js Readable stream\n   * @param {number} bufferSize Buffer size of every maintained buffer\n   * @param {number} maxBuffers How many buffers can be allocated\n   * @param {OutgoingHandler} outgoingHandler An async function scheduled to be\n   *                                          triggered when a buffer fully filled\n   *                                          with stream data\n   * @param {number} concurrency Concurrency of executing outgoingHandlers (>0)\n   * @param {string} [encoding] [Optional] Encoding of Readable stream when it's a string stream\n   * @memberof BufferScheduler\n   */\n  constructor(\n    readable: Readable,\n    bufferSize: number,\n    maxBuffers: number,\n    outgoingHandler: OutgoingHandler,\n    concurrency: number,\n    encoding?: string\n  ) {\n    if (bufferSize <= 0) {\n      throw new RangeError(`bufferSize must be larger than 0, current is ${bufferSize}`);\n    }\n\n    if (maxBuffers <= 0) {\n      throw new RangeError(`maxBuffers must be larger than 0, current is ${maxBuffers}`);\n    }\n\n    if (concurrency <= 0) {\n      throw new RangeError(`concurrency must be larger than 0, current is ${concurrency}`);\n    }\n\n    this.bufferSize = bufferSize;\n    this.maxBuffers = maxBuffers;\n    this.readable = readable;\n    this.outgoingHandler = outgoingHandler;\n    this.concurrency = concurrency;\n    this.encoding = encoding;\n  }\n\n  /**\n   * Start the scheduler, will return error when stream of any of the outgoingHandlers\n   * returns error.\n   *\n   * @returns {Promise<void>}\n   * @memberof BufferScheduler\n   */\n  public async do(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.readable.on(\"data\", (data) => {\n        data = typeof data === \"string\" ? Buffer.from(data, this.encoding) : data;\n        this.appendUnresolvedData(data);\n\n        if (!this.resolveData()) {\n          this.readable.pause();\n        }\n      });\n\n      this.readable.on(\"error\", (err) => {\n        this.emitter.emit(\"error\", err);\n      });\n\n      this.readable.on(\"end\", () => {\n        this.isStreamEnd = true;\n        this.emitter.emit(\"checkEnd\");\n      });\n\n      this.emitter.on(\"error\", (err) => {\n        this.isError = true;\n        this.readable.pause();\n        reject(err);\n      });\n\n      this.emitter.on(\"checkEnd\", () => {\n        if (this.outgoing.length > 0) {\n          this.triggerOutgoingHandlers();\n          return;\n        }\n\n        if (this.isStreamEnd && this.executingOutgoingHandlers === 0) {\n          if (this.unresolvedLength > 0 && this.unresolvedLength < this.bufferSize) {\n            this.outgoingHandler(this.shiftBufferFromUnresolvedDataArray(), this.offset)\n              .then(resolve)\n              .catch(reject);\n          } else if (this.unresolvedLength >= this.bufferSize) {\n            return;\n          } else {\n            resolve();\n          }\n        }\n      });\n    });\n  }\n\n  /**\n   * Insert a new data into unresolved array.\n   *\n   * @private\n   * @param {Buffer} data\n   * @memberof BufferScheduler\n   */\n  private appendUnresolvedData(data: Buffer) {\n    this.unresolvedDataArray.push(data);\n    this.unresolvedLength += data.length;\n  }\n\n  /**\n   * Try to shift a buffer with size in blockSize. The buffer returned may be less\n   * than blockSize when data in unresolvedDataArray is less than bufferSize.\n   *\n   * @private\n   * @returns {Buffer}\n   * @memberof BufferScheduler\n   */\n  private shiftBufferFromUnresolvedDataArray(): Buffer {\n    if (this.unresolvedLength >= this.bufferSize) {\n      if (this.bufferSize === this.unresolvedDataArray[0].length) {\n        this.unresolvedLength -= this.bufferSize;\n        return this.unresolvedDataArray.shift()!;\n      }\n\n      // Lazy concat because Buffer.concat highly drops performance\n      let merged = Buffer.concat(this.unresolvedDataArray, this.unresolvedLength);\n      const buffer = merged.slice(0, this.bufferSize);\n      merged = merged.slice(this.bufferSize);\n      this.unresolvedDataArray = [merged];\n      this.unresolvedLength -= buffer.length;\n      return buffer;\n    } else if (this.unresolvedLength > 0) {\n      const merged = Buffer.concat(this.unresolvedDataArray, this.unresolvedLength);\n      this.unresolvedDataArray = [];\n      this.unresolvedLength = 0;\n      return merged;\n    } else {\n      return Buffer.allocUnsafe(0);\n    }\n  }\n\n  /**\n   * Resolve data in unresolvedDataArray. For every buffer with size in blockSize\n   * shifted, it will try to get (or allocate a buffer) from incoming, and fill it,\n   * then push it into outgoing to be handled by outgoing handler.\n   *\n   * Return false when available buffers in incoming are not enough, else true.\n   *\n   * @private\n   * @returns {boolean} Return false when buffers in incoming are not enough, else true.\n   * @memberof BufferScheduler\n   */\n  private resolveData(): boolean {\n    while (this.unresolvedLength >= this.bufferSize) {\n      let buffer: Buffer;\n\n      if (this.incoming.length > 0) {\n        buffer = this.incoming.shift()!;\n      } else {\n        if (this.numBuffers < this.maxBuffers) {\n          buffer = Buffer.allocUnsafe(this.bufferSize);\n          this.numBuffers++;\n        } else {\n          // No available buffer, wait for buffer returned\n          return false;\n        }\n      }\n\n      buffer.fill(this.shiftBufferFromUnresolvedDataArray());\n      this.outgoing.push(buffer);\n      this.triggerOutgoingHandlers();\n    }\n    return true;\n  }\n\n  /**\n   * Try to trigger a outgoing handler for every buffer in outgoing. Stop when\n   * concurrency reaches.\n   *\n   * @private\n   * @memberof BufferScheduler\n   */\n  private async triggerOutgoingHandlers() {\n    let buffer: Buffer | undefined;\n    do {\n      if (this.executingOutgoingHandlers >= this.concurrency) {\n        return;\n      }\n\n      buffer = this.outgoing.shift();\n      if (buffer) {\n        this.triggerOutgoingHandler(buffer);\n      }\n    } while (buffer);\n  }\n\n  /**\n   * Trigger a outgoing handler for a buffer shifted from outgoing.\n   *\n   * @private\n   * @param {Buffer} buffer\n   * @returns {Promise<any>}\n   * @memberof BufferScheduler\n   */\n  private async triggerOutgoingHandler(buffer: Buffer): Promise<any> {\n    const bufferLength = buffer.length;\n\n    this.executingOutgoingHandlers++;\n    this.offset += bufferLength;\n\n    try {\n      await this.outgoingHandler(buffer, this.offset - bufferLength);\n    } catch (err) {\n      this.emitter.emit(\"error\", err);\n      return;\n    }\n\n    this.executingOutgoingHandlers--;\n    this.reuseBuffer(buffer);\n    this.emitter.emit(\"checkEnd\");\n  }\n\n  /**\n   * Return buffer used by outgoing handler into incoming.\n   *\n   * @private\n   * @param {Buffer} buffer\n   * @memberof BufferScheduler\n   */\n  private reuseBuffer(buffer: Buffer) {\n    this.incoming.push(buffer);\n    if (!this.isError && this.resolveData() && !this.isStreamEnd) {\n      this.readable.resume();\n    }\n  }\n}\n", "import { HttpResponse } from \"@azure/core-http\";\nimport {\n  PageBlobGetPageRangesHeaders,\n  PageBlobGetPageRangesDiffHeaders,\n  PageBlobGetPageRangesResponse as PageBlobGetPageRangesResponseModel,\n  PageBlobGetPageRangesDiffResponse as PageBlobGetPageRangesDiffResponseModel\n} from \"./generatedModels\";\nimport { Range } from \"./Range\";\n\n/**\n * List of page ranges for a blob.\n */\nexport interface PageList {\n  /**\n   * Valid non-overlapping page ranges.\n   */\n  pageRange?: Range[];\n  /**\n   * Present if the prevSnapshot parameter was specified and there were cleared\n   * pages between the previous snapshot and the target snapshot.\n   */\n  clearRange?: Range[];\n}\n\n/**\n * Contains response data for the {@link BlobClient.getPageRanges} operation.\n */\nexport interface PageBlobGetPageRangesResponse extends PageList, PageBlobGetPageRangesHeaders {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: PageBlobGetPageRangesHeaders;\n\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: PageList;\n  };\n}\n\n/**\n * Contains response data for the {@link BlobClient.getPageRangesDiff} operation.\n */\nexport interface PageBlobGetPageRangesDiffResponse\n  extends PageList,\n    PageBlobGetPageRangesDiffHeaders {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: PageBlobGetPageRangesDiffHeaders;\n\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: PageList;\n  };\n}\n\n/**\n * Function that converts PageRange and ClearRange to a common Range object.\n * PageRange and ClearRange have start and end while Range offset and count\n * this function normalizes to Range.\n * @param response Model PageBlob Range response\n */\nexport function rangeResponseFromModel(\n  response: PageBlobGetPageRangesResponseModel | PageBlobGetPageRangesDiffResponseModel\n): PageBlobGetPageRangesResponse | PageBlobGetPageRangesDiffResponse {\n  const pageRange = (response._response.parsedBody.pageRange || []).map((x) => ({\n    offset: x.start,\n    count: x.end - x.start\n  }));\n\n  const clearRange = (response._response.parsedBody.clearRange || []).map((x) => ({\n    offset: x.start,\n    count: x.end - x.start\n  }));\n\n  return {\n    ...response,\n    pageRange,\n    clearRange,\n    _response: {\n      ...response._response,\n      parsedBody: {\n        pageRange,\n        clearRange\n      }\n    }\n  };\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { delay } from \"@azure/core-http\";\nimport { PollOperation, PollOperationState, Poller } from \"@azure/core-lro\";\nimport { BlobClient, BlobStartCopyFromURLOptions, BlobBeginCopyFromURLResponse } from \"../Clients\";\n\n/**\n * Defines the operations from a {@link BlobClient} that are needed for the poller\n * returned by {@link BlobClient.beginCopyFromURL} to work.\n */\nexport type CopyPollerBlobClient = Pick<BlobClient, \"abortCopyFromURL\" | \"getProperties\"> & {\n  startCopyFromURL(\n    copySource: string,\n    options?: BlobStartCopyFromURLOptions\n  ): Promise<BlobBeginCopyFromURLResponse>;\n};\n\n/**\n * The state used by the poller returned from {@link BlobClient.beginCopyFromURL}.\n *\n * This state is passed into the user-specified `onProgress` callback\n * whenever copy progress is detected.\n */\nexport interface BlobBeginCopyFromUrlPollState\n  extends PollOperationState<BlobBeginCopyFromURLResponse> {\n  /**\n   * The instance of {@link BlobClient} that was used when calling {@link BlobClient.beginCopyFromURL}.\n   */\n  readonly blobClient: CopyPollerBlobClient;\n  /**\n   * The copyId that identifies the in-progress blob copy.\n   */\n  copyId?: string;\n  /**\n   * the progress of the blob copy as reported by the service.\n   */\n  copyProgress?: string;\n  /**\n   * The source URL provided in {@link BlobClient.beginCopyFromURL}.\n   */\n  copySource: string;\n  /**\n   * The options that were passed to the initial {@link BlobClient.beginCopyFromURL} call.\n   * This is exposed for the poller and should not be modified directly.\n   */\n  readonly startCopyFromURLOptions?: BlobStartCopyFromURLOptions;\n}\n\n/**\n * The PollOperation responsible for:\n *  - performing the initial startCopyFromURL\n *  - checking the copy status via getProperties\n *  - cancellation via abortCopyFromURL\n * @ignore\n */\nexport interface BlobBeginCopyFromURLPollOperation\n  extends PollOperation<BlobBeginCopyFromUrlPollState, BlobBeginCopyFromURLResponse> {}\n\n/**\n * The set of options used to configure the poller.\n * This is an internal interface populated by {@link BlobClient.beginCopyFromURL}.\n *\n * @ignore\n */\nexport interface BlobBeginCopyFromUrlPollerOptions {\n  blobClient: CopyPollerBlobClient;\n  copySource: string;\n  intervalInMs?: number;\n  onProgress?: (state: BlobBeginCopyFromUrlPollState) => void;\n  resumeFrom?: string;\n  startCopyFromURLOptions?: BlobStartCopyFromURLOptions;\n}\n\n/**\n * This is the poller returned by {@link BlobClient.beginCopyFromURL}.\n * This can not be instantiated directly outside of this package.\n *\n * @ignore\n */\nexport class BlobBeginCopyFromUrlPoller extends Poller<\n  BlobBeginCopyFromUrlPollState,\n  BlobBeginCopyFromURLResponse\n> {\n  public intervalInMs: number;\n\n  constructor(options: BlobBeginCopyFromUrlPollerOptions) {\n    const {\n      blobClient,\n      copySource,\n      intervalInMs = 15000,\n      onProgress,\n      resumeFrom,\n      startCopyFromURLOptions\n    } = options;\n\n    let state: BlobBeginCopyFromUrlPollState | undefined;\n\n    if (resumeFrom) {\n      state = JSON.parse(resumeFrom).state;\n    }\n\n    const operation = makeBlobBeginCopyFromURLPollOperation({\n      ...state,\n      blobClient,\n      copySource,\n      startCopyFromURLOptions\n    });\n\n    super(operation);\n\n    if (typeof onProgress === \"function\") {\n      this.onProgress(onProgress);\n    }\n\n    this.intervalInMs = intervalInMs;\n  }\n\n  public delay(): Promise<void> {\n    return delay(this.intervalInMs);\n  }\n}\n\n/**\n * Note: Intentionally using function expression over arrow function expression\n * so that the function can be invoked with a different context.\n * This affects what `this` refers to.\n * @ignore\n */\nconst cancel: BlobBeginCopyFromURLPollOperation[\"cancel\"] = async function cancel(\n  this: BlobBeginCopyFromURLPollOperation,\n  options = {}\n) {\n  const state = this.state;\n  const { copyId } = state;\n  if (state.isCompleted) {\n    return makeBlobBeginCopyFromURLPollOperation(state);\n  }\n\n  if (!copyId) {\n    state.isCancelled = true;\n    return makeBlobBeginCopyFromURLPollOperation(state);\n  }\n\n  // if abortCopyFromURL throws, it will bubble up to user's poller.cancelOperation call\n  await state.blobClient.abortCopyFromURL(copyId, {\n    abortSignal: options.abortSignal\n  });\n  state.isCancelled = true;\n\n  return makeBlobBeginCopyFromURLPollOperation(state);\n};\n\n/**\n * Note: Intentionally using function expression over arrow function expression\n * so that the function can be invoked with a different context.\n * This affects what `this` refers to.\n * @ignore\n */\nconst update: BlobBeginCopyFromURLPollOperation[\"update\"] = async function update(\n  this: BlobBeginCopyFromURLPollOperation,\n  options = {}\n): Promise<BlobBeginCopyFromURLPollOperation> {\n  const state = this.state;\n  const { blobClient, copySource, startCopyFromURLOptions } = state;\n\n  if (!state.isStarted) {\n    state.isStarted = true;\n    const result = await blobClient.startCopyFromURL(copySource, startCopyFromURLOptions);\n\n    // copyId is needed to abort\n    state.copyId = result.copyId;\n    if (result.copyStatus === \"success\") {\n      state.result = result;\n      state.isCompleted = true;\n    }\n  } else if (!state.isCompleted) {\n    try {\n      const result = await state.blobClient.getProperties({ abortSignal: options.abortSignal });\n      const { copyStatus, copyProgress } = result;\n      const prevCopyProgress = state.copyProgress;\n      if (copyProgress) {\n        state.copyProgress = copyProgress;\n      }\n      if (\n        copyStatus === \"pending\" &&\n        copyProgress !== prevCopyProgress &&\n        typeof options.fireProgress === \"function\"\n      ) {\n        // trigger in setTimeout, or swallow error?\n        options.fireProgress(state);\n      } else if (copyStatus === \"success\") {\n        state.result = result;\n        state.isCompleted = true;\n      } else if (copyStatus === \"failed\") {\n        state.error = new Error(\n          `Blob copy failed with reason: \"${result.copyStatusDescription || \"unknown\"}\"`\n        );\n        state.isCompleted = true;\n      }\n    } catch (err) {\n      state.error = err;\n      state.isCompleted = true;\n    }\n  }\n\n  return makeBlobBeginCopyFromURLPollOperation(state);\n};\n\n/**\n * Note: Intentionally using function expression over arrow function expression\n * so that the function can be invoked with a different context.\n * This affects what `this` refers to.\n * @ignore\n */\nconst toString: BlobBeginCopyFromURLPollOperation[\"toString\"] = function toString(\n  this: BlobBeginCopyFromURLPollOperation\n) {\n  return JSON.stringify({ state: this.state }, (key, value) => {\n    // remove blobClient from serialized state since a client can't be hydrated from this info.\n    if (key === \"blobClient\") {\n      return undefined;\n    }\n    return value;\n  });\n};\n\n/**\n * Creates a poll operation given the provided state.\n * @ignore\n */\nfunction makeBlobBeginCopyFromURLPollOperation(\n  state: BlobBeginCopyFromUrlPollState\n): BlobBeginCopyFromURLPollOperation {\n  return {\n    state: { ...state },\n    cancel,\n    toString,\n    update\n  };\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  isNode,\n  TransferProgressEvent,\n  TokenCredential,\n  isTokenCredential,\n  getDefaultProxySettings,\n  URLBuilder\n} from \"@azure/core-http\";\nimport { CanonicalCode } from \"@opentelemetry/api\";\nimport {\n  BlobDownloadResponseModel,\n  CpkInfo,\n  DeleteSnapshotsOptionType,\n  ModifiedAccessConditions,\n  RehydratePriority,\n  LeaseAccessConditions,\n  BlobDownloadOptionalParams,\n  BlobGetPropertiesResponse,\n  BlobDeleteResponse,\n  BlobUndeleteResponse,\n  BlobHTTPHeaders,\n  BlobSetHTTPHeadersResponse,\n  BlobSetMetadataResponse,\n  BlobCreateSnapshotResponse,\n  BlobStartCopyFromURLResponse,\n  BlobAbortCopyFromURLResponse,\n  BlobCopyFromURLResponse,\n  BlobSetTierResponse,\n  ContainerEncryptionScope\n} from \"./generatedModels\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { BlobDownloadResponse } from \"./BlobDownloadResponse\";\nimport { Blob as StorageBlob } from \"./generated/src/operations\";\nimport { rangeToString } from \"./Range\";\nimport {\n  BlobRequestConditions,\n  Metadata,\n  ensureCpkIfSpecified,\n  BlockBlobTier,\n  PremiumPageBlobTier,\n  toAccessTier\n} from \"./models\";\nimport { newPipeline, StoragePipelineOptions, Pipeline } from \"./Pipeline\";\nimport {\n  DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS,\n  URLConstants,\n  DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES,\n  DEFAULT_BLOCK_BUFFER_SIZE_BYTES\n} from \"./utils/constants\";\nimport {\n  setURLParameter,\n  extractConnectionStringParts,\n  appendToURLPath\n} from \"./utils/utils.common\";\nimport { fsStat, readStreamToLocalFile, streamToBuffer } from \"./utils/utils.node\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { Batch } from \"./utils/Batch\";\nimport { createSpan } from \"./utils/tracing\";\nimport { HttpRequestBody } from \"@azure/core-http\";\nimport {\n  AppendBlobCreateResponse,\n  AppendBlobAppendBlockFromUrlResponse,\n  AppendBlobAppendBlockResponse\n} from \"./generatedModels\";\nimport { AppendBlob } from \"./generated/src/operations\";\nimport { AppendBlobRequestConditions } from \"./models\";\nimport { CommonOptions, StorageClient } from \"./StorageClient\";\nimport * as fs from \"fs\";\nimport { generateUuid, HttpResponse } from \"@azure/core-http\";\nimport {\n  BlockBlobUploadHeaders,\n  BlockBlobUploadResponse,\n  BlockBlobStageBlockResponse,\n  BlockBlobStageBlockFromURLResponse,\n  BlockBlobCommitBlockListResponse,\n  BlockBlobGetBlockListResponse,\n  BlockListType\n} from \"./generatedModels\";\nimport { BlockBlob } from \"./generated/src/operations\";\nimport { Range } from \"./Range\";\nimport { generateBlockID } from \"./utils/utils.common\";\nimport {\n  BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES,\n  BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES,\n  BLOCK_BLOB_MAX_BLOCKS\n} from \"./utils/constants\";\nimport { BufferScheduler } from \"./utils/BufferScheduler\";\nimport { Readable } from \"stream\";\nimport {\n  PageBlobCreateResponse,\n  PageBlobUploadPagesResponse,\n  PageBlobUploadPagesFromURLResponse,\n  PageBlobClearPagesResponse,\n  PageBlobResizeResponse,\n  SequenceNumberActionType,\n  PageBlobUpdateSequenceNumberResponse,\n  PageBlobCopyIncrementalResponse\n} from \"./generatedModels\";\nimport { PageBlob } from \"./generated/src/operations\";\nimport { PageBlobRequestConditions } from \"./models\";\nimport {\n  PageBlobGetPageRangesDiffResponse,\n  PageBlobGetPageRangesResponse,\n  rangeResponseFromModel\n} from \"./PageBlobRangeResponse\";\nimport {\n  BlobBeginCopyFromUrlPoller,\n  BlobBeginCopyFromUrlPollState,\n  CopyPollerBlobClient\n} from \"./pollers/BlobStartCopyFromUrlPoller\";\nimport { PollerLike, PollOperationState } from \"@azure/core-lro\";\nimport { ContainerBreakLeaseOptionalParams } from \"./generatedModels\";\nimport { StorageClientContext } from \"./generated/src/storageClient\";\nimport {\n  ContainerGetAccessPolicyHeaders,\n  SignedIdentifierModel,\n  PublicAccessType,\n  ListBlobsIncludeItem,\n  ContainerCreateResponse,\n  ContainerGetPropertiesResponse,\n  ContainerDeleteResponse,\n  ContainerSetMetadataResponse,\n  ContainerSetAccessPolicyResponse,\n  ContainerListBlobFlatSegmentResponse,\n  ContainerListBlobHierarchySegmentResponse,\n  BlobItem,\n  BlobPrefix\n} from \"./generatedModels\";\nimport { Container } from \"./generated/src/operations\";\nimport { ETagNone } from \"./utils/constants\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\nimport \"@azure/core-paging\";\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\n\n/**\n * Options to configure the {@link BlobClient.beginCopyFromURL} operation.\n *\n * @export\n * @interface BlobBeginCopyFromURLOptions\n */\nexport interface BlobBeginCopyFromURLOptions extends BlobStartCopyFromURLOptions {\n  /**\n   * The amount of time in milliseconds the poller should wait between\n   * calls to the service to determine the status of the Blob copy.\n   * Defaults to 15 seconds.\n   *\n   * @type {number}\n   * @memberof BlobBeginCopyFromURLOptions\n   */\n  intervalInMs?: number;\n  /**\n   * Callback to receive the state of the copy progress.\n   *\n   * @memberof BlobBeginCopyFromURLOptions\n   */\n  onProgress?: (state: BlobBeginCopyFromUrlPollState) => void;\n  /**\n   * Serialized poller state that can be used to resume polling from.\n   * This may be useful when starting a copy on one process or thread\n   * and you wish to continue polling on another process or thread.\n   *\n   * To get serialized poller state, call `poller.toString()` on an existing\n   * poller.\n   *\n   * @memberof BlobBeginCopyFromURLOptions\n   */\n  resumeFrom?: string;\n}\n\n/**\n * Contains response data for the {@link BlobClient.beginCopyFromURL} operation.\n *\n * @export\n * @interface BlobBeginCopyFromURLResponse\n */\nexport interface BlobBeginCopyFromURLResponse extends BlobStartCopyFromURLResponse {}\n\n/**\n * Options to configure the {@link BlobClient.download} operation.\n *\n * @export\n * @interface BlobDownloadOptions\n */\nexport interface BlobDownloadOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlobDownloadOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * An opaque DateTime string value that, when present, specifies the blob snapshot to retrieve.\n   *\n   * @type {string}\n   * @memberof BlobDownloadOptions\n   */\n  snapshot?: string;\n  /**\n   * When this is set to true and download range of blob, the service returns the MD5 hash for the range,\n   * as long as the range is less than or equal to 4 MB in size.\n   *\n   * rangeGetContentCrc64 and rangeGetContentMD5 cannot be set at same time.\n   *\n   * @type {boolean}\n   * @memberof BlobDownloadOptions\n   */\n  rangeGetContentMD5?: boolean;\n  /**\n   * When this is set to true and download range of blob, the service returns the CRC64 hash for the range,\n   * as long as the range is less than or equal to 4 MB in size.\n   *\n   * rangeGetContentCrc64 and rangeGetContentMD5 cannot be set at same time.\n   *\n   * @type {boolean}\n   * @memberof BlobDownloadOptions\n   */\n  rangeGetContentCrc64?: boolean;\n  /**\n   * Conditions to meet when downloading blobs.\n   *\n   * @type {BlobRequestConditions}\n   * @memberof BlobDownloadOptions\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Call back to receive events on the progress of download operation.\n   *\n   * @type {(progress: TransferProgressEvent) => void}\n   * @memberof BlobDownloadOptions\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Optional. ONLY AVAILABLE IN NODE.JS.\n   *\n   * How many retries will perform when original body download stream unexpected ends.\n   * Above kind of ends will not trigger retry policy defined in a pipeline,\n   * because they doesn't emit network errors.\n   *\n   * With this option, every additional retry means an additional `FileClient.download()` request will be made\n   * from the broken point, until the requested range has been successfully downloaded or maxRetryRequests is reached.\n   *\n   * Default value is 5, please set a larger value when loading large files in poor network.\n   *\n   * @type {number}\n   * @memberof BlobDownloadOptions\n   */\n  maxRetryRequests?: number;\n  /**\n   * Customer Provided Key Info.\n   *\n   * @type {CpkInfo}\n   * @memberof BlobDownloadOptions\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.exists} operation.\n *\n * @export\n * @interface BlobExistsOptions\n */\nexport interface BlobExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlobExistsOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Customer Provided Key Info.\n   *\n   * @type {CpkInfo}\n   * @memberof BlobExistsOptions\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.getProperties} operation.\n *\n * @export\n * @interface BlobGetPropertiesOptions\n */\nexport interface BlobGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlobGetPropertiesOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting blob properties.\n   *\n   * @type {BlobRequestConditions}\n   * @memberof BlobGetPropertiesOptions\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   *\n   * @type {CpkInfo}\n   * @memberof BlobGetPropertiesOptions\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.delete} operation.\n *\n * @export\n * @interface BlobDeleteOptions\n */\nexport interface BlobDeleteOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlobDeleteOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when deleting blobs.\n   *\n   * @type {BlobRequestConditions}\n   * @memberof BlobDeleteOptions\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Specifies options to delete blobs that have associated snapshots.\n   * - `include`: Delete the base blob and all of its snapshots.\n   * - `only`: Delete only the blob's snapshots and not the blob itself.\n   *\n   * @type {DeleteSnapshotsOptionType}\n   * @memberof BlobDeleteOptions\n   */\n  deleteSnapshots?: DeleteSnapshotsOptionType;\n  /**\n   * Customer Provided Key Info.\n   *\n   * @type {CpkInfo}\n   * @memberof BlobDeleteOptions\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.undelete} operation.\n *\n * @export\n * @interface BlobUndeleteOptions\n */\nexport interface BlobUndeleteOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlobUndeleteOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Customer Provided Key Info.\n   *\n   * @type {CpkInfo}\n   * @memberof BlobUndeleteOptions\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.setHTTPHeaders} operation.\n *\n * @export\n * @interface BlobSetHTTPHeadersOptions\n */\nexport interface BlobSetHTTPHeadersOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlobSetHTTPHeadersOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when setting blob HTTP headers.\n   *\n   * @type {BlobRequestConditions}\n   * @memberof BlobSetHTTPHeadersOptions\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   *\n   * @type {CpkInfo}\n   * @memberof BlobSetHTTPHeadersOptions\n   */\n  customerProvidedKey?: CpkInfo;\n}\n\n/**\n * Options to configure the {@link BlobClient.setMetadata} operation.\n *\n * @export\n * @interface BlobSetMetadataOptions\n */\nexport interface BlobSetMetadataOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlobSetMetadataOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when setting blob metadata.\n   *\n   * @type {BlobRequestConditions}\n   * @memberof BlobSetMetadataOptions\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   *\n   * @type {CpkInfo}\n   * @memberof BlobSetMetadataOptions\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   *\n   * @type {string}\n   * @memberof BlobSetMetadataOptions\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure Blob - Acquire Lease operation.\n *\n * @export\n * @interface BlobAcquireLeaseOptions\n */\nexport interface BlobAcquireLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlobAcquireLeaseOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when acquiring the lease of a blob.\n   *\n   * @type {ModifiedAccessConditions}\n   * @memberof BlobAcquireLeaseOptions\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Release Lease operation.\n *\n * @export\n * @interface BlobReleaseLeaseOptions\n */\nexport interface BlobReleaseLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlobReleaseLeaseOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when releasing the lease of a blob.\n   *\n   * @type {ModifiedAccessConditions}\n   * @memberof BlobReleaseLeaseOptions\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Renew Lease operation.\n *\n * @export\n * @interface BlobRenewLeaseOptions\n */\nexport interface BlobRenewLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlobRenewLeaseOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when renewing the lease of a blob.\n   *\n   * @type {ModifiedAccessConditions}\n   * @memberof BlobRenewLeaseOptions\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Change Lease operation.\n *\n * @export\n * @interface BlobChangeLeaseOptions\n */\nexport interface BlobChangeLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlobChangeLeaseOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when changing the lease of a blob.\n   *\n   * @type {ModifiedAccessConditions}\n   * @memberof BlobChangeLeaseOptions\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Blob - Break Lease operation.\n *\n * @export\n * @interface BlobBreakLeaseOptions\n */\nexport interface BlobBreakLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlobBreakLeaseOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when breaking the lease of a blob.\n   *\n   * @type {ModifiedAccessConditions}\n   * @memberof BlobBreakLeaseOptions\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure the {@link BlobClient.createSnapshot} operation.\n *\n * @export\n * @interface BlobCreateSnapshotOptions\n */\nexport interface BlobCreateSnapshotOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlobCreateSnapshotOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the snapshot.\n   *\n   * @type {Metadata}\n   * @memberof BlobCreateSnapshotOptions\n   */\n  metadata?: Metadata;\n  /**\n   * Conditions to meet when creating blob snapshots.\n   *\n   * @type {BlobRequestConditions}\n   * @memberof BlobCreateSnapshotOptions\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   *\n   * @type {CpkInfo}\n   * @memberof BlobCreateSnapshotOptions\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   *\n   * @type {string}\n   * @memberof BlobCreateSnapshotOptions\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link BlobClient.beginCopyFromURL} operation.\n *\n * @export\n * @interface BlobStartCopyFromURLOptions\n */\nexport interface BlobStartCopyFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlobStartCopyFromURLOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the blob that are being copied.\n   *\n   * @type {Metadata}\n   * @memberof BlobStartCopyFromURLOptions\n   */\n  metadata?: Metadata;\n  /**\n   * Conditions to meet for the destination blob when copying from a URL to the blob.\n   *\n   * @type {BlobRequestConditions}\n   * @memberof BlobStartCopyFromURLOptions\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Conditions to meet for the source Azure Blob/File when copying from a URL to the blob.\n   *\n   * @type {ModifiedAccessConditions}\n   * @memberof BlobStartCopyFromURLOptions\n   */\n  sourceConditions?: ModifiedAccessConditions;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   *\n   * @type {BlockBlobTier | PremiumPageBlobTier | string}\n   * @memberof BlobStartCopyFromURLOptions\n   */\n  tier?: BlockBlobTier | PremiumPageBlobTier | string;\n  /**\n   * Rehydrate Priority - possible values include 'High', 'Standard'.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-rehydration#rehydrate-an-archived-blob-to-an-online-tier\n   *\n   * @type {RehydratePriority}\n   * @memberof BlobStartCopyFromURLOptions\n   */\n  rehydratePriority?: RehydratePriority;\n}\n\n/**\n * Options to configure the {@link BlobClient.abortCopyFromURL} operation.\n *\n * @export\n * @interface BlobAbortCopyFromURLOptions\n */\nexport interface BlobAbortCopyFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlobAbortCopyFromURLOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   *\n   * @type {LeaseAccessConditions}\n   * @memberof BlobAbortCopyFromURLOptions\n   */\n  conditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link BlobClient.syncCopyFromURL} operation.\n *\n * @export\n * @interface BlobSyncCopyFromURLOptions\n */\nexport interface BlobSyncCopyFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlobSyncCopyFromURLOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the snapshot.\n   *\n   * @type {Metadata}\n   * @memberof BlobSyncCopyFromURLOptions\n   */\n  metadata?: Metadata;\n  /**\n   * Conditions to meet for the destination blob when copying from a URL to the blob.\n   *\n   * @type {BlobRequestConditions}\n   * @memberof BlobSyncCopyFromURLOptions\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Conditions to meet for the source Azure Blob/File when copying from a URL to the blob.\n   *\n   * @type {ModifiedAccessConditions}\n   * @memberof BlobSyncCopyFromURLOptions\n   */\n  sourceConditions?: ModifiedAccessConditions;\n  /**\n   * Specify the md5 calculated for the range of bytes that must be read from the copy source.\n   *\n   * @type {Uint8Array}\n   * @memberof BlobSyncCopyFromURLOptions\n   */\n  sourceContentMD5?: Uint8Array;\n}\n\n/**\n * Options to configure the {@link BlobClient.setAccessTier} operation.\n *\n * @export\n * @interface BlobSetTierOptions\n */\nexport interface BlobSetTierOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlobSetTierOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   *\n   * @type {LeaseAccessConditions}\n   * @memberof BlobSetTierOptions\n   */\n  conditions?: LeaseAccessConditions;\n  /**\n   * Rehydrate Priority - possible values include 'High', 'Standard'.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-rehydration#rehydrate-an-archived-blob-to-an-online-tier\n   *\n   * @type {RehydratePriority}\n   * @memberof BlobSetTierOptions\n   */\n  rehydratePriority?: RehydratePriority;\n}\n\n/**\n * Option interface for the {@link BlobClient.downloadToBuffer} operation.\n *\n * @export\n * @interface BlobDownloadToBufferOptions\n */\nexport interface BlobDownloadToBufferOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlobDownloadToBufferOptions\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * blockSize is the data every request trying to download.\n   * Must be >= 0, if set to 0 or undefined, blockSize will automatically calculated according\n   * to the blob size.\n   *\n   * @type {number}\n   * @memberof BlobDownloadToBufferOptions\n   */\n  blockSize?: number;\n\n  /**\n   * Optional. ONLY AVAILABLE IN NODE.JS.\n   *\n   * How many retries will perform when original block download stream unexpected ends.\n   * Above kind of ends will not trigger retry policy defined in a pipeline,\n   * because they doesn't emit network errors.\n   *\n   * With this option, every additional retry means an additional FileClient.download() request will be made\n   * from the broken point, until the requested block has been successfully downloaded or\n   * maxRetryRequestsPerBlock is reached.\n   *\n   * Default value is 5, please set a larger value when in poor network.\n   *\n   * @type {number}\n   * @memberof BlobDownloadToBufferOptions\n   */\n  maxRetryRequestsPerBlock?: number;\n\n  /**\n   * Progress updater.\n   *\n   * @type {(progress: TransferProgressEvent) => void}\n   * @memberof BlobDownloadToBufferOptions\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Access conditions headers.\n   *\n   * @type {BlobRequestConditions}\n   * @memberof BlobDownloadToBufferOptions\n   */\n  conditions?: BlobRequestConditions;\n\n  /**\n   * Concurrency of parallel download.\n   *\n   * @type {number}\n   * @memberof BlobDownloadToBufferOptions\n   */\n  concurrency?: number;\n}\n\n/**\n * A BlobClient represents a URL to an Azure Storage blob; the blob may be a block blob,\n * append blob, or page blob.\n *\n * @export\n * @class BlobClient\n */\nexport class BlobClient extends StorageClient {\n  /**\n   * blobContext provided by protocol layer.\n   *\n   * @private\n   * @type {Blobs}\n   * @memberof BlobClient\n   */\n  private blobContext: StorageBlob;\n  private _name: string;\n  private _containerName: string;\n\n  /**\n   * The name of the blob.\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * The name of the storage container the blob is associated with.\n   */\n  public get containerName(): string {\n    return this._containerName;\n  }\n\n  /**\n   *\n   * Creates an instance of BlobClient from connection string.\n   *\n   * @param {string} connectionString Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param {string} containerName Container name.\n   * @param {string} blobName Blob name.\n   * @param {StoragePipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof BlobClient\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    options?: StoragePipelineOptions\n  );\n  /**\n   * Creates an instance of BlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param {string} url A Client string pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param {StorageSharedKeyCredential | AnonymousCredential | TokenCredential} credential  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the @azure/identity package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param {StoragePipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof BlobClient\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    options?: StoragePipelineOptions\n  );\n  /**\n   * Creates an instance of BlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param {string} url A URL string pointing to Azure Storage blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob\".\n   *                     You can append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param {Pipeline} pipeline Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof BlobClient\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName?:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | Pipeline,\n    blobNameOrOptions?: string | StoragePipelineOptions,\n    options?: StoragePipelineOptions\n  ) {\n    options = options || {};\n    let pipeline: Pipeline;\n    let url: string;\n    if (credentialOrPipelineOrContainerName instanceof Pipeline) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      options = blobNameOrOptions as StoragePipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      // The second parameter is undefined. Use anonymous credential.\n      url = urlOrConnectionString;\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n      const blobName = blobNameOrOptions;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey\n          );\n          url = appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName)\n          );\n\n          options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName)\n          ) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\"\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n\n    super(url, pipeline);\n    ({\n      blobName: this._name,\n      containerName: this._containerName\n    } = this.getBlobAndContainerNamesFromUrl());\n    this.blobContext = new StorageBlob(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new BlobClient object identical to the source but with the specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a Client to the base blob.\n   *\n   * @param {string} snapshot The snapshot timestamp.\n   * @returns {BlobClient} A new BlobClient object identical to the source but with the specified snapshot timestamp\n   * @memberof BlobClient\n   */\n  public withSnapshot(snapshot: string): BlobClient {\n    return new BlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot\n      ),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a AppendBlobClient object.\n   *\n   * @returns {AppendBlobClient}\n   * @memberof BlobClient\n   */\n  public getAppendBlobClient(): AppendBlobClient {\n    return new AppendBlobClient(this.url, this.pipeline);\n  }\n\n  /**\n   * Creates a BlockBlobClient object.\n   *\n   * @returns {BlockBlobClient}\n   * @memberof BlobClient\n   */\n  public getBlockBlobClient(): BlockBlobClient {\n    return new BlockBlobClient(this.url, this.pipeline);\n  }\n\n  /**\n   * Creates a PageBlobClient object.\n   *\n   * @returns {PageBlobClient}\n   * @memberof BlobClient\n   */\n  public getPageBlobClient(): PageBlobClient {\n    return new PageBlobClient(this.url, this.pipeline);\n  }\n\n  /**\n   * Reads or downloads a blob from the system, including its metadata and properties.\n   * You can also call Get Blob to read a snapshot.\n   *\n   * * In Node.js, data returns in a Readable stream readableStreamBody\n   * * In browsers, data returns in a promise blobBody\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob\n   *\n   * @param {number} [offset] From which position of the blob to download, >= 0\n   * @param {number} [count] How much data to be downloaded, > 0. Will download to the end when undefined\n   * @param {BlobDownloadOptions} [options] Optional options to Blob Download operation.\n   * @returns {Promise<BlobDownloadResponseModel>}\n   * @memberof BlobClient\n   *\n   * Example usage (Node.js):\n   *\n   * ```js\n   * // Download and convert a blob to a string\n   * const downloadBlockBlobResponse = await blobClient.download();\n   * const downloaded = await streamToString(downloadBlockBlobResponse.readableStreamBody);\n   * console.log(\"Downloaded blob content:\", downloaded);\n   *\n   * async function streamToString(readableStream) {\n   *   return new Promise((resolve, reject) => {\n   *     const chunks = [];\n   *     readableStream.on(\"data\", (data) => {\n   *       chunks.push(data.toString());\n   *     });\n   *     readableStream.on(\"end\", () => {\n   *       resolve(chunks.join(\"\"));\n   *     });\n   *     readableStream.on(\"error\", reject);\n   *   });\n   * }\n   * ```\n   *\n   * Example usage (browser):\n   *\n   * ```js\n   * // Download and convert a blob to a string\n   * const downloadBlockBlobResponse = await blobClient.download();\n   * const downloaded = await blobToString(await downloadBlockBlobResponse.blobBody);\n   * console.log(\n   *   \"Downloaded blob content\",\n   *   downloaded\n   * );\n   *\n   * async function blobToString(blob: Blob): Promise<string> {\n   *   const fileReader = new FileReader();\n   *   return new Promise<string>((resolve, reject) => {\n   *     fileReader.onloadend = (ev: any) => {\n   *       resolve(ev.target!.result);\n   *     };\n   *     fileReader.onerror = reject;\n   *     fileReader.readAsText(blob);\n   *   });\n   * }\n   * ```\n   */\n  public async download(\n    offset: number = 0,\n    count?: number,\n    options: BlobDownloadOptions = {}\n  ): Promise<BlobDownloadResponseModel> {\n    options.conditions = options.conditions || {};\n    options.conditions = options.conditions || {};\n    ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n\n    const { span, spanOptions } = createSpan(\"BlobClient-download\", options.tracingOptions);\n\n    try {\n      const res = await this.blobContext.download({\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: options.conditions,\n        onDownloadProgress: isNode ? undefined : options.onProgress, // for Node.js, progress is reported by RetriableReadableStream\n        range: offset === 0 && !count ? undefined : rangeToString({ offset, count }),\n        rangeGetContentMD5: options.rangeGetContentMD5,\n        rangeGetContentCRC64: options.rangeGetContentCrc64,\n        snapshot: options.snapshot,\n        cpkInfo: options.customerProvidedKey,\n        spanOptions\n      });\n\n      // Return browser response immediately\n      if (!isNode) {\n        return res;\n      }\n\n      // We support retrying when download stream unexpected ends in Node.js runtime\n      // Following code shouldn't be bundled into browser build, however some\n      // bundlers may try to bundle following code and \"FileReadResponse.ts\".\n      // In this case, \"FileDownloadResponse.browser.ts\" will be used as a shim of \"FileDownloadResponse.ts\"\n      // The config is in package.json \"browser\" field\n      if (options.maxRetryRequests === undefined || options.maxRetryRequests < 0) {\n        // TODO: Default value or make it a required parameter?\n        options.maxRetryRequests = DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS;\n      }\n\n      if (res.contentLength === undefined) {\n        throw new RangeError(`File download response doesn't contain valid content length header`);\n      }\n\n      if (!res.etag) {\n        throw new RangeError(`File download response doesn't contain valid etag header`);\n      }\n\n      return new BlobDownloadResponse(\n        res,\n        async (start: number): Promise<NodeJS.ReadableStream> => {\n          const updatedOptions: BlobDownloadOptionalParams = {\n            leaseAccessConditions: options.conditions,\n            modifiedAccessConditions: {\n              ifMatch: options.conditions!.ifMatch || res.etag,\n              ifModifiedSince: options.conditions!.ifModifiedSince,\n              ifNoneMatch: options.conditions!.ifNoneMatch,\n              ifUnmodifiedSince: options.conditions!.ifUnmodifiedSince\n            },\n            range: rangeToString({\n              count: offset + res.contentLength! - start,\n              offset: start\n            }),\n            rangeGetContentMD5: options.rangeGetContentMD5,\n            rangeGetContentCRC64: options.rangeGetContentCrc64,\n            snapshot: options.snapshot,\n            cpkInfo: options.customerProvidedKey\n          };\n\n          // Debug purpose only\n          // console.log(\n          //   `Read from internal stream, range: ${\n          //     updatedOptions.range\n          //   }, options: ${JSON.stringify(updatedOptions)}`\n          // );\n\n          return (\n            await this.blobContext.download({\n              abortSignal: options.abortSignal,\n              ...updatedOptions\n            })\n          ).readableStreamBody!;\n        },\n        offset,\n        res.contentLength!,\n        {\n          abortSignal: options.abortSignal,\n          maxRetryRequests: options.maxRetryRequests,\n          onProgress: options.onProgress\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns true if the Azrue blob resource represented by this client exists; false otherwise.\n   *\n   * NOTE: use this function with care since an existing blob might be deleted by other clients or\n   * applications. Vice versa new blobs might be added by other clients or applications after this\n   * function completes.\n   *\n   * @param {BlobExistsOptions} [options] options to Exists operation.\n   * @returns {Promise<boolean>}\n   * @memberof BlobClient\n   */\n  public async exists(options: BlobExistsOptions = {}): Promise<boolean> {\n    const { span, spanOptions } = createSpan(\"BlobClient-exists\", options.tracingOptions);\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      await this.getProperties({\n        abortSignal: options.abortSignal,\n        customerProvidedKey: options.customerProvidedKey,\n        tracingOptions: {\n          ...options.tracingOptions,\n          spanOptions\n        }\n      });\n      return true;\n    } catch (e) {\n      if (e.statusCode === 404) {\n        span.setStatus({\n          code: CanonicalCode.NOT_FOUND,\n          message: \"Expected exception when checking blob existence\"\n        });\n        return false;\n      }\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns all user-defined metadata, standard HTTP properties, and system properties\n   * for the blob. It does not return the content of the blob.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-properties\n   *\n   * WARNING: The `metadata` object returned in the response will have its keys in lowercase, even if\n   * they originally contained uppercase characters. This differs from the metadata keys returned by\n   * the methods of {@link ContainerClient} that list blobs using the `includeMetadata` option, which\n   * will retain their original casing.\n   *\n   * @param {BlobGetPropertiesOptions} [options] Optional options to Get Properties operation.\n   * @returns {Promise<BlobGetPropertiesResponse>}\n   * @memberof BlobClient\n   */\n  public async getProperties(\n    options: BlobGetPropertiesOptions = {}\n  ): Promise<BlobGetPropertiesResponse> {\n    const { span, spanOptions } = createSpan(\"BlobClient-getProperties\", options.tracingOptions);\n    try {\n      options.conditions = options.conditions || {};\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      return await this.blobContext.getProperties({\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: options.conditions,\n        cpkInfo: options.customerProvidedKey,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Marks the specified blob or snapshot for deletion. The blob is later deleted\n   * during garbage collection. Note that in order to delete a blob, you must delete\n   * all of its snapshots. You can delete both at the same time with the Delete\n   * Blob operation.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob\n   *\n   * @param {BlobDeleteOptions} [options] Optional options to Blob Delete operation.\n   * @returns {Promise<BlobDeleteResponse>}\n   * @memberof BlobClient\n   */\n  public async delete(options: BlobDeleteOptions = {}): Promise<BlobDeleteResponse> {\n    const { span, spanOptions } = createSpan(\"BlobClient-delete\", options.tracingOptions);\n    options.conditions = options.conditions || {};\n    try {\n      return await this.blobContext.deleteMethod({\n        abortSignal: options.abortSignal,\n        deleteSnapshots: options.deleteSnapshots,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: options.conditions,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Restores the contents and metadata of soft deleted blob and any associated\n   * soft deleted snapshots. Undelete Blob is supported only on version 2017-07-29\n   * or later.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/undelete-blob\n   *\n   * @param {BlobUndeleteOptions} [options] Optional options to Blob Undelete operation.\n   * @returns {Promise<BlobUndeleteResponse>}\n   * @memberof BlobClient\n   */\n  public async undelete(options: BlobUndeleteOptions = {}): Promise<BlobUndeleteResponse> {\n    const { span, spanOptions } = createSpan(\"BlobClient-undelete\", options.tracingOptions);\n    try {\n      return await this.blobContext.undelete({\n        abortSignal: options.abortSignal,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets system properties on the blob.\n   *\n   * If no value provided, or no value provided for the specificed blob HTTP headers,\n   * these blob HTTP headers without a value will be cleared.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\n   *\n   * @param {BlobHTTPHeaders} [blobHTTPHeaders] If no value provided, or no value provided for\n   *                                                   the specificed blob HTTP headers, these blob HTTP\n   *                                                   headers without a value will be cleared.\n   * @param {BlobSetHTTPHeadersOptions} [options] Optional options to Blob Set HTTP Headers operation.\n   * @returns {Promise<BlobSetHTTPHeadersResponse>}\n   * @memberof BlobClient\n   */\n  public async setHTTPHeaders(\n    blobHTTPHeaders?: BlobHTTPHeaders,\n    options: BlobSetHTTPHeadersOptions = {}\n  ): Promise<BlobSetHTTPHeadersResponse> {\n    const { span, spanOptions } = createSpan(\"BlobClient-setHTTPHeaders\", options.tracingOptions);\n    options.conditions = options.conditions || {};\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      return await this.blobContext.setHTTPHeaders({\n        abortSignal: options.abortSignal,\n        blobHTTPHeaders,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: options.conditions,\n        cpkInfo: options.customerProvidedKey,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets user-defined metadata for the specified blob as one or more name-value pairs.\n   *\n   * If no option provided, or no metadata defined in the parameter, the blob\n   * metadata will be removed.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-metadata\n   *\n   * @param {Metadata} [metadata] Replace existing metadata with this value.\n   *                               If no value provided the existing metadata will be removed.\n   * @param {BlobSetMetadataOptions} [options] Optional options to Set Metadata operation.\n   * @returns {Promise<BlobSetMetadataResponse>}\n   * @memberof BlobClient\n   */\n  public async setMetadata(\n    metadata?: Metadata,\n    options: BlobSetMetadataOptions = {}\n  ): Promise<BlobSetMetadataResponse> {\n    const { span, spanOptions } = createSpan(\"BlobClient-setMetadata\", options.tracingOptions);\n    options.conditions = options.conditions || {};\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      return await this.blobContext.setMetadata({\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        metadata,\n        modifiedAccessConditions: options.conditions,\n        cpkInfo: options.customerProvidedKey,\n        encryptionScope: options.encryptionScope,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Get a {@link BlobLeaseClient} that manages leases on the blob.\n   *\n   * @param {string} [proposeLeaseId] Initial proposed lease Id.\n   * @returns {BlobLeaseClient} A new BlobLeaseClient object for managing leases on the blob.\n   * @memberof BlobClient\n   */\n  public getBlobLeaseClient(proposeLeaseId?: string): BlobLeaseClient {\n    return new BlobLeaseClient(this, proposeLeaseId);\n  }\n\n  /**\n   * Creates a read-only snapshot of a blob.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/snapshot-blob\n   *\n   * @param {BlobCreateSnapshotOptions} [options] Optional options to the Blob Create Snapshot operation.\n   * @returns {Promise<BlobCreateSnapshotResponse>}\n   * @memberof BlobClient\n   */\n  public async createSnapshot(\n    options: BlobCreateSnapshotOptions = {}\n  ): Promise<BlobCreateSnapshotResponse> {\n    const { span, spanOptions } = createSpan(\"BlobClient-createSnapshot\", options.tracingOptions);\n    options.conditions = options.conditions || {};\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      return await this.blobContext.createSnapshot({\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        metadata: options.metadata,\n        modifiedAccessConditions: options.conditions,\n        cpkInfo: options.customerProvidedKey,\n        encryptionScope: options.encryptionScope,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Asynchronously copies a blob to a destination within the storage account.\n   * This method returns a long running operation poller that allows you to wait\n   * indefinitely until the copy is completed.\n   * You can also cancel a copy before it is completed by calling `cancelOperation` on the poller.\n   * Note that the onProgress callback will not be invoked if the operation completes in the first\n   * request, and attempting to cancel a completed copy will result in an error being thrown.\n   *\n   * In version 2012-02-12 and later, the source for a Copy Blob operation can be\n   * a committed blob in any Azure storage account.\n   * Beginning with version 2015-02-21, the source for a Copy Blob operation can be\n   * an Azure file in any Azure storage account.\n   * Only storage accounts created on or after June 7th, 2012 allow the Copy Blob\n   * operation to copy from another storage account.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob\n   *\n   * Example using automatic polling:\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url');\n   * const result = await copyPoller.pollUntilDone();\n   * ```\n   *\n   * Example using manual polling:\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url');\n   * while (!poller.isDone()) {\n   *    await poller.poll();\n   * }\n   * const result = copyPoller.getResult();\n   * ```\n   *\n   * Example using progress updates:\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url', {\n   *   onProgress(state) {\n   *     console.log(`Progress: ${state.copyProgress}`);\n   *   }\n   * });\n   * const result = await copyPoller.pollUntilDone();\n   * ```\n   *\n   * Example using a changing polling interval (default 15 seconds):\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url', {\n   *   intervalInMs: 1000 // poll blob every 1 second for copy progress\n   * });\n   * const result = await copyPoller.pollUntilDone();\n   * ```\n   *\n   * Example using copy cancellation:\n   *\n   * ```js\n   * const copyPoller = await blobClient.beginCopyFromURL('url');\n   * // cancel operation after starting it.\n   * try {\n   *   await copyPoller.cancelOperation();\n   *   // calls to get the result now throw PollerCancelledError\n   *   await copyPoller.getResult();\n   * } catch (err) {\n   *   if (err.name === 'PollerCancelledError') {\n   *     console.log('The copy was cancelled.');\n   *   }\n   * }\n   * ```\n   *\n   * @param {string} copySource url to the source Azure Blob/File.\n   * @param {BlobBeginCopyFromURLOptions} [options] Optional options to the Blob Start Copy From URL operation.\n   */\n  public async beginCopyFromURL(\n    copySource: string,\n    options: BlobBeginCopyFromURLOptions = {}\n  ): Promise<\n    PollerLike<PollOperationState<BlobBeginCopyFromURLResponse>, BlobBeginCopyFromURLResponse>\n  > {\n    const client: CopyPollerBlobClient = {\n      abortCopyFromURL: (...args) => this.abortCopyFromURL(...args),\n      getProperties: (...args) => this.getProperties(...args),\n      startCopyFromURL: (...args) => this.startCopyFromURL(...args)\n    };\n    const poller = new BlobBeginCopyFromUrlPoller({\n      blobClient: client,\n      copySource,\n      intervalInMs: options.intervalInMs,\n      onProgress: options.onProgress,\n      resumeFrom: options.resumeFrom,\n      startCopyFromURLOptions: options\n    });\n\n    // Trigger the startCopyFromURL call by calling poll.\n    // Any errors from this method should be surfaced to the user.\n    await poller.poll();\n\n    return poller;\n  }\n\n  /**\n   * Aborts a pending asynchronous Copy Blob operation, and leaves a destination blob with zero\n   * length and full metadata. Version 2012-02-12 and newer.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-blob\n   *\n   * @param {string} copyId Id of the Copy From URL operation.\n   * @param {BlobAbortCopyFromURLOptions} [options] Optional options to the Blob Abort Copy From URL operation.\n   * @returns {Promise<BlobAbortCopyFromURLResponse>}\n   * @memberof BlobClient\n   */\n  public async abortCopyFromURL(\n    copyId: string,\n    options: BlobAbortCopyFromURLOptions = {}\n  ): Promise<BlobAbortCopyFromURLResponse> {\n    const { span, spanOptions } = createSpan(\"BlobClient-abortCopyFromURL\", options.tracingOptions);\n    try {\n      return await this.blobContext.abortCopyFromURL(copyId, {\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * The synchronous Copy From URL operation copies a blob or an internet resource to a new blob. It will not\n   * return a response until the copy is complete.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob-from-url\n   *\n   * @param {string} copySource The source URL to copy from, Shared Access Signature(SAS) maybe needed for authentication\n   * @param {BlobSyncCopyFromURLOptions} [options={}]\n   * @returns {Promise<BlobCopyFromURLResponse>}\n   * @memberof BlobClient\n   */\n  public async syncCopyFromURL(\n    copySource: string,\n    options: BlobSyncCopyFromURLOptions = {}\n  ): Promise<BlobCopyFromURLResponse> {\n    const { span, spanOptions } = createSpan(\"BlobClient-syncCopyFromURL\", options.tracingOptions);\n    options.conditions = options.conditions || {};\n    options.sourceConditions = options.sourceConditions || {};\n\n    try {\n      return await this.blobContext.copyFromURL(copySource, {\n        abortSignal: options.abortSignal,\n        metadata: options.metadata,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: options.conditions,\n        sourceModifiedAccessConditions: {\n          sourceIfMatch: options.sourceConditions.ifMatch,\n          sourceIfModifiedSince: options.sourceConditions.ifModifiedSince,\n          sourceIfNoneMatch: options.sourceConditions.ifNoneMatch,\n          sourceIfUnmodifiedSince: options.sourceConditions.ifUnmodifiedSince\n        },\n        sourceContentMD5: options.sourceContentMD5,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets the tier on a blob. The operation is allowed on a page blob in a premium\n   * storage account and on a block blob in a blob storage account (locally redundant\n   * storage only). A premium page blob's tier determines the allowed size, IOPS,\n   * and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive\n   * storage type. This operation does not update the blob's ETag.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier\n   *\n   * @param {BlockBlobTier | PremiumPageBlobTier | string} tier The tier to be set on the blob. Valid values are Hot, Cool, or Archive.\n   * @param {BlobSetTierOptions} [options] Optional options to the Blob Set Tier operation.\n   * @returns {Promise<BlobsSetTierResponse>}\n   * @memberof BlobClient\n   */\n  public async setAccessTier(\n    tier: BlockBlobTier | PremiumPageBlobTier | string,\n    options: BlobSetTierOptions = {}\n  ): Promise<BlobSetTierResponse> {\n    const { span, spanOptions } = createSpan(\"BlobClient-setAccessTier\", options.tracingOptions);\n    try {\n      return await this.blobContext.setTier(toAccessTier(tier)!, {\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        rehydratePriority: options.rehydratePriority,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  // High level function\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Downloads an Azure Blob in parallel to a buffer.\n   * Offset and count are optional, downloads the entire blob if they are not provided.\n   *\n   * Warning: Buffers can only support files up to about one gigabyte on 32-bit systems or about two\n   * gigabytes on 64-bit systems due to limitations of Node.js/V8. For blobs larger than this size,\n   * consider {@link downloadToFile}.\n   *\n   * @export\n   * @param {number} offset From which position of the block blob to download(in bytes)\n   * @param {number} [count] How much data(in bytes) to be downloaded. Will download to the end when passing undefined\n   * @param {BlobDownloadToBufferOptions} [options] BlobDownloadToBufferOptions\n   * @returns {Promise<Buffer>}\n   */\n  public async downloadToBuffer(\n    offset?: number,\n    count?: number,\n    options?: BlobDownloadToBufferOptions\n  ): Promise<Buffer>;\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Downloads an Azure Blob in parallel to a buffer.\n   * Offset and count are optional, downloads the entire blob if they are not provided.\n   *\n   * Warning: Buffers can only support files up to about one gigabyte on 32-bit systems or about two\n   * gigabytes on 64-bit systems due to limitations of Node.js/V8. For blobs larger than this size,\n   * consider {@link downloadToFile}.\n   *\n   * @export\n   * @param {Buffer} buffer Buffer to be fill, must have length larger than count\n   * @param {number} offset From which position of the block blob to download(in bytes)\n   * @param {number} [count] How much data(in bytes) to be downloaded. Will download to the end when passing undefined\n   * @param {BlobDownloadToBufferOptions} [options] BlobDownloadToBufferOptions\n   * @returns {Promise<Buffer>}\n   */\n  public async downloadToBuffer(\n    buffer: Buffer,\n    offset?: number,\n    count?: number,\n    options?: BlobDownloadToBufferOptions\n  ): Promise<Buffer>;\n\n  public async downloadToBuffer(\n    param1?: Buffer | number,\n    param2?: number,\n    param3?: BlobDownloadToBufferOptions | number,\n    param4: BlobDownloadToBufferOptions = {}\n  ) {\n    let buffer: Buffer | undefined;\n    let offset = 0;\n    let count = 0;\n    let options = param4;\n    if (param1 instanceof Buffer) {\n      buffer = param1;\n      offset = param2 || 0;\n      count = typeof param3 === \"number\" ? param3 : 0;\n    } else {\n      offset = typeof param1 === \"number\" ? param1 : 0;\n      count = typeof param2 === \"number\" ? param2 : 0;\n      options = (param3 as BlobDownloadToBufferOptions) || {};\n    }\n    const { span, spanOptions } = createSpan(\"BlobClient-downloadToBuffer\", options.tracingOptions);\n\n    try {\n      if (!options.blockSize) {\n        options.blockSize = 0;\n      }\n      if (options.blockSize < 0) {\n        throw new RangeError(\"blockSize option must be >= 0\");\n      }\n      if (options.blockSize === 0) {\n        options.blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n      }\n\n      if (offset < 0) {\n        throw new RangeError(\"offset option must be >= 0\");\n      }\n\n      if (count && count <= 0) {\n        throw new RangeError(\"count option must be > 0\");\n      }\n\n      if (!options.conditions) {\n        options.conditions = {};\n      }\n\n      // Customer doesn't specify length, get it\n      if (!count) {\n        const response = await this.getProperties({\n          ...options,\n          tracingOptions: {\n            ...options.tracingOptions,\n            spanOptions\n          }\n        });\n        count = response.contentLength! - offset;\n        if (count < 0) {\n          throw new RangeError(\n            `offset ${offset} shouldn't be larger than blob size ${response.contentLength!}`\n          );\n        }\n      }\n\n      // Allocate the buffer of size = count if the buffer is not provided\n      if (!buffer) {\n        try {\n          buffer = Buffer.alloc(count);\n        } catch (error) {\n          throw new Error(\n            `Unable to allocate the buffer of size: ${count}(in bytes). Please try passing your own buffer to the \"downloadToBuffer\" method or try using other methods like \"download\" or \"downloadToFile\".\\t ${error.message}`\n          );\n        }\n      }\n\n      if (buffer.length < count) {\n        throw new RangeError(\n          `The buffer's size should be equal to or larger than the request count of bytes: ${count}`\n        );\n      }\n\n      let transferProgress: number = 0;\n      const batch = new Batch(options.concurrency);\n      for (let off = offset; off < offset + count; off = off + options.blockSize) {\n        batch.addOperation(async () => {\n          // Exclusive chunk end position\n          let chunkEnd = offset + count!;\n          if (off + options.blockSize! < chunkEnd) {\n            chunkEnd = off + options.blockSize!;\n          }\n          const response = await this.download(off, chunkEnd - off, {\n            abortSignal: options.abortSignal,\n            conditions: options.conditions,\n            maxRetryRequests: options.maxRetryRequestsPerBlock,\n            tracingOptions: {\n              ...options.tracingOptions,\n              spanOptions\n            }\n          });\n          const stream = response.readableStreamBody!;\n          await streamToBuffer(stream, buffer!, off - offset, chunkEnd - offset);\n          // Update progress after block is downloaded, in case of block trying\n          // Could provide finer grained progress updating inside HTTP requests,\n          // only if convenience layer download try is enabled\n          transferProgress += chunkEnd - off;\n          if (options.onProgress) {\n            options.onProgress({ loadedBytes: transferProgress });\n          }\n        });\n      }\n      await batch.do();\n      return buffer;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Downloads an Azure Blob to a local file.\n   * Fails if the the given file path already exits.\n   * Offset and count are optional, pass 0 and undefined respectively to download the entire blob.\n   *\n   * @param {string} filePath\n   * @param {number} [offset] From which position of the block blob to download.\n   * @param {number} [count] How much data to be downloaded. Will download to the end when passing undefined.\n   * @param {BlobDownloadOptions} [options] Options to Blob download options.\n   * @returns {Promise<BlobDownloadResponseModel>} The response data for blob download operation,\n   *                                                 but with readableStreamBody set to undefined since its\n   *                                                 content is already read and written into a local file\n   *                                                 at the specified path.\n   * @memberof BlobClient\n   */\n  public async downloadToFile(\n    filePath: string,\n    offset: number = 0,\n    count?: number,\n    options: BlobDownloadOptions = {}\n  ): Promise<BlobDownloadResponseModel> {\n    const { span, spanOptions } = createSpan(\"BlobClient-downloadToFile\", options.tracingOptions);\n    try {\n      const response = await this.download(offset, count, {\n        ...options,\n        tracingOptions: {\n          ...options.tracingOptions,\n          spanOptions\n        }\n      });\n      if (response.readableStreamBody) {\n        await readStreamToLocalFile(response.readableStreamBody, filePath);\n      }\n\n      // The stream is no longer accessible so setting it to undefined.\n      (response as any).blobDownloadStream = undefined;\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  private getBlobAndContainerNamesFromUrl(): { blobName: string; containerName: string } {\n    let containerName;\n    let blobName;\n    try {\n      //  URL may look like the following\n      // \"https://myaccount.blob.core.windows.net/mycontainer/blob?sasString\";\n      // \"https://myaccount.blob.core.windows.net/mycontainer/blob\";\n      // \"https://myaccount.blob.core.windows.net/mycontainer/blob/a.txt?sasString\";\n      // \"https://myaccount.blob.core.windows.net/mycontainer/blob/a.txt\";\n      // IPv4/IPv6 address hosts, Endpoints - `http://127.0.0.1:10000/devstoreaccount1/containername/blob`\n      // http://localhost:10001/devstoreaccount1/containername/blob\n\n      const parsedUrl = URLBuilder.parse(this.url);\n\n      if (parsedUrl.getHost()!.split(\".\")[1] === \"blob\") {\n        // \"https://myaccount.blob.core.windows.net/containername/blob\".\n        // .getPath() -> /containername/blob\n        const pathComponents = parsedUrl.getPath()!.match(\"/([^/]*)(/(.*))?\");\n        containerName = pathComponents![1];\n        blobName = pathComponents![3];\n      } else {\n        // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/containername/blob\n        // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/containername/blob\n        // .getPath() -> /devstoreaccount1/containername/blob\n        const pathComponents = parsedUrl.getPath()!.match(\"/([^/]*)/([^/]*)(/(.*))?\");\n        containerName = pathComponents![2];\n        blobName = pathComponents![4];\n      }\n\n      // decode the encoded blobName, containerName - to get all the special characters that might be present in them\n      containerName = decodeURIComponent(containerName);\n      blobName = decodeURIComponent(blobName);\n\n      // Azure Storage Server will replace \"\\\" with \"/\" in the blob names\n      //   doing the same in the SDK side so that the user doesn't have to replace \"\\\" instances in the blobName\n      blobName = blobName.replace(/\\\\/g, \"/\");\n\n      if (!blobName) {\n        throw new Error(\"Provided blobName is invalid.\");\n      } else if (!containerName) {\n        throw new Error(\"Provided containerName is invalid.\");\n      }\n\n      return { blobName, containerName };\n    } catch (error) {\n      throw new Error(\"Unable to extract blobName and containerName with provided information.\");\n    }\n  }\n\n  /**\n   * Asynchronously copies a blob to a destination within the storage account.\n   * In version 2012-02-12 and later, the source for a Copy Blob operation can be\n   * a committed blob in any Azure storage account.\n   * Beginning with version 2015-02-21, the source for a Copy Blob operation can be\n   * an Azure file in any Azure storage account.\n   * Only storage accounts created on or after June 7th, 2012 allow the Copy Blob\n   * operation to copy from another storage account.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob\n   *\n   * @param {string} copySource url to the source Azure Blob/File.\n   * @param {BlobStartCopyFromURLOptions} [options] Optional options to the Blob Start Copy From URL operation.\n   * @returns {Promise<BlobStartCopyFromURLResponse>}\n   * @memberof BlobClient\n   */\n  private async startCopyFromURL(\n    copySource: string,\n    options: BlobStartCopyFromURLOptions = {}\n  ): Promise<BlobStartCopyFromURLResponse> {\n    const { span, spanOptions } = createSpan(\"BlobClient-startCopyFromURL\", options.tracingOptions);\n    options.conditions = options.conditions || {};\n    options.sourceConditions = options.sourceConditions || {};\n\n    try {\n      return await this.blobContext.startCopyFromURL(copySource, {\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        metadata: options.metadata,\n        modifiedAccessConditions: options.conditions,\n        sourceModifiedAccessConditions: {\n          sourceIfMatch: options.sourceConditions.ifMatch,\n          sourceIfModifiedSince: options.sourceConditions.ifModifiedSince,\n          sourceIfNoneMatch: options.sourceConditions.ifNoneMatch,\n          sourceIfUnmodifiedSince: options.sourceConditions.ifUnmodifiedSince\n        },\n        rehydratePriority: options.rehydratePriority,\n        tier: toAccessTier(options.tier),\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n\n/**\n * Options to configure {@link AppendBlobClient.create} operation.\n *\n * @export\n * @interface AppendBlobCreateOptions\n */\nexport interface AppendBlobCreateOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof AppendBlobCreateOptions\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Conditions to meet when creating append blobs.\n   *\n   * @type {BlobRequestConditions}\n   * @memberof AppendBlobCreateOptions\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * HTTP headers to set when creating append blobs.\n   *\n   * @type {BlobHTTPHeaders}\n   * @memberof AppendBlobCreateOptions\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when creating append blobs.\n   *\n   * @type {Metadata}\n   * @memberof AppendBlobCreateOptions\n   */\n  metadata?: Metadata;\n  /**\n   * Customer Provided Key Info.\n   *\n   * @type {CpkInfo}\n   * @memberof AppendBlobCreateOptions\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   *\n   * @type {string}\n   * @memberof AppendBlobCreateOptions\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link AppendBlobClient.appendBlock} operation.\n *\n * @export\n * @interface AppendBlobAppendBlockOptions\n */\nexport interface AppendBlobAppendBlockOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof AppendBlobAppendBlockOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when appending append blob blocks.\n   *\n   * @type {AppendBlobRequestConditions}\n   * @memberof AppendBlobAppendBlockOptions\n   */\n  conditions?: AppendBlobRequestConditions;\n  /**\n   * Callback to receive events on the progress of append block operation.\n   *\n   * @type {(progress: TransferProgressEvent) => void}\n   * @memberof AppendBlobAppendBlockOptions\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * An MD5 hash of the block content. This hash is used to verify the integrity of the block during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   *\n   * @type {Uint8Array}\n   * @memberof AppendBlobAppendBlockOptions\n   */\n  transactionalContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the append block content. This hash is used to verify the integrity of the append block during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   *\n   * @type {Uint8Array}\n   * @memberof AppendBlobAppendBlockOptions\n   */\n  transactionalContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   *\n   * @type {CpkInfo}\n   * @memberof AppendBlobAppendBlockOptions\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   *\n   * @type {string}\n   * @memberof AppendBlobAppendBlockOptions\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link AppendBlobClient.appendBlockFromURL} operation.\n *\n * @export\n * @interface AppendBlobAppendBlockFromURLOptions\n */\nexport interface AppendBlobAppendBlockFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof AppendBlobAppendBlockFromURLOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when appending append blob blocks.\n   *\n   * @type {AppendBlobRequestConditions}\n   * @memberof AppendBlobAppendBlockFromURLOptions\n   */\n  conditions?: AppendBlobRequestConditions;\n  /**\n   * Conditions to meet for the source Azure Blob/File when copying from a URL to the blob.\n   *\n   * @type {ModifiedAccessConditions}\n   * @memberof AppendBlobAppendBlockFromURLOptions\n   */\n  sourceConditions?: ModifiedAccessConditions;\n  /**\n   * An MD5 hash of the append block content from the URI.\n   * This hash is used to verify the integrity of the append block during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   *\n   * @type {Uint8Array}\n   * @memberof AppendBlobAppendBlockFromURLOptions\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the append block content from the URI.\n   * This hash is used to verify the integrity of the append block during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   *\n   * @type {Uint8Array}\n   * @memberof AppendBlobAppendBlockFromURLOptions\n   */\n  sourceContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   *\n   * @type {CpkInfo}\n   * @memberof AppendBlobAppendBlockFromURLOptions\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   *\n   * @type {string}\n   * @memberof AppendBlobAppendBlockFromURLOptions\n   */\n  encryptionScope?: string;\n}\n\n/**\n * AppendBlobClient defines a set of operations applicable to append blobs.\n *\n * @export\n * @class AppendBlobClient\n * @extends {BlobClient}\n */\nexport class AppendBlobClient extends BlobClient {\n  /**\n   * appendBlobsContext provided by protocol layer.\n   *\n   * @private\n   * @type {AppendBlob}\n   * @memberof AppendBlobClient\n   */\n  private appendBlobContext: AppendBlob;\n\n  /**\n   *\n   * Creates an instance of AppendBlobClient.\n   *\n   * @param {string} connectionString Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param {string} containerName Container name.\n   * @param {string} blobName Blob name.\n   * @param {StoragePipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof AppendBlobClient\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    options?: StoragePipelineOptions\n  );\n  /**\n   * Creates an instance of AppendBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to an append blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param {string} url A URL string pointing to Azure Storage append blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param {StorageSharedKeyCredential | AnonymousCredential | TokenCredential} credential  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the @azure/identity package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param {StoragePipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof AppendBlobClient\n   */\n  constructor(\n    url: string,\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    options?: StoragePipelineOptions\n  );\n  /**\n   * Creates an instance of AppendBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to an append blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param {string} url A URL string pointing to Azure Storage append blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param {Pipeline} pipeline Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof AppendBlobClient\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | Pipeline,\n    blobNameOrOptions?: string | StoragePipelineOptions,\n    options?: StoragePipelineOptions\n  ) {\n    // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.\n    //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);\n    let pipeline: Pipeline;\n    let url: string;\n    options = options || {};\n    if (credentialOrPipelineOrContainerName instanceof Pipeline) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)      url = urlOrConnectionString;\n      url = urlOrConnectionString;\n      options = blobNameOrOptions as StoragePipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      // The second parameter is undefined. Use anonymous credential.\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n      const blobName = blobNameOrOptions;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey\n          );\n          url = appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName)\n          );\n          options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName)\n          ) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\"\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n    super(url, pipeline);\n    this.appendBlobContext = new AppendBlob(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new AppendBlobClient object identical to the source but with the\n   * specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a Client to the base blob.\n   *\n   * @param {string} snapshot The snapshot timestamp.\n   * @returns {AppendBlobClient} A new AppendBlobClient object identical to the source but with the specified snapshot timestamp.\n   * @memberof AppendBlobClient\n   */\n  public withSnapshot(snapshot: string): AppendBlobClient {\n    return new AppendBlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot\n      ),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a 0-length append blob. Call AppendBlock to append data to an append blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param {AppendBlobCreateOptions} [options] Options to the Append Block Create operation.\n   * @returns {Promise<AppendBlobCreateResponse>}\n   * @memberof AppendBlobClient\n   *\n   * Example usage:\n   *\n   * ```js\n   * const appendBlobClient = containerClient.getAppendBlobClient(\"<blob name>\");\n   * await appendBlobClient.create();\n   * ```\n   */\n  public async create(options: AppendBlobCreateOptions = {}): Promise<AppendBlobCreateResponse> {\n    const { span, spanOptions } = createSpan(\"AppendBlobClient-create\", options.tracingOptions);\n    options.conditions = options.conditions || {};\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n\n      return await this.appendBlobContext.create(0, {\n        abortSignal: options.abortSignal,\n        blobHTTPHeaders: options.blobHTTPHeaders,\n        leaseAccessConditions: options.conditions,\n        metadata: options.metadata,\n        modifiedAccessConditions: options.conditions,\n        cpkInfo: options.customerProvidedKey,\n        encryptionScope: options.encryptionScope,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Commits a new block of data to the end of the existing append blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/append-block\n   *\n   * @param {HttpRequestBody} body Data to be appended.\n   * @param {number} contentLength Length of the body in bytes.\n   * @param {AppendBlobAppendBlockOptions} [options] Options to the Append Block operation.\n   * @returns {Promise<AppendBlobAppendBlockResponse>}\n   * @memberof AppendBlobClient\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello World!\";\n   *\n   * // Create a new append blob and append data to the blob.\n   * const newAppendBlobClient = containerClient.getAppendBlobClient(\"<blob name>\");\n   * await newAppendBlobClient.create();\n   * await newAppendBlobClient.appendBlock(content, content.length);\n   *\n   * // Append data to an existing append blob.\n   * const existingAppendBlobClient = containerClient.getAppendBlobClient(\"<blob name>\");\n   * await existingAppendBlobClient.appendBlock(content, content.length);\n   * ```\n   */\n  public async appendBlock(\n    body: HttpRequestBody,\n    contentLength: number,\n    options: AppendBlobAppendBlockOptions = {}\n  ): Promise<AppendBlobAppendBlockResponse> {\n    const { span, spanOptions } = createSpan(\n      \"AppendBlobClient-appendBlock\",\n      options.tracingOptions\n    );\n    options.conditions = options.conditions || {};\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n\n      return await this.appendBlobContext.appendBlock(body, contentLength, {\n        abortSignal: options.abortSignal,\n        appendPositionAccessConditions: options.conditions,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: options.conditions,\n        onUploadProgress: options.onProgress,\n        transactionalContentMD5: options.transactionalContentMD5,\n        transactionalContentCrc64: options.transactionalContentCrc64,\n        cpkInfo: options.customerProvidedKey,\n        encryptionScope: options.encryptionScope,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * The Append Block operation commits a new block of data to the end of an existing append blob\n   * where the contents are read from a source url.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/append-block-from-url\n   *\n   * @param {string} sourceURL\n   *                 The url to the blob that will be the source of the copy. A source blob in the same storage account can\n   *                 be authenticated via Shared Key. However, if the source is a blob in another account, the source blob\n   *                 must either be public or must be authenticated via a shared access signature. If the source blob is\n   *                 public, no authentication is required to perform the operation.\n   * @param {number} sourceOffset Offset in source to be appended\n   * @param {number} count Number of bytes to be appended as a block\n   * @param {AppendBlobAppendBlockFromURLOptions} [options={}]\n   * @returns {Promise<AppendBlobAppendBlockFromUrlResponse>}\n   * @memberof AppendBlobClient\n   */\n  public async appendBlockFromURL(\n    sourceURL: string,\n    sourceOffset: number,\n    count: number,\n    options: AppendBlobAppendBlockFromURLOptions = {}\n  ): Promise<AppendBlobAppendBlockFromUrlResponse> {\n    const { span, spanOptions } = createSpan(\n      \"AppendBlobClient-appendBlockFromURL\",\n      options.tracingOptions\n    );\n    options.conditions = options.conditions || {};\n    options.sourceConditions = options.sourceConditions || {};\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n\n      return await this.appendBlobContext.appendBlockFromUrl(sourceURL, 0, {\n        abortSignal: options.abortSignal,\n        sourceRange: rangeToString({ offset: sourceOffset, count }),\n        sourceContentMD5: options.sourceContentMD5,\n        sourceContentCrc64: options.sourceContentCrc64,\n        leaseAccessConditions: options.conditions,\n        appendPositionAccessConditions: options.conditions,\n        modifiedAccessConditions: options.conditions,\n        sourceModifiedAccessConditions: {\n          sourceIfMatch: options.sourceConditions.ifMatch,\n          sourceIfModifiedSince: options.sourceConditions.ifModifiedSince,\n          sourceIfNoneMatch: options.sourceConditions.ifNoneMatch,\n          sourceIfUnmodifiedSince: options.sourceConditions.ifUnmodifiedSince\n        },\n        cpkInfo: options.customerProvidedKey,\n        encryptionScope: options.encryptionScope,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n\n/**\n * Options to configure {@link BlockBlobClient.upload} operation.\n *\n * @export\n * @interface BlockBlobUploadOptions\n */\nexport interface BlockBlobUploadOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlockBlobUploadOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when uploading to the block blob.\n   *\n   * @type {BlobRequestConditions}\n   * @memberof BlockBlobUploadOptions\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * HTTP headers to set when uploading to a block blob.\n   *\n   * @type {BlobHTTPHeaders}\n   * @memberof BlockBlobUploadOptions\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when uploading to a block blob.\n   *\n   * @type {Metadata}\n   * @memberof BlockBlobUploadOptions\n   */\n  metadata?: Metadata;\n  /**\n   * Callback to receive events on the progress of upload operation.\n   *\n   * @type {(progress: TransferProgressEvent) => void}\n   * @memberof BlockBlobUploadOptions\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * Customer Provided Key Info.\n   *\n   * @type {CpkInfo}\n   * @memberof BlockBlobUploadOptions\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   *\n   * @type {string}\n   * @memberof BlockBlobUploadOptions\n   */\n  encryptionScope?: string;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   *\n   * @type {BlockBlobTier | string}\n   * @memberof BlockBlobUploadOptions\n   */\n  tier?: BlockBlobTier | string;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.stageBlock} operation.\n *\n * @export\n * @interface BlockBlobStageBlockOptions\n */\nexport interface BlockBlobStageBlockOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlockBlobStageBlockOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   *\n   * @type {LeaseAccessConditions}\n   * @memberof BlockBlobStageBlockOptions\n   */\n  conditions?: LeaseAccessConditions;\n  /**\n   * Callback to receive events on the progress of stage block operation.\n   *\n   * @type {(progress: TransferProgressEvent) => void}\n   * @memberof BlockBlobStageBlockOptions\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * An MD5 hash of the block content. This hash is used to verify the integrity of the block during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   *\n   * @type {Uint8Array}\n   * @memberof BlockBlobStageBlockOptions\n   */\n  transactionalContentMD5?: Uint8Array;\n\n  /**\n   * A CRC64 hash of the block content. This hash is used to verify the integrity of the block during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   *\n   * @type {Uint8Array}\n   * @memberof BlockBlobStageBlockOptions\n   */\n  transactionalContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   *\n   * @type {CpkInfo}\n   * @memberof BlockBlobStageBlockOptions\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   *\n   * @type {string}\n   * @memberof BlockBlobStageBlockOptions\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.stageBlockFromURL} operation.\n *\n * @export\n * @interface BlockBlobStageBlockFromURLOptions\n */\nexport interface BlockBlobStageBlockFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlockBlobStageBlockFromURLOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies the bytes of the source Blob/File to upload.\n   * If not specified, the entire content is uploaded as a single block.\n   *\n   * @type {Range}\n   * @memberof BlockBlobStageBlockFromURLOptions\n   */\n  range?: Range;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   *\n   * @type {LeaseAccessConditions}\n   * @memberof BlockBlobStageBlockFromURLOptions\n   */\n  conditions?: LeaseAccessConditions;\n  /**\n   * An MD5 hash of the content from the URI.\n   * This hash is used to verify the integrity of the content during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   *\n   * @type {Uint8Array}\n   * @memberof BlockBlobStageBlockFromURLOptions\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the content from the URI.\n   * This hash is used to verify the integrity of the content during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   * @type {Uint8Array}\n   * @memberof BlockBlobStageBlockFromURLOptions\n   */\n  sourceContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   *\n   * @type {CpkInfo}\n   * @memberof BlockBlobStageBlockFromURLOptions\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   *\n   * @type {string}\n   * @memberof BlockBlobStageBlockFromURLOptions\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.commitBlockList} operation.\n *\n * @export\n * @interface BlockBlobCommitBlockListOptions\n */\nexport interface BlockBlobCommitBlockListOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlockBlobCommitBlockListOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when committing the block list.\n   *\n   * @type {BlobRequestConditions}\n   * @memberof BlockBlobCommitBlockListOptions\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * HTTP headers to set when committing block list.\n   *\n   * @type {BlobHTTPHeaders}\n   * @memberof BlockBlobCommitBlockListOptions\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when committing block list.\n   *\n   * @type {Metadata}\n   * @memberof BlockBlobCommitBlockListOptions\n   */\n  metadata?: Metadata;\n  /**\n   * Customer Provided Key Info.\n   *\n   * @type {CpkInfo}\n   * @memberof BlockBlobCommitBlockListOptions\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   *\n   * @type {string}\n   * @memberof BlockBlobCommitBlockListOptions\n   */\n  encryptionScope?: string;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   *\n   * @type {BlockBlobTier | string}\n   * @memberof BlockBlobCommitBlockListOptions\n   */\n  tier?: BlockBlobTier | string;\n}\n\n/**\n * Options to configure {@link BlockBlobClient.getBlockList} operation.\n *\n * @export\n * @interface BlockBlobGetBlockListOptions\n */\nexport interface BlockBlobGetBlockListOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlockBlobGetBlockListOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   *\n   * @type {LeaseAccessConditions}\n   * @memberof BlockBlobGetBlockListOptions\n   */\n  conditions?: LeaseAccessConditions;\n}\n\n/**\n * Option interface for the {@link BlockBlobClient.uploadStream} operation.\n *\n * @export\n * @interface BlockBlobUploadStreamOptions\n */\nexport interface BlockBlobUploadStreamOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlockBlobUploadStreamOptions\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Blob HTTP Headers.\n   *\n   * @type {BlobHTTPHeaders}\n   * @memberof BlockBlobUploadStreamOptions\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n\n  /**\n   * Metadata of block blob.\n   *\n   * @type {{ [propertyName: string]: string }}\n   * @memberof BlockBlobUploadStreamOptions\n   */\n  metadata?: { [propertyName: string]: string };\n\n  /**\n   * Access conditions headers.\n   *\n   * @type {BlobRequestConditions}\n   * @memberof BlockBlobUploadStreamOptions\n   */\n  conditions?: BlobRequestConditions;\n\n  /**\n   * Progress updater.\n   *\n   * @type {(progress: TransferProgressEvent) => void}\n   * @memberof BlockBlobUploadStreamOptions\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   *\n   * @type {string}\n   * @memberof BlockBlobUploadStreamOptions\n   */\n  encryptionScope?: string;\n}\n/**\n * Option interface for {@link BlockBlobClient.uploadFile} and {@link BlockBlobClient.uploadSeekableStream}.\n *\n * @export\n * @interface BlockBlobParallelUploadOptions\n */\nexport interface BlockBlobParallelUploadOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlockBlobParallelUploadOptions\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Destination block blob size in bytes.\n   *\n   * @type {number}\n   * @memberof BlockBlobParallelUploadOptions\n   */\n  blockSize?: number;\n\n  /**\n   * Blob size threshold in bytes to start concurrency uploading.\n   * Default value is 256MB, blob size less than this option will\n   * be uploaded via one I/O operation without concurrency.\n   * You can customize a value less equal than the default value.\n   *\n   * @type {number}\n   * @memberof BlockBlobParallelUploadOptions\n   */\n  maxSingleShotSize?: number;\n\n  /**\n   * Progress updater.\n   *\n   * @type {(progress: TransferProgressEvent) => void}\n   * @memberof BlockBlobParallelUploadOptions\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Blob HTTP Headers.\n   *\n   * @type {BlobHTTPHeaders}\n   * @memberof BlockBlobParallelUploadOptions\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n\n  /**\n   * Metadata of block blob.\n   *\n   * @type {{ [propertyName: string]: string }}\n   * @memberof BlockBlobParallelUploadOptions\n   */\n  metadata?: { [propertyName: string]: string };\n\n  /**\n   * Access conditions headers.\n   *\n   * @type {BlobRequestConditions}\n   * @memberof BlockBlobParallelUploadOptions\n   */\n  conditions?: BlobRequestConditions;\n\n  /**\n   * Concurrency of parallel uploading. Must be >= 0.\n   *\n   * @type {number}\n   * @memberof BlockBlobParallelUploadOptions\n   */\n  concurrency?: number;\n\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   *\n   * @type {string}\n   * @memberof BlockBlobParallelUploadOptions\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Response type for {@link BlockBlobClient.uploadFile}, {@link BlockBlobClient.uploadStream}, and\n * {@link BlockBlobClient.uploadBrowserDate}.\n *\n * @export\n */\nexport type BlobUploadCommonResponse = BlockBlobUploadHeaders & {\n  /**\n   * The underlying HTTP response.\n   *\n   * @type {HttpResponse}\n   * @memberof BlobUploadCommonResponse\n   */\n  _response: HttpResponse;\n};\n\n/**\n * BlockBlobClient defines a set of operations applicable to block blobs.\n *\n * @export\n * @class BlockBlobClient\n * @extends {BlobClient}\n */\nexport class BlockBlobClient extends BlobClient {\n  /**\n   * blockBlobContext provided by protocol layer.\n   *\n   * @private\n   * @type {BlockBlobs}\n   * @memberof BlockBlobClient\n   */\n  private blockBlobContext: BlockBlob;\n\n  /**\n   *\n   * Creates an instance of BlockBlobClient.\n   *\n   * @param {string} connectionString Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param {string} containerName Container name.\n   * @param {string} blobName Blob name.\n   * @param {StoragePipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof BlockBlobClient\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    options?: StoragePipelineOptions\n  );\n  /**\n   * Creates an instance of BlockBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a block blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param {string} url A URL string pointing to Azure Storage block blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param {StorageSharedKeyCredential | AnonymousCredential | TokenCredential} credential  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the @azure/identity package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param {StoragePipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof BlockBlobClient\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    options?: StoragePipelineOptions\n  );\n  /**\n   * Creates an instance of BlockBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a block blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param {string} url A URL string pointing to Azure Storage block blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param {Pipeline} pipeline Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof BlockBlobClient\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName?:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | Pipeline,\n    blobNameOrOptions?: string | StoragePipelineOptions,\n    options?: StoragePipelineOptions\n  ) {\n    // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.\n    //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);\n    let pipeline: Pipeline;\n    let url: string;\n    options = options || {};\n    if (credentialOrPipelineOrContainerName instanceof Pipeline) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      options = blobNameOrOptions as StoragePipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      // The second parameter is undefined. Use anonymous credential.\n      url = urlOrConnectionString;\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n      const blobName = blobNameOrOptions;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey\n          );\n          url = appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName)\n          );\n          options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName)\n          ) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\"\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n    super(url, pipeline);\n    this.blockBlobContext = new BlockBlob(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new BlockBlobClient object identical to the source but with the\n   * specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a URL to the base blob.\n   *\n   * @param {string} snapshot The snapshot timestamp.\n   * @returns {BlockBlobClient} A new BlockBlobClient object identical to the source but with the specified snapshot timestamp.\n   * @memberof BlockBlobClient\n   */\n  public withSnapshot(snapshot: string): BlockBlobClient {\n    return new BlockBlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot\n      ),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a new block blob, or updates the content of an existing block blob.\n   * Updating an existing block blob overwrites any existing metadata on the blob.\n   * Partial updates are not supported; the content of the existing blob is\n   * overwritten with the new content. To perform a partial update of a block blob's,\n   * use {@link stageBlock} and {@link commitBlockList}.\n   *\n   * This is a non-parallel uploading method, please use {@link uploadFile},\n   * {@link uploadStream} or {@link uploadBrowserData} for better performance\n   * with concurrency uploading.\n   *\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param {HttpRequestBody} body Blob, string, ArrayBuffer, ArrayBufferView or a function\n   *                               which returns a new Readable stream whose offset is from data source beginning.\n   * @param {number} contentLength Length of body in bytes. Use Buffer.byteLength() to calculate body length for a\n   *                               string including non non-Base64/Hex-encoded characters.\n   * @param {BlockBlobUploadOptions} [options] Options to the Block Blob Upload operation.\n   * @returns {Promise<BlockBlobUploadResponse>} Response data for the Block Blob Upload operation.\n   * @memberof BlockBlobClient\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello world!\";\n   * const uploadBlobResponse = await blockBlobClient.upload(content, content.length);\n   * ```\n   */\n  public async upload(\n    body: HttpRequestBody,\n    contentLength: number,\n    options: BlockBlobUploadOptions = {}\n  ): Promise<BlockBlobUploadResponse> {\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\"BlockBlobClient-upload\", options.tracingOptions);\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      return await this.blockBlobContext.upload(body, contentLength, {\n        abortSignal: options.abortSignal,\n        blobHTTPHeaders: options.blobHTTPHeaders,\n        leaseAccessConditions: options.conditions,\n        metadata: options.metadata,\n        modifiedAccessConditions: options.conditions,\n        onUploadProgress: options.onProgress,\n        cpkInfo: options.customerProvidedKey,\n        encryptionScope: options.encryptionScope,\n        tier: toAccessTier(options.tier),\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Uploads the specified block to the block blob's \"staging area\" to be later\n   * committed by a call to commitBlockList.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-block\n   *\n   * @param {string} blockId A 64-byte value that is base64-encoded\n   * @param {HttpRequestBody} body Data to upload to the staging area.\n   * @param {number} contentLength Number of bytes to upload.\n   * @param {BlockBlobStageBlockOptions} [options] Options to the Block Blob Stage Block operation.\n   * @returns {Promise<BlockBlobStageBlockResponse>} Response data for the Block Blob Stage Block operation.\n   * @memberof BlockBlobClient\n   */\n  public async stageBlock(\n    blockId: string,\n    body: HttpRequestBody,\n    contentLength: number,\n    options: BlockBlobStageBlockOptions = {}\n  ): Promise<BlockBlobStageBlockResponse> {\n    const { span, spanOptions } = createSpan(\"BlockBlobClient-stageBlock\", options.tracingOptions);\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      return await this.blockBlobContext.stageBlock(blockId, contentLength, body, {\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        onUploadProgress: options.onProgress,\n        transactionalContentMD5: options.transactionalContentMD5,\n        transactionalContentCrc64: options.transactionalContentCrc64,\n        cpkInfo: options.customerProvidedKey,\n        encryptionScope: options.encryptionScope,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * The Stage Block From URL operation creates a new block to be committed as part\n   * of a blob where the contents are read from a URL.\n   * This API is available starting in version 2018-03-28.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-from-url\n   *\n   * @param {string} blockId A 64-byte value that is base64-encoded\n   * @param {string} sourceURL Specifies the URL of the blob. The value\n   *                           may be a URL of up to 2 KB in length that specifies a blob.\n   *                           The value should be URL-encoded as it would appear\n   *                           in a request URI. The source blob must either be public\n   *                           or must be authenticated via a shared access signature.\n   *                           If the source blob is public, no authentication is required\n   *                           to perform the operation. Here are some examples of source object URLs:\n   *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob\n   *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n   * @param {number} [offset] From which position of the blob to download, >= 0\n   * @param {number} [count] How much data to be downloaded, > 0. Will download to the end when undefined\n   * @param {BlockBlobStageBlockFromURLOptions} [options={}] Options to the Block Blob Stage Block From URL operation.\n   * @returns {Promise<BlockBlobStageBlockFromURLResponse>} Response data for the Block Blob Stage Block From URL operation.\n   * @memberof BlockBlobClient\n   */\n  public async stageBlockFromURL(\n    blockId: string,\n    sourceURL: string,\n    offset: number = 0,\n    count?: number,\n    options: BlockBlobStageBlockFromURLOptions = {}\n  ): Promise<BlockBlobStageBlockFromURLResponse> {\n    const { span, spanOptions } = createSpan(\n      \"BlockBlobClient-stageBlockFromURL\",\n      options.tracingOptions\n    );\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      return await this.blockBlobContext.stageBlockFromURL(blockId, 0, sourceURL, {\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        sourceContentMD5: options.sourceContentMD5,\n        sourceContentCrc64: options.sourceContentCrc64,\n        sourceRange: offset === 0 && !count ? undefined : rangeToString({ offset, count }),\n        cpkInfo: options.customerProvidedKey,\n        encryptionScope: options.encryptionScope,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Writes a blob by specifying the list of block IDs that make up the blob.\n   * In order to be written as part of a blob, a block must have been successfully written\n   * to the server in a prior {@link stageBlock} operation. You can call {@link commitBlockList} to\n   * update a blob by uploading only those blocks that have changed, then committing the new and existing\n   * blocks together. Any blocks not specified in the block list and permanently deleted.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-block-list\n   *\n   * @param {string[]} blocks  Array of 64-byte value that is base64-encoded\n   * @param {BlockBlobCommitBlockListOptions} [options] Options to the Block Blob Commit Block List operation.\n   * @returns {Promise<BlockBlobCommitBlockListResponse>} Response data for the Block Blob Commit Block List operation.\n   * @memberof BlockBlobClient\n   */\n  public async commitBlockList(\n    blocks: string[],\n    options: BlockBlobCommitBlockListOptions = {}\n  ): Promise<BlockBlobCommitBlockListResponse> {\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\n      \"BlockBlobClient-commitBlockList\",\n      options.tracingOptions\n    );\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      return await this.blockBlobContext.commitBlockList(\n        { latest: blocks },\n        {\n          abortSignal: options.abortSignal,\n          blobHTTPHeaders: options.blobHTTPHeaders,\n          leaseAccessConditions: options.conditions,\n          metadata: options.metadata,\n          modifiedAccessConditions: options.conditions,\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          tier: toAccessTier(options.tier),\n          spanOptions\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns the list of blocks that have been uploaded as part of a block blob\n   * using the specified block list filter.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-block-list\n   *\n   * @param {BlockListType} listType Specifies whether to return the list of committed blocks,\n   *                                        the list of uncommitted blocks, or both lists together.\n   * @param {BlockBlobGetBlockListOptions} [options] Options to the Block Blob Get Block List operation.\n   * @returns {Promise<BlockBlobGetBlockListResponse>} Response data for the Block Blob Get Block List operation.\n   * @memberof BlockBlobClient\n   */\n  public async getBlockList(\n    listType: BlockListType,\n    options: BlockBlobGetBlockListOptions = {}\n  ): Promise<BlockBlobGetBlockListResponse> {\n    const { span, spanOptions } = createSpan(\n      \"BlockBlobClient-getBlockList\",\n      options.tracingOptions\n    );\n    try {\n      const res = await this.blockBlobContext.getBlockList(listType, {\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        spanOptions\n      });\n\n      if (!res.committedBlocks) {\n        res.committedBlocks = [];\n      }\n\n      if (!res.uncommittedBlocks) {\n        res.uncommittedBlocks = [];\n      }\n\n      return res;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  // High level functions\n\n  /**\n   * ONLY AVAILABLE IN BROWSERS.\n   *\n   * Uploads a browser Blob/File/ArrayBuffer/ArrayBufferView object to block blob.\n   *\n   * When buffer length <= 256MB, this method will use 1 upload call to finish the upload.\n   * Otherwise, this method will call {@link stageBlock} to upload blocks, and finally call\n   * {@link commitBlockList} to commit the block list.\n   *\n   * @export\n   * @param {Blob | ArrayBuffer | ArrayBufferView} browserData Blob, File, ArrayBuffer or ArrayBufferView\n   * @param {BlockBlobParallelUploadOptions} [options] Options to upload browser data.\n   * @returns {Promise<BlobUploadCommonResponse>} Response data for the Blob Upload operation.\n   * @memberof BlockBlobClient\n   */\n  public async uploadBrowserData(\n    browserData: Blob | ArrayBuffer | ArrayBufferView,\n    options: BlockBlobParallelUploadOptions = {}\n  ): Promise<BlobUploadCommonResponse> {\n    const { span, spanOptions } = createSpan(\n      \"BlockBlobClient-uploadBrowserData\",\n      options.tracingOptions\n    );\n    try {\n      const browserBlob = new Blob([browserData]);\n      return await this.uploadSeekableBlob(\n        (offset: number, size: number): Blob => {\n          return browserBlob.slice(offset, offset + size);\n        },\n        browserBlob.size,\n        { ...options, tracingOptions: { ...options!.tracingOptions, spanOptions } }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN BROWSERS.\n   *\n   * Uploads a browser {@link Blob} object to block blob. Requires a blobFactory as the data source,\n   * which need to return a {@link Blob} object with the offset and size provided.\n   *\n   * When buffer length <= 256MB, this method will use 1 upload call to finish the upload.\n   * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList\n   * to commit the block list.\n   *\n   * @param {(offset: number, size: number) => Blob} blobFactory\n   * @param {number} size size of the data to upload.\n   * @param {BlockBlobParallelUploadOptions} [options] Options to Upload to Block Blob operation.\n   * @returns {Promise<BlobUploadCommonResponse>} Response data for the Blob Upload operation.\n   * @memberof BlockBlobClient\n   */\n  private async uploadSeekableBlob(\n    blobFactory: (offset: number, size: number) => Blob,\n    size: number,\n    options: BlockBlobParallelUploadOptions = {}\n  ): Promise<BlobUploadCommonResponse> {\n    if (!options.blockSize) {\n      options.blockSize = 0;\n    }\n    if (options.blockSize < 0 || options.blockSize > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES) {\n      throw new RangeError(\n        `blockSize option must be >= 0 and <= ${BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES}`\n      );\n    }\n\n    if (options.maxSingleShotSize !== 0 && !options.maxSingleShotSize) {\n      options.maxSingleShotSize = BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES;\n    }\n    if (\n      options.maxSingleShotSize < 0 ||\n      options.maxSingleShotSize > BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES\n    ) {\n      throw new RangeError(\n        `maxSingleShotSize option must be >= 0 and <= ${BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES}`\n      );\n    }\n\n    if (options.blockSize === 0) {\n      if (size > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES * BLOCK_BLOB_MAX_BLOCKS) {\n        throw new RangeError(`${size} is too larger to upload to a block blob.`);\n      }\n      if (size > options.maxSingleShotSize) {\n        options.blockSize = Math.ceil(size / BLOCK_BLOB_MAX_BLOCKS);\n        if (options.blockSize < DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES) {\n          options.blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n        }\n      }\n    }\n    if (!options.blobHTTPHeaders) {\n      options.blobHTTPHeaders = {};\n    }\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    const { span, spanOptions } = createSpan(\n      \"BlockBlobClient-UploadSeekableBlob\",\n      options.tracingOptions\n    );\n\n    try {\n      if (size <= options.maxSingleShotSize) {\n        return await this.upload(blobFactory(0, size), size, {\n          ...options,\n          tracingOptions: { ...options!.tracingOptions, spanOptions }\n        });\n      }\n\n      const numBlocks: number = Math.floor((size - 1) / options.blockSize) + 1;\n      if (numBlocks > BLOCK_BLOB_MAX_BLOCKS) {\n        throw new RangeError(\n          `The buffer's size is too big or the BlockSize is too small;` +\n            `the number of blocks must be <= ${BLOCK_BLOB_MAX_BLOCKS}`\n        );\n      }\n\n      const blockList: string[] = [];\n      const blockIDPrefix = generateUuid();\n      let transferProgress: number = 0;\n\n      const batch = new Batch(options.concurrency);\n      for (let i = 0; i < numBlocks; i++) {\n        batch.addOperation(\n          async (): Promise<any> => {\n            const blockID = generateBlockID(blockIDPrefix, i);\n            const start = options.blockSize! * i;\n            const end = i === numBlocks - 1 ? size : start + options.blockSize!;\n            const contentLength = end - start;\n            blockList.push(blockID);\n            await this.stageBlock(blockID, blobFactory(start, contentLength), contentLength, {\n              abortSignal: options.abortSignal,\n              conditions: options.conditions,\n              encryptionScope: options.encryptionScope,\n              tracingOptions: { ...options!.tracingOptions, spanOptions }\n            });\n            // Update progress after block is successfully uploaded to server, in case of block trying\n            // TODO: Hook with convenience layer progress event in finer level\n            transferProgress += contentLength;\n            if (options.onProgress) {\n              options.onProgress!({\n                loadedBytes: transferProgress\n              });\n            }\n          }\n        );\n      }\n      await batch.do();\n\n      return this.commitBlockList(blockList, {\n        ...options,\n        tracingOptions: { ...options!.tracingOptions, spanOptions }\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Uploads a local file in blocks to a block blob.\n   *\n   * When file size <= 256MB, this method will use 1 upload call to finish the upload.\n   * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList\n   * to commit the block list.\n   *\n   * @param {string} filePath Full path of local file\n   * @param {BlockBlobParallelUploadOptions} [options] Options to Upload to Block Blob operation.\n   * @returns {(Promise<BlobUploadCommonResponse>)}  Response data for the Blob Upload operation.\n   * @memberof BlockBlobClient\n   */\n  public async uploadFile(\n    filePath: string,\n    options: BlockBlobParallelUploadOptions = {}\n  ): Promise<BlobUploadCommonResponse> {\n    const { span, spanOptions } = createSpan(\"BlockBlobClient-uploadFile\", options.tracingOptions);\n    try {\n      const size = (await fsStat(filePath)).size;\n      return await this.uploadResetableStream(\n        (offset, count) =>\n          fs.createReadStream(filePath, {\n            autoClose: true,\n            end: count ? offset + count - 1 : Infinity,\n            start: offset\n          }),\n        size,\n        { ...options, tracingOptions: { ...options!.tracingOptions, spanOptions } }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Uploads a Node.js Readable stream into block blob.\n   *\n   * PERFORMANCE IMPROVEMENT TIPS:\n   * * Input stream highWaterMark is better to set a same value with bufferSize\n   *    parameter, which will avoid Buffer.concat() operations.\n   *\n   * @param {Readable} stream Node.js Readable stream\n   * @param {number} bufferSize Size of every buffer allocated, also the block size in the uploaded block blob. Default value is 8MB\n   * @param {number} maxConcurrency  Max concurrency indicates the max number of buffers that can be allocated,\n   *                                 positive correlation with max uploading concurrency. Default value is 5\n   * @param {BlockBlobUploadStreamOptions} [options] Options to Upload Stream to Block Blob operation.\n   * @returns {Promise<BlobUploadCommonResponse>} Response data for the Blob Upload operation.\n   * @memberof BlockBlobClient\n   */\n  public async uploadStream(\n    stream: Readable,\n    bufferSize: number = DEFAULT_BLOCK_BUFFER_SIZE_BYTES,\n    maxConcurrency: number = 5,\n    options: BlockBlobUploadStreamOptions = {}\n  ): Promise<BlobUploadCommonResponse> {\n    if (!options.blobHTTPHeaders) {\n      options.blobHTTPHeaders = {};\n    }\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    const { span, spanOptions } = createSpan(\n      \"BlockBlobClient-uploadStream\",\n      options.tracingOptions\n    );\n\n    try {\n      let blockNum = 0;\n      const blockIDPrefix = generateUuid();\n      let transferProgress: number = 0;\n      const blockList: string[] = [];\n\n      const scheduler = new BufferScheduler(\n        stream,\n        bufferSize,\n        maxConcurrency,\n        async (buffer: Buffer) => {\n          const blockID = generateBlockID(blockIDPrefix, blockNum);\n          blockList.push(blockID);\n          blockNum++;\n\n          await this.stageBlock(blockID, buffer, buffer.length, {\n            conditions: options.conditions,\n            encryptionScope: options.encryptionScope,\n            tracingOptions: { ...options!.tracingOptions, spanOptions }\n          });\n\n          // Update progress after block is successfully uploaded to server, in case of block trying\n          transferProgress += buffer.length;\n          if (options.onProgress) {\n            options.onProgress({ loadedBytes: transferProgress });\n          }\n        },\n        // concurrency should set a smaller value than maxConcurrency, which is helpful to\n        // reduce the possibility when a outgoing handler waits for stream data, in\n        // this situation, outgoing handlers are blocked.\n        // Outgoing queue shouldn't be empty.\n        Math.ceil((maxConcurrency / 4) * 3)\n      );\n      await scheduler.do();\n\n      return await this.commitBlockList(blockList, {\n        ...options,\n        tracingOptions: { ...options!.tracingOptions, spanOptions }\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Accepts a Node.js Readable stream factory, and uploads in blocks to a block blob.\n   * The Readable stream factory must returns a Node.js Readable stream starting from the offset defined. The offset\n   * is the offset in the block blob to be uploaded.\n   *\n   * When buffer length <= 256MB, this method will use 1 upload call to finish the upload.\n   * Otherwise, this method will call {@link stageBlock} to upload blocks, and finally call {@link commitBlockList}\n   * to commit the block list.\n   *\n   * @export\n   * @param {(offset: number) => NodeJS.ReadableStream} streamFactory Returns a Node.js Readable stream starting\n   *                                                                  from the offset defined\n   * @param {number} size Size of the block blob\n   * @param {BlockBlobParallelUploadOptions} [options] Options to Upload to Block Blob operation.\n   * @returns {(Promise<BlobUploadCommonResponse>)}  Response data for the Blob Upload operation.\n   * @memberof BlockBlobClient\n   */\n  private async uploadResetableStream(\n    streamFactory: (offset: number, count?: number) => NodeJS.ReadableStream,\n    size: number,\n    options: BlockBlobParallelUploadOptions = {}\n  ): Promise<BlobUploadCommonResponse> {\n    if (!options.blockSize) {\n      options.blockSize = 0;\n    }\n    if (options.blockSize < 0 || options.blockSize > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES) {\n      throw new RangeError(\n        `blockSize option must be >= 0 and <= ${BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES}`\n      );\n    }\n\n    if (options.maxSingleShotSize !== 0 && !options.maxSingleShotSize) {\n      options.maxSingleShotSize = BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES;\n    }\n    if (\n      options.maxSingleShotSize < 0 ||\n      options.maxSingleShotSize > BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES\n    ) {\n      throw new RangeError(\n        `maxSingleShotSize option must be >= 0 and <= ${BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES}`\n      );\n    }\n\n    if (options.blockSize === 0) {\n      if (size > BLOCK_BLOB_MAX_BLOCKS * BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES) {\n        throw new RangeError(`${size} is too larger to upload to a block blob.`);\n      }\n      if (size > options.maxSingleShotSize) {\n        options.blockSize = Math.ceil(size / BLOCK_BLOB_MAX_BLOCKS);\n        if (options.blockSize < DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES) {\n          options.blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n        }\n      }\n    }\n    if (!options.blobHTTPHeaders) {\n      options.blobHTTPHeaders = {};\n    }\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    const { span, spanOptions } = createSpan(\n      \"BlockBlobClient-uploadResetableStream\",\n      options.tracingOptions\n    );\n\n    try {\n      if (size <= options.maxSingleShotSize) {\n        return await this.upload(() => streamFactory(0), size, {\n          ...options,\n          tracingOptions: { ...options!.tracingOptions, spanOptions }\n        });\n      }\n\n      const numBlocks: number = Math.floor((size - 1) / options.blockSize) + 1;\n      if (numBlocks > BLOCK_BLOB_MAX_BLOCKS) {\n        throw new RangeError(\n          `The buffer's size is too big or the BlockSize is too small;` +\n            `the number of blocks must be <= ${BLOCK_BLOB_MAX_BLOCKS}`\n        );\n      }\n\n      const blockList: string[] = [];\n      const blockIDPrefix = generateUuid();\n      let transferProgress: number = 0;\n\n      const batch = new Batch(options.concurrency);\n      for (let i = 0; i < numBlocks; i++) {\n        batch.addOperation(\n          async (): Promise<any> => {\n            const blockID = generateBlockID(blockIDPrefix, i);\n            const start = options.blockSize! * i;\n            const end = i === numBlocks - 1 ? size : start + options.blockSize!;\n            const contentLength = end - start;\n            blockList.push(blockID);\n            await this.stageBlock(\n              blockID,\n              () => streamFactory(start, contentLength),\n              contentLength,\n              {\n                abortSignal: options.abortSignal,\n                conditions: options.conditions,\n                encryptionScope: options.encryptionScope,\n                tracingOptions: { ...options!.tracingOptions, spanOptions }\n              }\n            );\n            // Update progress after block is successfully uploaded to server, in case of block trying\n            transferProgress += contentLength;\n            if (options.onProgress) {\n              options.onProgress({ loadedBytes: transferProgress });\n            }\n          }\n        );\n      }\n      await batch.do();\n\n      return await this.commitBlockList(blockList, {\n        ...options,\n        tracingOptions: { ...options!.tracingOptions, spanOptions }\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n\n/**\n * Options to configure the {@link PageBlobClient.create} operation.\n *\n * @export\n * @interface PageBlobCreateOptions\n */\nexport interface PageBlobCreateOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof PageBlobCreateOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when creating a page blob.\n   *\n   * @type {BlobRequestConditions}\n   * @memberof PageBlobCreateOptions\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * A user-controlled value that can be used to track requests.\n   * The value must be between 0 and 2^63 - 1. The default value is 0.\n   *\n   * @type {number}\n   * @memberof PageBlobCreateOptions\n   */\n  blobSequenceNumber?: number;\n  /**\n   * HTTP headers to set when creating a page blob.\n   *\n   * @type {BlobHTTPHeaders}\n   * @memberof PageBlobCreateOptions\n   */\n  blobHTTPHeaders?: BlobHTTPHeaders;\n  /**\n   * A collection of key-value string pair to associate with the blob when creating append blobs.\n   *\n   * @type {Metadata}\n   * @memberof PageBlobCreateOptions\n   */\n  metadata?: Metadata;\n  /**\n   * Customer Provided Key Info.\n   *\n   * @type {CpkInfo}\n   * @memberof PageBlobCreateOptions\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   *\n   * @type {string}\n   * @memberof PageBlobCreateOptions\n   */\n  encryptionScope?: string;\n  /**\n   * Access tier.\n   * More Details - https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers\n   *\n   * @type {PremiumPageBlobTier | string}\n   * @memberof PageBlobCreateOptions\n   */\n  tier?: PremiumPageBlobTier | string;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.uploadPages} operation.\n *\n * @export\n * @interface PageBlobUploadPagesOptions\n */\nexport interface PageBlobUploadPagesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof PageBlobUploadPagesOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when uploading pages.\n   *\n   * @type {PageBlobRequestConditions}\n   * @memberof PageBlobUploadPagesOptions\n   */\n  conditions?: PageBlobRequestConditions;\n  /**\n   * Callback to receive events on the progress of upload pages operation.\n   *\n   * @type {(progress: TransferProgressEvent) => void}\n   * @memberof PageBlobUploadPagesOptions\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * An MD5 hash of the content. This hash is used to verify the integrity of the content during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   *\n   * @type {Uint8Array}\n   * @memberof PageBlobUploadPagesOptions\n   */\n  transactionalContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the content. This hash is used to verify the integrity of the content during transport.\n   * When this is specified, the storage service compares the hash of the content that has arrived with this value.\n   *\n   * transactionalContentMD5 and transactionalContentCrc64 cannot be set at same time.\n   *\n   * @type {Uint8Array}\n   * @memberof PageBlobUploadPagesOptions\n   */\n  transactionalContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   *\n   * @type {CpkInfo}\n   * @memberof PageBlobUploadPagesOptions\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   *\n   * @type {string}\n   * @memberof PageBlobUploadPagesOptions\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.clearPages} operation.\n *\n * @export\n * @interface PageBlobClearPagesOptions\n */\nexport interface PageBlobClearPagesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof PageBlobClearPagesOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when clearing pages.\n   *\n   * @type {PageBlobRequestConditions}\n   * @memberof PageBlobClearPagesOptions\n   */\n  conditions?: PageBlobRequestConditions;\n  /**\n   * Customer Provided Key Info.\n   *\n   * @type {CpkInfo}\n   * @memberof PageBlobClearPagesOptions\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   *\n   * @type {string}\n   * @memberof PageBlobClearPagesOptions\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.getPageRanges} operation.\n *\n * @export\n * @interface PageBlobGetPageRangesOptions\n */\nexport interface PageBlobGetPageRangesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof PageBlobGetPageRangesOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges.\n   *\n   * @type {BlobRequestConditions}\n   * @memberof PageBlobGetPageRangesOptions\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure the {@link PageBlobClient.getRangesDiff} operation.\n *\n * @export\n * @interface PageBlobGetPageRangesDiffOptions\n */\nexport interface PageBlobGetPageRangesDiffOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof PageBlobGetPageRangesDiffOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when getting page ranges diff.\n   *\n   * @type {BlobRequestConditions}\n   * @memberof PageBlobGetPageRangesDiffOptions\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * (unused)\n   *\n   * @type {string}\n   * @memberof PageBlobGetPageRangesDiffOptions\n   */\n  range?: string;\n}\n\n/**\n * Options to configure {@link PageBlobClient.resize} operation.\n *\n * @export\n * @interface PageBlobResizeOptions\n */\nexport interface PageBlobResizeOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof PageBlobResizeOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when resizing a page blob.\n   *\n   * @type {BlobRequestConditions}\n   * @memberof PageBlobResizeOptions\n   */\n  conditions?: BlobRequestConditions;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   *\n   * @type {string}\n   * @memberof PageBlobResizeOptions\n   */\n  encryptionScope?: string;\n}\n\n/**\n * Options to configure {@link PageBlobClient.updateSequenceNumber} operation.\n *\n * @export\n * @interface PageBlobUpdateSequenceNumberOptions\n */\nexport interface PageBlobUpdateSequenceNumberOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof PageBlobUpdateSequenceNumberOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when updating sequence number.\n   *\n   * @type {BlobRequestConditions}\n   * @memberof PageBlobUpdateSequenceNumberOptions\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure {@link PageBlobClient.startCopyIncremental} operation.\n *\n * @export\n * @interface PageBlobStartCopyIncrementalOptions\n */\nexport interface PageBlobStartCopyIncrementalOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof PageBlobStartCopyIncrementalOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when startting copy incremental operation.\n   *\n   * @type {ModifiedAccessConditions}\n   * @memberof PageBlobStartCopyIncrementalOptions\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure {@link PageBlobClient.uploadPagesFromURL} operation.\n *\n * @export\n * @interface PageBlobUploadPagesFromURLOptions\n */\nexport interface PageBlobUploadPagesFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof PageBlobUploadPagesFromURLOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when updating sequence number.\n   *\n   * @type {PageBlobRequestConditions}\n   * @memberof PageBlobUploadPagesFromURLOptions\n   */\n  conditions?: PageBlobRequestConditions;\n  /**\n   * Conditions to meet for the source Azure Blob/File when copying from a URL to the blob.\n   *\n   * @type {ModifiedAccessConditions}\n   * @memberof PageBlobUploadPagesFromURLOptions\n   */\n  sourceConditions?: ModifiedAccessConditions;\n  /**\n   * An MD5 hash of the content from the URI.\n   * This hash is used to verify the integrity of the content during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   *\n   * @type {Uint8Array}\n   * @memberof PageBlobUploadPagesFromURLOptions\n   */\n  sourceContentMD5?: Uint8Array;\n  /**\n   * A CRC64 hash of the content from the URI.\n   * This hash is used to verify the integrity of the content during transport of the data from the URI.\n   * When this is specified, the storage service compares the hash of the content that has arrived from the copy-source with this value.\n   *\n   * sourceContentMD5 and sourceContentCrc64 cannot be set at same time.\n   *\n   * @type {Uint8Array}\n   * @memberof PageBlobUploadPagesFromURLOptions\n   */\n  sourceContentCrc64?: Uint8Array;\n  /**\n   * Customer Provided Key Info.\n   *\n   * @type {CpkInfo}\n   * @memberof PageBlobUploadPagesFromURLOptions\n   */\n  customerProvidedKey?: CpkInfo;\n  /**\n   * Optional. Version 2019-07-07 and later.  Specifies the name of the encryption scope to use to\n   * encrypt the data provided in the request. If not specified, encryption is performed with the\n   * default account encryption scope.  For more information, see Encryption at Rest for Azure\n   * Storage Services.\n   *\n   * @type {string}\n   * @memberof PageBlobUploadPagesFromURLOptions\n   */\n  encryptionScope?: string;\n}\n\n/**\n * PageBlobClient defines a set of operations applicable to page blobs.\n *\n * @export\n * @class PageBlobClient\n * @extends {BlobClient}\n */\nexport class PageBlobClient extends BlobClient {\n  /**\n   * pageBlobsContext provided by protocol layer.\n   *\n   * @private\n   * @type {PageBlobs}\n   * @memberof PageBlobClient\n   */\n  private pageBlobContext: PageBlob;\n\n  /**\n   *\n   * Creates an instance of PageBlobClient.\n   *\n   * @param {string} connectionString Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param {string} containerName Container name.\n   * @param {string} blobName Blob name.\n   * @param {StoragePipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof PageBlobClient\n   */\n  constructor(\n    connectionString: string,\n    containerName: string,\n    blobName: string,\n    options?: StoragePipelineOptions\n  );\n  /**\n   * Creates an instance of PageBlobClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param {string} url A Client string pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param {StorageSharedKeyCredential | AnonymousCredential | TokenCredential} credential  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the @azure/identity package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param {StoragePipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof PageBlobClient\n   */\n  constructor(\n    url: string,\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    options?: StoragePipelineOptions\n  );\n  /**\n   * Creates an instance of PageBlobClient.\n   *\n   * @param {string} url A URL string pointing to Azure Storage blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob\".\n   *                     You can append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param {Pipeline} pipeline Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof PageBlobClient\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | Pipeline,\n    blobNameOrOptions?: string | StoragePipelineOptions,\n    options?: StoragePipelineOptions\n  ) {\n    // In TypeScript we cannot simply pass all parameters to super() like below so have to duplicate the code instead.\n    //   super(s, credentialOrPipelineOrContainerNameOrOptions, blobNameOrOptions, options);\n    let pipeline: Pipeline;\n    let url: string;\n    options = options || {};\n    if (credentialOrPipelineOrContainerName instanceof Pipeline) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      options = blobNameOrOptions as StoragePipelineOptions;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      // The second parameter is undefined. Use anonymous credential.\n      url = urlOrConnectionString;\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\" &&\n      blobNameOrOptions &&\n      typeof blobNameOrOptions === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n      const blobName = blobNameOrOptions;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey\n          );\n          url = appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName)\n          );\n          options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(\n            appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)),\n            encodeURIComponent(blobName)\n          ) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\"\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName and blobName parameters\");\n    }\n    super(url, pipeline);\n    this.pageBlobContext = new PageBlob(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new PageBlobClient object identical to the source but with the\n   * specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a Client to the base blob.\n   *\n   * @param {string} snapshot The snapshot timestamp.\n   * @returns {PageBlobClient} A new PageBlobClient object identical to the source but with the specified snapshot timestamp.\n   * @memberof PageBlobClient\n   */\n  public withSnapshot(snapshot: string): PageBlobClient {\n    return new PageBlobClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot\n      ),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a page blob of the specified length. Call uploadPages to upload data\n   * data to a page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param {number} size size of the page blob.\n   * @param {PageBlobCreateOptions} [options] Options to the Page Blob Create operation.\n   * @returns {Promise<PageBlobCreateResponse>} Response data for the Page Blob Create operation.\n   * @memberof PageBlobClient\n   */\n  public async create(\n    size: number,\n    options: PageBlobCreateOptions = {}\n  ): Promise<PageBlobCreateResponse> {\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\"PageBlobClient-create\", options.tracingOptions);\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      return await this.pageBlobContext.create(0, size, {\n        abortSignal: options.abortSignal,\n        blobHTTPHeaders: options.blobHTTPHeaders,\n        blobSequenceNumber: options.blobSequenceNumber,\n        leaseAccessConditions: options.conditions,\n        metadata: options.metadata,\n        modifiedAccessConditions: options.conditions,\n        cpkInfo: options.customerProvidedKey,\n        encryptionScope: options.encryptionScope,\n        tier: toAccessTier(options.tier),\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Writes 1 or more pages to the page blob. The start and end offsets must be a multiple of 512.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-page\n   *\n   * @param {HttpRequestBody} body Data to upload\n   * @param {number} offset Offset of destination page blob\n   * @param {number} count Content length of the body, also number of bytes to be uploaded\n   * @param {PageBlobUploadPagesOptions} [options] Options to the Page Blob Upload Pages operation.\n   * @returns {Promise<PageBlobsUploadPagesResponse>} Response data for the Page Blob Upload Pages operation.\n   * @memberof PageBlobClient\n   */\n  public async uploadPages(\n    body: HttpRequestBody,\n    offset: number,\n    count: number,\n    options: PageBlobUploadPagesOptions = {}\n  ): Promise<PageBlobUploadPagesResponse> {\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\"PageBlobClient-uploadPages\", options.tracingOptions);\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      return await this.pageBlobContext.uploadPages(body, count, {\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: options.conditions,\n        onUploadProgress: options.onProgress,\n        range: rangeToString({ offset, count }),\n        sequenceNumberAccessConditions: options.conditions,\n        transactionalContentMD5: options.transactionalContentMD5,\n        transactionalContentCrc64: options.transactionalContentCrc64,\n        cpkInfo: options.customerProvidedKey,\n        encryptionScope: options.encryptionScope,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * The Upload Pages operation writes a range of pages to a page blob where the\n   * contents are read from a URL.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/put-page-from-url\n   *\n   * @param {string} sourceURL Specify a URL to the copy source, Shared Access Signature(SAS) maybe needed for authentication\n   * @param {number} sourceOffset The source offset to copy from. Pass 0 to copy from the beginning of source page blob\n   * @param {number} destOffset Offset of destination page blob\n   * @param {number} count Number of bytes to be uploaded from source page blob\n   * @param {PageBlobUploadPagesFromURLOptions} [options={}]\n   * @returns {Promise<PageBlobUploadPagesFromURLResponse>}\n   * @memberof PageBlobClient\n   */\n  public async uploadPagesFromURL(\n    sourceURL: string,\n    sourceOffset: number,\n    destOffset: number,\n    count: number,\n    options: PageBlobUploadPagesFromURLOptions = {}\n  ): Promise<PageBlobUploadPagesFromURLResponse> {\n    options.conditions = options.conditions || {};\n    options.sourceConditions = options.sourceConditions || {};\n    const { span, spanOptions } = createSpan(\n      \"PageBlobClient-uploadPagesFromURL\",\n      options.tracingOptions\n    );\n    try {\n      ensureCpkIfSpecified(options.customerProvidedKey, this.isHttps);\n      return await this.pageBlobContext.uploadPagesFromURL(\n        sourceURL,\n        rangeToString({ offset: sourceOffset, count }),\n        0,\n        rangeToString({ offset: destOffset, count }),\n        {\n          abortSignal: options.abortSignal,\n          sourceContentMD5: options.sourceContentMD5,\n          sourceContentCrc64: options.sourceContentCrc64,\n          leaseAccessConditions: options.conditions,\n          sequenceNumberAccessConditions: options.conditions,\n          modifiedAccessConditions: options.conditions,\n          sourceModifiedAccessConditions: {\n            sourceIfMatch: options.sourceConditions.ifMatch,\n            sourceIfModifiedSince: options.sourceConditions.ifModifiedSince,\n            sourceIfNoneMatch: options.sourceConditions.ifNoneMatch,\n            sourceIfUnmodifiedSince: options.sourceConditions.ifUnmodifiedSince\n          },\n          cpkInfo: options.customerProvidedKey,\n          encryptionScope: options.encryptionScope,\n          spanOptions\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Frees the specified pages from the page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-page\n   *\n   * @param {number} [offset] Starting byte position of the pages to clear.\n   * @param {number} [count] Number of bytes to clear.\n   * @param {PageBlobClearPagesOptions} [options] Options to the Page Blob Clear Pages operation.\n   * @returns {Promise<PageBlobClearPagesResponse>} Response data for the Page Blob Clear Pages operation.\n   * @memberof PageBlobClient\n   */\n  public async clearPages(\n    offset: number = 0,\n    count?: number,\n    options: PageBlobClearPagesOptions = {}\n  ): Promise<PageBlobClearPagesResponse> {\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\"PageBlobClient-clearPages\", options.tracingOptions);\n    try {\n      return await this.pageBlobContext.clearPages(0, {\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: options.conditions,\n        range: rangeToString({ offset, count }),\n        sequenceNumberAccessConditions: options.conditions,\n        cpkInfo: options.customerProvidedKey,\n        encryptionScope: options.encryptionScope,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns the list of valid page ranges for a page blob or snapshot of a page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param {number} [offset] Starting byte position of the page ranges.\n   * @param {number} [count] Number of bytes to get.\n   * @param {PageBlobGetPageRangesOptions} [options] Options to the Page Blob Get Ranges operation.\n   * @returns {Promise<PageBlobGetPageRangesResponse>} Response data for the Page Blob Get Ranges operation.\n   * @memberof PageBlobClient\n   */\n  public async getPageRanges(\n    offset: number = 0,\n    count?: number,\n    options: PageBlobGetPageRangesOptions = {}\n  ): Promise<PageBlobGetPageRangesResponse> {\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\n      \"PageBlobClient-getPageRanges\",\n      options.tracingOptions\n    );\n    try {\n      return await this.pageBlobContext\n        .getPageRanges({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: options.conditions,\n          range: rangeToString({ offset, count }),\n          spanOptions\n        })\n        .then(rangeResponseFromModel);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the collection of page ranges that differ between a specified snapshot and this page blob.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param {number} offset Starting byte position of the page blob\n   * @param {number} count Number of bytes to get ranges diff.\n   * @param {string} prevSnapshot Timestamp of snapshot to retrive the difference.\n   * @param {PageBlobGetPageRangesDiffOptions} [options] Options to the Page Blob Get Page Ranges Diff operation.\n   * @returns {Promise<PageBlobGetPageRangesDiffResponse>} Response data for the Page Blob Get Page Range Diff operation.\n   * @memberof PageBlobClient\n   */\n  public async getPageRangesDiff(\n    offset: number,\n    count: number,\n    prevSnapshot: string,\n    options: PageBlobGetPageRangesDiffOptions = {}\n  ): Promise<PageBlobGetPageRangesDiffResponse> {\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\n      \"PageBlobClient-getPageRangesDiff\",\n      options.tracingOptions\n    );\n\n    try {\n      return await this.pageBlobContext\n        .getPageRangesDiff({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: options.conditions,\n          prevsnapshot: prevSnapshot,\n          range: rangeToString({ offset, count }),\n          spanOptions\n        })\n        .then(rangeResponseFromModel);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the collection of page ranges that differ between a specified snapshot and this page blob for managed disks.\n   * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n   *\n   * @param {number} offset Starting byte position of the page blob\n   * @param {number} count Number of bytes to get ranges diff.\n   * @param {string} prevSnapshotUrl URL of snapshot to retrive the difference.\n   * @param {PageBlobGetPageRangesDiffOptions} [options] Options to the Page Blob Get Page Ranges Diff operation.\n   * @returns {Promise<PageBlobGetPageRangesDiffResponse>} Response data for the Page Blob Get Page Range Diff operation.\n   * @memberof PageBlobClient\n   */\n  public async getPageRangesDiffForManagedDisks(\n    offset: number,\n    count: number,\n    prevSnapshotUrl: string,\n    options: PageBlobGetPageRangesDiffOptions = {}\n  ): Promise<PageBlobGetPageRangesDiffResponse> {\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\n      \"PageBlobClient-GetPageRangesDiffForManagedDisks\",\n      options.tracingOptions\n    );\n\n    try {\n      return await this.pageBlobContext\n        .getPageRangesDiff({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.conditions,\n          modifiedAccessConditions: options.conditions,\n          prevSnapshotUrl,\n          range: rangeToString({ offset, count }),\n          spanOptions\n        })\n        .then(rangeResponseFromModel);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Resizes the page blob to the specified size (which must be a multiple of 512).\n   * @see https://docs.microsoft.com/rest/api/storageservices/set-blob-properties\n   *\n   * @param {number} size Target size\n   * @param {PageBlobResizeOptions} [options] Options to the Page Blob Resize operation.\n   * @returns {Promise<PageBlobResizeResponse>} Response data for the Page Blob Resize operation.\n   * @memberof PageBlobClient\n   */\n  public async resize(\n    size: number,\n    options: PageBlobResizeOptions = {}\n  ): Promise<PageBlobResizeResponse> {\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\"PageBlobClient-resize\", options.tracingOptions);\n    try {\n      return await this.pageBlobContext.resize(size, {\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: options.conditions,\n        encryptionScope: options.encryptionScope,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets a page blob's sequence number.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\n   *\n   * @param {SequenceNumberActionType} sequenceNumberAction Indicates how the service should modify the blob's sequence number.\n   * @param {number} [sequenceNumber] Required if sequenceNumberAction is max or update\n   * @param {PageBlobUpdateSequenceNumberOptions} [options] Options to the Page Blob Update Sequence Number operation.\n   * @returns {Promise<PageBlobUpdateSequenceNumberResponse>} Response data for the Page Blob Update Sequence Number operation.\n   * @memberof PageBlobClient\n   */\n  public async updateSequenceNumber(\n    sequenceNumberAction: SequenceNumberActionType,\n    sequenceNumber?: number,\n    options: PageBlobUpdateSequenceNumberOptions = {}\n  ): Promise<PageBlobUpdateSequenceNumberResponse> {\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\n      \"PageBlobClient-updateSequenceNumber\",\n      options.tracingOptions\n    );\n    try {\n      return await this.pageBlobContext.updateSequenceNumber(sequenceNumberAction, {\n        abortSignal: options.abortSignal,\n        blobSequenceNumber: sequenceNumber,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: options.conditions,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Begins an operation to start an incremental copy from one page blob's snapshot to this page blob.\n   * The snapshot is copied such that only the differential changes between the previously\n   * copied snapshot are transferred to the destination.\n   * The copied snapshots are complete copies of the original snapshot and can be read or copied from as usual.\n   * @see https://docs.microsoft.com/rest/api/storageservices/incremental-copy-blob\n   * @see https://docs.microsoft.com/en-us/azure/virtual-machines/windows/incremental-snapshots\n   *\n   * @param {string} copySource Specifies the name of the source page blob snapshot. For example,\n   *                            https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n   * @param {PageBlobStartCopyIncrementalOptions} [options] Options to the Page Blob Copy Incremental operation.\n   * @returns {Promise<PageBlobCopyIncrementalResponse>} Response data for the Page Blob Copy Incremental operation.\n   * @memberof PageBlobClient\n   */\n  public async startCopyIncremental(\n    copySource: string,\n    options: PageBlobStartCopyIncrementalOptions = {}\n  ): Promise<PageBlobCopyIncrementalResponse> {\n    const { span, spanOptions } = createSpan(\n      \"PageBlobClient-startCopyIncremental\",\n      options.tracingOptions\n    );\n    try {\n      return await this.pageBlobContext.copyIncremental(copySource, {\n        abortSignal: options.abortSignal,\n        modifiedAccessConditions: options.conditions,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n\n/**\n * The details for a specific lease.\n */\nexport interface Lease {\n  /**\n   * The ETag contains a value that you can use to\n   * perform operations conditionally. If the request version is 2011-08-18 or\n   * newer, the ETag value will be in quotes.\n   */\n  etag?: string;\n  /**\n   * Returns the date and time the container was\n   * last modified. Any operation that modifies the blob, including an update\n   * of the blob's metadata or properties, changes the last-modified time of\n   * the blob.\n   */\n  lastModified?: Date;\n  /**\n   * Uniquely identifies a container's lease\n   */\n  leaseId?: string;\n  /**\n   * Approximate time remaining in the lease\n   * period, in seconds.\n   */\n  leaseTime?: number;\n  /**\n   * This header uniquely identifies the request\n   * that was made and can be used for troubleshooting the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used\n   * to execute the request. This header is returned for requests made against\n   * version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that\n   * indicates the time at which the response was initiated\n   */\n  date?: Date;\n  /**\n   * Error code if any associated with the response that returned\n   * the Lease information.\n   */\n  errorCode?: string;\n}\n\n/**\n * Contains the response data for operations that create, modify, or delete a lease.\n *\n * See {@link BlobLeaseClient}.\n */\nexport type LeaseOperationResponse = Lease & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: Lease;\n  };\n};\n\n/**\n * Configures lease operations.\n *\n * @export\n * @interface LeaseOperationOptions\n */\nexport interface LeaseOperationOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof LeaseOperationOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when changing the lease.\n   *\n   * @type {ModifiedAccessConditions}\n   * @memberof LeaseOperationOptions\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * A client that manages leases for a {@link ContainerClient} or a {@link BlobClient}.\n *\n * @export\n * @class BlobLeaseClient\n */\nexport class BlobLeaseClient {\n  private _leaseId: string;\n  private _url: string;\n  private _containerOrBlobOperation: Container | StorageBlob;\n\n  /**\n   * Gets the lease Id.\n   *\n   * @readonly\n   * @memberof BlobLeaseClient\n   * @type {string}\n   */\n  public get leaseId(): string {\n    return this._leaseId;\n  }\n\n  /**\n   * Gets the url.\n   *\n   * @readonly\n   * @memberof BlobLeaseClient\n   * @type {string}\n   */\n  public get url(): string {\n    return this._url;\n  }\n\n  /**\n   * Creates an instance of BlobLeaseClient.\n   * @param {(ContainerClient | BlobClient)} client The client to make the lease operation requests.\n   * @param {string} leaseId Initial proposed lease id.\n   * @memberof BlobLeaseClient\n   */\n  constructor(client: ContainerClient | BlobClient, leaseId?: string) {\n    const clientContext = new StorageClientContext(\n      client.url,\n      (client as any).pipeline.toServiceClientOptions()\n    );\n    this._url = client.url;\n\n    if (client instanceof ContainerClient) {\n      this._containerOrBlobOperation = new Container(clientContext);\n    } else {\n      this._containerOrBlobOperation = new StorageBlob(clientContext);\n    }\n\n    if (!leaseId) {\n      leaseId = generateUuid();\n    }\n    this._leaseId = leaseId;\n  }\n\n  /**\n   * Establishes and manages a lock on a container for delete operations, or on a blob\n   * for write and delete operations.\n   * The lock duration can be 15 to 60 seconds, or can be infinite.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param {number} duration Must be between 15 to 60 seconds, or infinite (-1)\n   * @param {LeaseOperationOptions} [options={}] option to configure lease management operations.\n   * @returns {Promise<LeaseOperationResponse>} Response data for acquire lease operation.\n   * @memberof BlobLeaseClient\n   */\n  public async acquireLease(\n    duration: number,\n    options: LeaseOperationOptions = {}\n  ): Promise<LeaseOperationResponse> {\n    const { span, spanOptions } = createSpan(\n      \"BlobLeaseClient-acquireLease\",\n      options.tracingOptions\n    );\n    try {\n      return await this._containerOrBlobOperation.acquireLease({\n        abortSignal: options.abortSignal,\n        duration,\n        modifiedAccessConditions: options.conditions,\n        proposedLeaseId: this._leaseId,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * To change the ID of the lease.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param {string} proposedLeaseId the proposed new lease Id.\n   * @param {LeaseOperationOptions} [options={}] option to configure lease management operations.\n   * @returns {Promise<LeaseOperationResponse>} Response data for change lease operation.\n   * @memberof BlobLeaseClient\n   */\n  public async changeLease(\n    proposedLeaseId: string,\n    options: LeaseOperationOptions = {}\n  ): Promise<LeaseOperationResponse> {\n    const { span, spanOptions } = createSpan(\"BlobLeaseClient-changeLease\", options.tracingOptions);\n    try {\n      const response = await this._containerOrBlobOperation.changeLease(\n        this._leaseId,\n        proposedLeaseId,\n        {\n          abortSignal: options.abortSignal,\n          modifiedAccessConditions: options.conditions,\n          spanOptions\n        }\n      );\n      this._leaseId = proposedLeaseId;\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * To free the lease if it is no longer needed so that another client may\n   * immediately acquire a lease against the container or the blob.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param {LeaseOperationOptions} [options={}] option to configure lease management operations.\n   * @returns {Promise<LeaseOperationResponse>} Response data for release lease operation.\n   * @memberof BlobLeaseClient\n   */\n  public async releaseLease(options: LeaseOperationOptions = {}): Promise<LeaseOperationResponse> {\n    const { span, spanOptions } = createSpan(\n      \"BlobLeaseClient-releaseLease\",\n      options.tracingOptions\n    );\n    try {\n      return await this._containerOrBlobOperation.releaseLease(this._leaseId, {\n        abortSignal: options.abortSignal,\n        modifiedAccessConditions: options.conditions,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * To renew the lease.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @param {LeaseOperationOptions} [options={}] Optional option to configure lease management operations.\n   * @returns {Promise<LeaseOperationResponse>} Response data for renew lease operation.\n   * @memberof BlobLeaseClient\n   */\n  public async renewLease(options: LeaseOperationOptions = {}): Promise<Lease> {\n    const { span, spanOptions } = createSpan(\"BlobLeaseClient-renewLease\", options.tracingOptions);\n    try {\n      return await this._containerOrBlobOperation.renewLease(this._leaseId, {\n        abortSignal: options.abortSignal,\n        modifiedAccessConditions: options.conditions,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * To end the lease but ensure that another client cannot acquire a new lease\n   * until the current lease period has expired.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n   * and\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n   *\n   * @static\n   * @param {number} breakPeriod Break period\n   * @param {LeaseOperationOptions} [options={}] Optional options to configure lease management operations.\n   * @returns {Promise<LeaseOperationResponse>} Response data for break lease operation.\n   * @memberof BlobLeaseClient\n   */\n  public async breakLease(\n    breakPeriod: number,\n    options: LeaseOperationOptions = {}\n  ): Promise<LeaseOperationResponse> {\n    const { span, spanOptions } = createSpan(\"BlobLeaseClient-breakLease\", options.tracingOptions);\n    try {\n      const operationOptions: ContainerBreakLeaseOptionalParams = {\n        abortSignal: options.abortSignal,\n        breakPeriod,\n        modifiedAccessConditions: options.conditions,\n        spanOptions\n      };\n      return await this._containerOrBlobOperation.breakLease(operationOptions);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n\n/**\n * Options to configure {@link ContainerClient.create} operation.\n *\n * @export\n * @interface ContainerCreateOptions\n */\nexport interface ContainerCreateOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ContainerCreateOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the container.\n   *\n   * @type {Metadata}\n   * @memberof ContainerCreateOptions\n   */\n  metadata?: Metadata;\n  /**\n   * Specifies whether data in the container may be accessed publicly and the level of access. Possible values include:\n   * - `container`: Specifies full public read access for container and blob data. Clients can enumerate blobs within the container via anonymous request, but cannot enumerate containers within the storage account.\n   * - `blob`: Specifies public read access for blobs. Blob data within this container can be read via anonymous request, but container data is not available. Clients cannot enumerate blobs within the container via anonymous request.\n   *\n   * @type {PublicAccessType}\n   * @memberof ContainerCreateOptions\n   */\n  access?: PublicAccessType;\n  /**\n   * Container encryption scope info.\n   *\n   * @type {ContainerEncryptionScope}\n   * @memberof ContainerCreateOptions\n   */\n  containerEncryptionScope?: ContainerEncryptionScope;\n}\n\n/**\n * Options to configure {@link ContainerClient.getProperties} operation.\n *\n * @export\n * @interface ContainerGetPropertiesOptions\n */\nexport interface ContainerGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ContainerGetPropertiesOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   *\n   * @type {LeaseAccessConditions}\n   * @memberof ContainerGetPropertiesOptions\n   */\n  conditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure {@link ContainerClient.delete} operation.\n *\n * @export\n * @interface ContainerDeleteMethodOptions\n */\nexport interface ContainerDeleteMethodOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ContainerDeleteMethodOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when deleting the container.\n   *\n   * @type {BlobRequestConditions}\n   * @memberof ContainerDeleteMethodOptions\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure {@link ContainerClient.exists} operation.\n *\n * @export\n * @interface ContainerExistsOptions\n */\nexport interface ContainerExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ContainerDeleteMethodOptions\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure {@link ContainerClient.setMetadata} operation.\n *\n * @export\n * @interface ContainerSetMetadataOptions\n */\nexport interface ContainerSetMetadataOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ContainerSetMetadataOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   *\n   * @type {BlobRequestConditions}\n   * @memberof ContainerSetMetadataOptions\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure {@link ContainerClient.getAccessPolicy} operation.\n *\n * @export\n * @interface ContainerGetAccessPolicyOptions\n */\nexport interface ContainerGetAccessPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ContainerGetAccessPolicyOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, contains the lease id that must be matched and lease with this id\n   * must be active in order for the operation to succeed.\n   *\n   * @type {LeaseAccessConditions}\n   * @memberof ContainerGetAccessPolicyOptions\n   */\n  conditions?: LeaseAccessConditions;\n}\n\n/**\n * Signed identifier.\n *\n * @export\n * @interface SignedIdentifier\n */\nexport interface SignedIdentifier {\n  /**\n   * @member {string} id a unique id\n   */\n  id: string;\n  /**\n   * @member {AccessPolicy} accessPolicy\n   */\n  accessPolicy: {\n    /**\n     * @member {Date} startsOn Optional. The date-time the policy is active\n     */\n    startsOn?: Date;\n    /**\n     * @member {Date} expiresOn Optional. The date-time the policy expires\n     */\n    expiresOn?: Date;\n    /**\n     * @member {string} permissions The permissions for the acl policy\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-acl\n     */\n    permissions?: string;\n  };\n}\n\n/**\n * Contains response data for the {@link ContainerClient.getAccessPolicy} operation.\n */\nexport declare type ContainerGetAccessPolicyResponse = {\n  signedIdentifiers: SignedIdentifier[];\n} & ContainerGetAccessPolicyHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ContainerGetAccessPolicyHeaders;\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: SignedIdentifierModel[];\n    };\n  };\n\n/**\n * Options to configure {@link ContainerClient.setAccessPolicy} operation.\n *\n * @export\n * @interface ContainerSetAccessPolicyOptions\n */\nexport interface ContainerSetAccessPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ContainerSetAccessPolicyOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when setting the access policy.\n   *\n   * @type {BlobRequestConditions}\n   * @memberof ContainerSetAccessPolicyOptions\n   */\n  conditions?: BlobRequestConditions;\n}\n\n/**\n * Options to configure Container - Acquire Lease operation.\n *\n * @export\n * @interface ContainerAcquireLeaseOptions\n */\nexport interface ContainerAcquireLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ContainerAcquireLeaseOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when acquiring the lease.\n   *\n   * @type {ModifiedAccessConditions}\n   * @memberof ContainerAcquireLeaseOptions\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Release Lease operation.\n *\n * @export\n * @interface ContainerReleaseLeaseOptions\n */\nexport interface ContainerReleaseLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ContainerReleaseLeaseOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when releasing the lease.\n   *\n   * @type {ModifiedAccessConditions}\n   * @memberof ContainerReleaseLeaseOptions\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Renew Lease operation.\n *\n * @export\n * @interface ContainerRenewLeaseOptions\n */\nexport interface ContainerRenewLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ContainerRenewLeaseOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when renewing the lease.\n   *\n   * @type {ModifiedAccessConditions}\n   * @memberof ContainerRenewLeaseOptions\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Break Lease operation.\n *\n * @export\n * @interface ContainerBreakLeaseOptions\n */\nexport interface ContainerBreakLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ContainerBreakLeaseOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when breaking the lease.\n   *\n   * @type {ModifiedAccessConditions}\n   * @memberof ContainerBreakLeaseOptions\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - Change Lease operation.\n *\n * @export\n * @interface ContainerChangeLeaseOptions\n */\nexport interface ContainerChangeLeaseOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ContainerChangeLeaseOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Conditions to meet when changing the lease.\n   *\n   * @type {ModifiedAccessConditions}\n   * @memberof ContainerChangeLeaseOptions\n   */\n  conditions?: ModifiedAccessConditions;\n}\n\n/**\n * Options to configure Container - List Segment operations.\n *\n * See:\n * - {@link ContainerClient.listSegments}\n * - {@link ContainerClient.listBlobFlatSegment}\n * - {@link ContainerClient.listBlobHierarchySegment}\n * - {@link ContainerClient.listHierarchySegments}\n * - {@link ContainerClient.listItemsByHierarchy}\n *\n * @interface ContainerListBlobsSegmentOptions\n */\ninterface ContainerListBlobsSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ContainerListBlobsSegmentOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * Specifies the maximum number of containers\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n  /**\n   * Include this parameter to\n   * specify one or more datasets to include in the response.\n   */\n  include?: ListBlobsIncludeItem[];\n}\n\n/**\n * Options to configure Container - List Blobs operations.\n *\n * See:\n * - {@link ContainerClient.listBlobsFlat}\n * - {@link ContainerClient.listBlobsByHierarchy}\n *\n * @export\n * @interface ContainerListBlobsOptions\n */\nexport interface ContainerListBlobsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ContainerListBlobsOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n\n  /**\n   * Specifies whether metadata related to any current or previous Copy Blob operation should be included in the response.\n   */\n  includeCopy?: boolean;\n  /**\n   * Specifies whether soft deleted blobs should be included in the response.\n   */\n  includeDeleted?: boolean;\n  /**\n   * Specifies whether blob metadata be returned in the response.\n   */\n  includeMetadata?: boolean;\n  /**\n   * Specifies whether snapshots should be included in the enumeration. Snapshots are listed from oldest to newest in the response\n   */\n  includeSnapshots?: boolean;\n  /**\n   * Specifies whether blobs for which blocks have been uploaded, but which have not been committed using Put Block List, be included in the response.\n   */\n  includeUncommitedBlobs?: boolean;\n}\n\n/**\n * A ContainerClient represents a URL to the Azure Storage container allowing you to manipulate its blobs.\n *\n * @export\n * @class ContainerClient\n */\nexport class ContainerClient extends StorageClient {\n  /**\n   * containerContext provided by protocol layer.\n   *\n   * @private\n   * @type {Containers}\n   * @memberof ContainerClient\n   */\n  private containerContext: Container;\n\n  private _containerName: string;\n\n  /**\n   * The name of the container.\n   */\n  public get containerName(): string {\n    return this._containerName;\n  }\n  /**\n   *\n   * Creates an instance of ContainerClient.\n   *\n   * @param {string} connectionString Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param {string} containerName Container name.\n   * @param {StoragePipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof ContainerClient\n   */\n  constructor(connectionString: string, containerName: string, options?: StoragePipelineOptions);\n  /**\n   * Creates an instance of ContainerClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a page blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param {string} url A URL string pointing to Azure Storage page blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param {StorageSharedKeyCredential | AnonymousCredential | TokenCredential} credential  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the @azure/identity package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param {StoragePipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof ContainerClient\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    options?: StoragePipelineOptions\n  );\n  /**\n   * Creates an instance of ContainerClient.\n   * This method accepts an encoded URL or non-encoded URL pointing to a page blob.\n   * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   * If a blob name includes ? or %, blob name must be encoded in the URL.\n   *\n   * @param {string} url A URL string pointing to Azure Storage page blob, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n\n   *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n   * @param {Pipeline} pipeline Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof ContainerClient\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrContainerName?:\n      | string\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | Pipeline,\n    options?: StoragePipelineOptions\n  ) {\n    let pipeline: Pipeline;\n    let url: string;\n    options = options || {};\n    if (credentialOrPipelineOrContainerName instanceof Pipeline) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrContainerName;\n    } else if (\n      (isNode && credentialOrPipelineOrContainerName instanceof StorageSharedKeyCredential) ||\n      credentialOrPipelineOrContainerName instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipelineOrContainerName)\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      pipeline = newPipeline(credentialOrPipelineOrContainerName, options);\n    } else if (\n      !credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName !== \"string\"\n    ) {\n      // (url: string, credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)\n      // The second parameter is undefined. Use anonymous credential.\n      url = urlOrConnectionString;\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrContainerName &&\n      typeof credentialOrPipelineOrContainerName === \"string\"\n    ) {\n      // (connectionString: string, containerName: string, blobName: string, options?: StoragePipelineOptions)\n      const containerName = credentialOrPipelineOrContainerName;\n\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey\n          );\n          url = appendToURLPath(extractedCreds.url, encodeURIComponent(containerName));\n          options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url =\n          appendToURLPath(extractedCreds.url, encodeURIComponent(containerName)) +\n          \"?\" +\n          extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\"\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for containerName parameter\");\n    }\n    super(url, pipeline);\n    this._containerName = this.getContainerNameFromUrl();\n    this.containerContext = new Container(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new container under the specified account. If the container with\n   * the same name already exists, the operation fails.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-container\n   *\n   * @param {ContainerCreateOptions} [options] Options to Container Create operation.\n   * @returns {Promise<ContainerCreateResponse>}\n   * @memberof ContainerClient\n   *\n   * Example usage:\n   *\n   * ```js\n   * const containerClient = blobServiceClient.getContainerClient(\"<container name>\");\n   * const createContainerResponse = await containerClient.create();\n   * console.log(\"Container was created successfully\", createContainerResponse.requestId);\n   * ```\n   */\n  public async create(options: ContainerCreateOptions = {}): Promise<ContainerCreateResponse> {\n    const { span, spanOptions } = createSpan(\"ContainerClient-create\", options.tracingOptions);\n    try {\n      // Spread operator in destructuring assignments,\n      // this will filter out unwanted properties from the response object into result object\n      return await this.containerContext.create({\n        ...options,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns true if the Azrue container resource represented by this client exists; false otherwise.\n   *\n   * NOTE: use this function with care since an existing container might be deleted by other clients or\n   * applications. Vice versa new containers with the same name might be added by other clients or\n   * applications after this function completes.\n   *\n   * @param {ContainerExistsOptions} [options={}]\n   * @returns {Promise<boolean>}\n   * @memberof ContainerClient\n   */\n  public async exists(options: ContainerExistsOptions = {}): Promise<boolean> {\n    const { span, spanOptions } = createSpan(\"ContainerClient-exists\", options.tracingOptions);\n    try {\n      await this.getProperties({\n        abortSignal: options.abortSignal,\n        tracingOptions: { ...options!.tracingOptions, spanOptions }\n      });\n      return true;\n    } catch (e) {\n      if (e.statusCode === 404) {\n        span.setStatus({\n          code: CanonicalCode.NOT_FOUND,\n          message: \"Expected exception when checking container existence\"\n        });\n        return false;\n      }\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a {@link BlobClient}\n   *\n   * @param {string} blobName A blob name\n   * @returns {BlobClient} A new BlobClient object for the given blob name.\n   * @memberof ContainerClient\n   */\n  public getBlobClient(blobName: string): BlobClient {\n    return new BlobClient(appendToURLPath(this.url, encodeURIComponent(blobName)), this.pipeline);\n  }\n\n  /**\n   * Creates an {@link AppendBlobClient}\n   *\n   * @param {string} blobName An append blob name\n   * @returns {AppendBlobClient}\n   * @memberof ContainerClient\n   */\n  public getAppendBlobClient(blobName: string): AppendBlobClient {\n    return new AppendBlobClient(\n      appendToURLPath(this.url, encodeURIComponent(blobName)),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a {@link BlockBlobClient}\n   *\n   * @param {string} blobName A block blob name\n   * @returns {BlockBlobClient}\n   * @memberof ContainerClient\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello world!\";\n   *\n   * const blockBlobClient = containerClient.getBlockBlobClient(\"<blob name>\");\n   * const uploadBlobResponse = await blockBlobClient.upload(content, content.length);\n   * ```\n   */\n  public getBlockBlobClient(blobName: string): BlockBlobClient {\n    return new BlockBlobClient(\n      appendToURLPath(this.url, encodeURIComponent(blobName)),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a {@link PageBlobClient}\n   *\n   * @param {string} blobName A page blob name\n   * @returns {PageBlobClient}\n   * @memberof ContainerClient\n   */\n  public getPageBlobClient(blobName: string): PageBlobClient {\n    return new PageBlobClient(\n      appendToURLPath(this.url, encodeURIComponent(blobName)),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Returns all user-defined metadata and system properties for the specified\n   * container. The data returned does not include the container's list of blobs.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-properties\n   *\n   * WARNING: The `metadata` object returned in the response will have its keys in lowercase, even if\n   * they originally contained uppercase characters. This differs from the metadata keys returned by\n   * the `listContainers` method of {@link BlobServiceClient} using the `includeMetadata` option, which\n   * will retain their original casing.\n   *\n   * @param {ContainerGetPropertiesOptions} [options] Options to Container Get Properties operation.\n   * @returns {Promise<ContainerGetPropertiesResponse>}\n   * @memberof ContainerClient\n   */\n  public async getProperties(\n    options: ContainerGetPropertiesOptions = {}\n  ): Promise<ContainerGetPropertiesResponse> {\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    const { span, spanOptions } = createSpan(\n      \"ContainerClient-getProperties\",\n      options.tracingOptions\n    );\n    try {\n      return await this.containerContext.getProperties({\n        abortSignal: options.abortSignal,\n        ...options.conditions,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Marks the specified container for deletion. The container and any blobs\n   * contained within it are later deleted during garbage collection.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-container\n   *\n   * @param {ContainerDeleteMethodOptions} [options] Options to Container Delete operation.\n   * @returns {Promise<ContainerDeleteResponse>}\n   * @memberof ContainerClient\n   */\n  public async delete(\n    options: ContainerDeleteMethodOptions = {}\n  ): Promise<ContainerDeleteResponse> {\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    if (\n      (options.conditions.ifMatch && options.conditions.ifMatch !== ETagNone) ||\n      (options.conditions.ifNoneMatch && options.conditions.ifNoneMatch !== ETagNone)\n    ) {\n      throw new RangeError(\n        \"the IfMatch and IfNoneMatch access conditions must have their default\\\n        values because they are ignored by the service\"\n      );\n    }\n\n    const { span, spanOptions } = createSpan(\"ContainerClient-delete\", options.tracingOptions);\n\n    try {\n      return await this.containerContext.deleteMethod({\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: options.conditions,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets one or more user-defined name-value pairs for the specified container.\n   *\n   * If no option provided, or no metadata defined in the parameter, the container\n   * metadata will be removed.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-metadata\n   *\n   * @param {Metadata} [metadata] Replace existing metadata with this value.\n   *                            If no value provided the existing metadata will be removed.\n   * @param {ContainerSetMetadataOptions} [options] Options to Container Set Metadata operation.\n   * @returns {Promise<ContainerSetMetadataResponse>}\n   * @memberof ContainerClient\n   */\n  public async setMetadata(\n    metadata?: Metadata,\n    options: ContainerSetMetadataOptions = {}\n  ): Promise<ContainerSetMetadataResponse> {\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    if (\n      options.conditions.ifUnmodifiedSince ||\n      (options.conditions.ifMatch && options.conditions.ifMatch !== ETagNone) ||\n      (options.conditions.ifNoneMatch && options.conditions.ifNoneMatch !== ETagNone)\n    ) {\n      throw new RangeError(\n        \"the IfUnmodifiedSince, IfMatch, and IfNoneMatch must have their default values\\\n        because they are ignored by the blob service\"\n      );\n    }\n\n    const { span, spanOptions } = createSpan(\"ContainerClient-setMetadata\", options.tracingOptions);\n\n    try {\n      return await this.containerContext.setMetadata({\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        metadata,\n        modifiedAccessConditions: options.conditions,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the permissions for the specified container. The permissions indicate\n   * whether container data may be accessed publicly.\n   *\n   * WARNING: JavaScript Date will potentially lose precision when parsing startsOn and expiresOn strings.\n   * For example, new Date(\"2018-12-31T03:44:23.8827891Z\").toISOString() will get \"2018-12-31T03:44:23.882Z\".\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-acl\n   *\n   * @param {ContainerGetAccessPolicyOptions} [options] Options to Container Get Access Policy operation.\n   * @returns {Promise<ContainerGetAccessPolicyResponse>}\n   * @memberof ContainerClient\n   */\n  public async getAccessPolicy(\n    options: ContainerGetAccessPolicyOptions = {}\n  ): Promise<ContainerGetAccessPolicyResponse> {\n    if (!options.conditions) {\n      options.conditions = {};\n    }\n\n    const { span, spanOptions } = createSpan(\n      \"ContainerClient-getAccessPolicy\",\n      options.tracingOptions\n    );\n\n    try {\n      const response = await this.containerContext.getAccessPolicy({\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.conditions,\n        spanOptions\n      });\n\n      const res: ContainerGetAccessPolicyResponse = {\n        _response: response._response,\n        blobPublicAccess: response.blobPublicAccess,\n        date: response.date,\n        etag: response.etag,\n        errorCode: response.errorCode,\n        lastModified: response.lastModified,\n        requestId: response.requestId,\n        clientRequestId: response.clientRequestId,\n        signedIdentifiers: [],\n        version: response.version\n      };\n\n      for (const identifier of response) {\n        let accessPolicy: any = undefined;\n        if (identifier.accessPolicy) {\n          accessPolicy = {\n            permissions: identifier.accessPolicy.permissions\n          };\n\n          if (identifier.accessPolicy.expiresOn) {\n            accessPolicy.expiresOn = new Date(identifier.accessPolicy.expiresOn);\n          }\n\n          if (identifier.accessPolicy.startsOn) {\n            accessPolicy.startsOn = new Date(identifier.accessPolicy.startsOn);\n          }\n        }\n\n        res.signedIdentifiers.push({\n          accessPolicy,\n          id: identifier.id\n        });\n      }\n\n      return res;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets the permissions for the specified container. The permissions indicate\n   * whether blobs in a container may be accessed publicly.\n   *\n   * When you set permissions for a container, the existing permissions are replaced.\n   * If no access or containerAcl provided, the existing container ACL will be\n   * removed.\n   *\n   * When you establish a stored access policy on a container, it may take up to 30 seconds to take effect.\n   * During this interval, a shared access signature that is associated with the stored access policy will\n   * fail with status code 403 (Forbidden), until the access policy becomes active.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-acl\n   *\n   * @param {PublicAccessType} [access] The level of public access to data in the container.\n   * @param {SignedIdentifier[]} [containerAcl] Array of elements each having a unique Id and details of the access policy.\n   * @param {ContainerSetAccessPolicyOptions} [options] Options to Container Set Access Policy operation.\n   * @returns {Promise<ContainerSetAccessPolicyResponse>}\n   * @memberof ContainerClient\n   */\n  public async setAccessPolicy(\n    access?: PublicAccessType,\n    containerAcl?: SignedIdentifier[],\n    options: ContainerSetAccessPolicyOptions = {}\n  ): Promise<ContainerSetAccessPolicyResponse> {\n    options.conditions = options.conditions || {};\n    const { span, spanOptions } = createSpan(\n      \"ContainerClient-setAccessPolicy\",\n      options.tracingOptions\n    );\n    try {\n      const acl: SignedIdentifierModel[] = [];\n      for (const identifier of containerAcl || []) {\n        acl.push({\n          accessPolicy: {\n            expiresOn: identifier.accessPolicy.expiresOn\n              ? truncatedISO8061Date(identifier.accessPolicy.expiresOn)\n              : \"\",\n            permissions: identifier.accessPolicy.permissions,\n            startsOn: identifier.accessPolicy.startsOn\n              ? truncatedISO8061Date(identifier.accessPolicy.startsOn)\n              : \"\"\n          },\n          id: identifier.id\n        });\n      }\n\n      return await this.containerContext.setAccessPolicy({\n        abortSignal: options.abortSignal,\n        access,\n        containerAcl: acl,\n        leaseAccessConditions: options.conditions,\n        modifiedAccessConditions: options.conditions,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Get a {@link BlobLeaseClient} that manages leases on the container.\n   *\n   * @param {string} [proposeLeaseId] Initial proposed lease Id.\n   * @returns {BlobLeaseClient} A new BlobLeaseClient object for managing leases on the container.\n   * @memberof ContainerClient\n   */\n  public getBlobLeaseClient(proposeLeaseId?: string): BlobLeaseClient {\n    return new BlobLeaseClient(this, proposeLeaseId);\n  }\n\n  /**\n   * Creates a new block blob, or updates the content of an existing block blob.\n   *\n   * Updating an existing block blob overwrites any existing metadata on the blob.\n   * Partial updates are not supported; the content of the existing blob is\n   * overwritten with the new content. To perform a partial update of a block blob's,\n   * use {@link BlockBlobClient.stageBlock} and {@link BlockBlobClient.commitBlockList}.\n   *\n   * This is a non-parallel uploading method, please use {@link BlockBlobClient.uploadFile},\n   * {@link BlockBlobClient.uploadStream} or {@link BlockBlobClient.uploadBrowserData} for better\n   * performance with concurrency uploading.\n   *\n   * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n   *\n   * @param {string} blobName Name of the block blob to create or update.\n   * @param {HttpRequestBody} body Blob, string, ArrayBuffer, ArrayBufferView or a function\n   *                               which returns a new Readable stream whose offset is from data source beginning.\n   * @param {number} contentLength Length of body in bytes. Use Buffer.byteLength() to calculate body length for a\n   *                               string including non non-Base64/Hex-encoded characters.\n   * @param {BlockBlobUploadOptions} [options] Options to configure the Block Blob Upload operation.\n   * @returns {Promise<{ blockBlobClient: BlockBlobClient; response: BlockBlobUploadResponse }>} Block Blob upload response data and the corresponding BlockBlobClient instance.\n   * @memberof ContainerClient\n   */\n  public async uploadBlockBlob(\n    blobName: string,\n    body: HttpRequestBody,\n    contentLength: number,\n    options: BlockBlobUploadOptions = {}\n  ): Promise<{ blockBlobClient: BlockBlobClient; response: BlockBlobUploadResponse }> {\n    const { span, spanOptions } = createSpan(\n      \"ContainerClient-uploadBlockBlob\",\n      options.tracingOptions\n    );\n    try {\n      const blockBlobClient = this.getBlockBlobClient(blobName);\n      const response = await blockBlobClient.upload(body, contentLength, {\n        ...options,\n        tracingOptions: { ...options!.tracingOptions, spanOptions }\n      });\n      return {\n        blockBlobClient,\n        response\n      };\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Marks the specified blob or snapshot for deletion. The blob is later deleted\n   * during garbage collection. Note that in order to delete a blob, you must delete\n   * all of its snapshots. You can delete both at the same time with the Delete\n   * Blob operation.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob\n   *\n   * @param {string} blobName\n   * @param {BlobDeleteOptions} [options] Options to Blob Delete operation.\n   * @returns {Promise<BlobDeleteResponse>} Block blob deletion response data.\n   * @memberof ContainerClient\n   */\n  public async deleteBlob(\n    blobName: string,\n    options: BlobDeleteOptions = {}\n  ): Promise<BlobDeleteResponse> {\n    const { span, spanOptions } = createSpan(\"ContainerClient-deleteBlob\", options.tracingOptions);\n    try {\n      const blobClient = this.getBlobClient(blobName);\n      return await blobClient.delete({\n        ...options,\n        tracingOptions: { ...options!.tracingOptions, spanOptions }\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * listBlobFlatSegment returns a single segment of blobs starting from the\n   * specified Marker. Use an empty Marker to start enumeration from the beginning.\n   * After getting a segment, process it, and then call listBlobsFlatSegment again\n   * (passing the the previously-returned Marker) to get the next segment.\n   * @see https://docs.microsoft.com/rest/api/storageservices/list-blobs\n   *\n   * @param {string} [marker] A string value that identifies the portion of the list to be returned with the next list operation.\n   * @param {ContainerListBlobsSegmentOptions} [options] Options to Container List Blob Flat Segment operation.\n   * @returns {Promise<ContainerListBlobFlatSegmentResponse>}\n   * @memberof ContainerClient\n   */\n  private async listBlobFlatSegment(\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {}\n  ): Promise<ContainerListBlobFlatSegmentResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ContainerClient-listBlobFlatSegment\",\n      options.tracingOptions\n    );\n    try {\n      return await this.containerContext.listBlobFlatSegment({\n        marker,\n        ...options,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * listBlobHierarchySegment returns a single segment of blobs starting from\n   * the specified Marker. Use an empty Marker to start enumeration from the\n   * beginning. After getting a segment, process it, and then call listBlobsHierarchicalSegment\n   * again (passing the the previously-returned Marker) to get the next segment.\n   * @see https://docs.microsoft.com/rest/api/storageservices/list-blobs\n   *\n   * @param {string} delimiter The charactor or string used to define the virtual hierarchy\n   * @param {string} [marker] A string value that identifies the portion of the list to be returned with the next list operation.\n   * @param {ContainerListBlobsSegmentOptions} [options] Options to Container List Blob Hierarchy Segment operation.\n   * @returns {Promise<ContainerListBlobHierarchySegmentResponse>}\n   * @memberof ContainerClient\n   */\n  private async listBlobHierarchySegment(\n    delimiter: string,\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {}\n  ): Promise<ContainerListBlobHierarchySegmentResponse> {\n    const { span, spanOptions } = createSpan(\n      \"ContainerClient-listBlobHierarchySegment\",\n      options.tracingOptions\n    );\n    try {\n      return await this.containerContext.listBlobHierarchySegment(delimiter, {\n        marker,\n        ...options,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ContainerListBlobFlatSegmentResponse\n   *\n   * @private\n   * @param {string} [marker] A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param {ContainerListBlobsSegmentOptions} [options] Options to list blobs operation.\n   * @returns {AsyncIterableIterator<ContainerListBlobFlatSegmentResponse>}\n   * @memberof ContainerClient\n   */\n  private async *listSegments(\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {}\n  ): AsyncIterableIterator<ContainerListBlobFlatSegmentResponse> {\n    let listBlobsFlatSegmentResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        listBlobsFlatSegmentResponse = await this.listBlobFlatSegment(marker, options);\n        marker = listBlobsFlatSegmentResponse.continuationToken;\n        yield await listBlobsFlatSegmentResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator of {@link BlobItem} objects\n   *\n   * @private\n   * @param {ContainerListBlobsSegmentOptions} [options] Options to list blobs operation.\n   * @returns {AsyncIterableIterator<BlobItem>}\n   * @memberof ContainerClient\n   */\n  private async *listItems(\n    options: ContainerListBlobsSegmentOptions = {}\n  ): AsyncIterableIterator<BlobItem> {\n    let marker: string | undefined;\n    for await (const listBlobsFlatSegmentResponse of this.listSegments(marker, options)) {\n      yield* listBlobsFlatSegmentResponse.segment.blobItems;\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the blobs\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the blobs in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * // Get the containerClient before you run these snippets,\n   * // Can be obtained from `blobServiceClient.getContainerClient(\"<your-container-name>\");`\n   * let i = 1;\n   * for await (const blob of containerClient.listBlobsFlat()) {\n   *   console.log(`Blob ${i++}: ${blob.name}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = containerClient.listBlobsFlat();\n   * let blobItem = await iter.next();\n   * while (!blobItem.done) {\n   *   console.log(`Blob ${i++}: ${blobItem.value.name}`);\n   *   blobItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of containerClient.listBlobsFlat().byPage({ maxPageSize: 20 })) {\n   *   for (const blob of response.segment.blobItems) {\n   *     console.log(`Blob ${i++}: ${blob.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = containerClient.listBlobsFlat().byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 blob names\n   * for (const blob of response.segment.blobItems) {\n   *   console.log(`Blob ${i++}: ${blob.name}`);\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   *\n   * // Passing next marker as continuationToken\n   *\n   * iterator = containerClient.listBlobsFlat().byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 blob names\n   * for (const blob of response.segment.blobItems) {\n   *   console.log(`Blob ${i++}: ${blob.name}`);\n   * }\n   * ```\n   *\n   * @param {ContainerListBlobsOptions} [options={}] Options to list blobs.\n   * @returns {PagedAsyncIterableIterator<BlobItem, ContainerListBlobFlatSegmentResponse>} An asyncIterableIterator that supports paging.\n   * @memberof ContainerClient\n   */\n  public listBlobsFlat(\n    options: ContainerListBlobsOptions = {}\n  ): PagedAsyncIterableIterator<BlobItem, ContainerListBlobFlatSegmentResponse> {\n    const include: ListBlobsIncludeItem[] = [];\n    if (options.includeCopy) {\n      include.push(\"copy\");\n    }\n    if (options.includeDeleted) {\n      include.push(\"deleted\");\n    }\n    if (options.includeMetadata) {\n      include.push(\"metadata\");\n    }\n    if (options.includeSnapshots) {\n      include.push(\"snapshots\");\n    }\n    if (options.includeUncommitedBlobs) {\n      include.push(\"uncommittedblobs\");\n    }\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    const updatedOptions: ContainerListBlobsSegmentOptions = {\n      ...options,\n      ...(include.length > 0 ? { include: include } : {})\n    };\n\n    // AsyncIterableIterator to iterate over blobs\n    const iter = this.listItems(updatedOptions);\n    return {\n      /**\n       * @member {Promise} [next] The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * @member {Symbol} [asyncIterator] The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * @member {Function} [byPage] Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listSegments(settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...updatedOptions\n        });\n      }\n    };\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ContainerListBlobHierarchySegmentResponse\n   *\n   * @private\n   * @param {string} delimiter The charactor or string used to define the virtual hierarchy\n   * @param {string} [marker] A string value that identifies the portion of\n   *                          the list of blobs to be returned with the next listing operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          listing operation did not return all blobs remaining to be listed\n   *                          with the current page. The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param {ContainerListBlobsSegmentOptions} [options] Options to list blobs operation.\n   * @returns {AsyncIterableIterator<ContainerListBlobHierarchySegmentResponse>}\n   * @memberof ContainerClient\n   */ private async *listHierarchySegments(\n    delimiter: string,\n    marker?: string,\n    options: ContainerListBlobsSegmentOptions = {}\n  ): AsyncIterableIterator<ContainerListBlobHierarchySegmentResponse> {\n    let listBlobsHierarchySegmentResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        listBlobsHierarchySegmentResponse = await this.listBlobHierarchySegment(\n          delimiter,\n          marker,\n          options\n        );\n        marker = listBlobsHierarchySegmentResponse.continuationToken;\n        yield await listBlobsHierarchySegmentResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for {@link BlobPrefix} and {@link BlobItem} objects.\n   *\n   * @private\n   * @param {string} delimiter The charactor or string used to define the virtual hierarchy\n   * @param {ContainerListBlobsSegmentOptions} [options] Options to list blobs operation.\n   * @returns {AsyncIterableIterator<{ kind: \"prefix\" } & BlobPrefix | { kind: \"blob\" } & BlobItem>}\n   * @memberof ContainerClient\n   */\n  private async *listItemsByHierarchy(\n    delimiter: string,\n    options: ContainerListBlobsSegmentOptions = {}\n  ): AsyncIterableIterator<({ kind: \"prefix\" } & BlobPrefix) | ({ kind: \"blob\" } & BlobItem)> {\n    let marker: string | undefined;\n    for await (const listBlobsHierarchySegmentResponse of this.listHierarchySegments(\n      delimiter,\n      marker,\n      options\n    )) {\n      const segment = listBlobsHierarchySegmentResponse.segment;\n      if (segment.blobPrefixes) {\n        for (const prefix of segment.blobPrefixes) {\n          yield { kind: \"prefix\", ...prefix };\n        }\n      }\n      for (const blob of segment.blobItems) {\n        yield { kind: \"blob\", ...blob };\n      }\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the blobs by hierarchy.\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the blobs by hierarchy in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * for await (const item of containerClient.listBlobsByHierarchy(\"/\")) {\n   *   if (item.kind === \"prefix\") {\n   *     console.log(`\\tBlobPrefix: ${item.name}`);\n   *   } else {\n   *     console.log(`\\tBlobItem: name - ${item.name}, last modified - ${item.properties.lastModified}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let iter = await containerClient.listBlobsByHierarchy(\"/\", { prefix: \"prefix1/\" });\n   * let entity = await iter.next();\n   * while (!entity.done) {\n   *   let item = entity.value;\n   *   if (item.kind === \"prefix\") {\n   *     console.log(`\\tBlobPrefix: ${item.name}`);\n   *   } else {\n   *     console.log(`\\tBlobItem: name - ${item.name}, last modified - ${item.properties.lastModified}`);\n   *   }\n   *   entity = await iter.next();\n   * }\n   * ```js\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * console.log(\"Listing blobs by hierarchy by page\");\n   * for await (const response of containerClient.listBlobsByHierarchy(\"/\").byPage()) {\n   *   const segment = response.segment;\n   *   if (segment.blobPrefixes) {\n   *     for (const prefix of segment.blobPrefixes) {\n   *       console.log(`\\tBlobPrefix: ${prefix.name}`);\n   *     }\n   *   }\n   *   for (const blob of response.segment.blobItems) {\n   *     console.log(`\\tBlobItem: name - ${blob.name}, last modified - ${blob.properties.lastModified}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a max page size:\n   *\n   * ```js\n   * console.log(\"Listing blobs by hierarchy by page, specifying a prefix and a max page size\");\n   *\n   * let i = 1;\n   * for await (const response of containerClient.listBlobsByHierarchy(\"/\", { prefix: \"prefix2/sub1/\"}).byPage({ maxPageSize: 2 })) {\n   *   console.log(`Page ${i++}`);\n   *   const segment = response.segment;\n   *\n   *   if (segment.blobPrefixes) {\n   *     for (const prefix of segment.blobPrefixes) {\n   *       console.log(`\\tBlobPrefix: ${prefix.name}`);\n   *     }\n   *   }\n   *\n   *   for (const blob of response.segment.blobItems) {\n   *     console.log(`\\tBlobItem: name - ${blob.name}, last modified - ${blob.properties.lastModified}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param {string} delimiter The charactor or string used to define the virtual hierarchy\n   * @param {ContainerListBlobsOptions} [options={}] Options to list blobs operation.\n   * @returns {(PagedAsyncIterableIterator<\n   *   { kind: \"prefix\" } & BlobPrefix | { kind: \"blob\" } & BlobItem,\n   *     ContainerListBlobHierarchySegmentResponse\n   *   >)}\n   * @memberof ContainerClient\n   */\n  public listBlobsByHierarchy(\n    delimiter: string,\n    options: ContainerListBlobsOptions = {}\n  ): PagedAsyncIterableIterator<\n    ({ kind: \"prefix\" } & BlobPrefix) | ({ kind: \"blob\" } & BlobItem),\n    ContainerListBlobHierarchySegmentResponse\n  > {\n    const include: ListBlobsIncludeItem[] = [];\n    if (options.includeCopy) {\n      include.push(\"copy\");\n    }\n    if (options.includeDeleted) {\n      include.push(\"deleted\");\n    }\n    if (options.includeMetadata) {\n      include.push(\"metadata\");\n    }\n    if (options.includeSnapshots) {\n      include.push(\"snapshots\");\n    }\n    if (options.includeUncommitedBlobs) {\n      include.push(\"uncommittedblobs\");\n    }\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    const updatedOptions: ContainerListBlobsSegmentOptions = {\n      ...options,\n      ...(include.length > 0 ? { include: include } : {})\n    };\n    // AsyncIterableIterator to iterate over blob prefixes and blobs\n    const iter = this.listItemsByHierarchy(delimiter, updatedOptions);\n    return {\n      /**\n       * @member {Promise} [next] The next method, part of the iteration protocol\n       */\n      async next() {\n        return iter.next();\n      },\n      /**\n       * @member {Symbol} [asyncIterator] The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * @member {Function} [byPage] Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listHierarchySegments(delimiter, settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...updatedOptions\n        });\n      }\n    };\n  }\n\n  private getContainerNameFromUrl(): string {\n    let containerName;\n    try {\n      //  URL may look like the following\n      // \"https://myaccount.blob.core.windows.net/mycontainer?sasString\";\n      // \"https://myaccount.blob.core.windows.net/mycontainer\";\n      // IPv4/IPv6 address hosts, Endpoints - `http://127.0.0.1:10000/devstoreaccount1/containername`\n      // http://localhost:10001/devstoreaccount1/containername\n\n      const parsedUrl = URLBuilder.parse(this.url);\n\n      if (parsedUrl.getHost()!.split(\".\")[1] === \"blob\") {\n        // \"https://myaccount.blob.core.windows.net/containername\".\n        // .getPath() -> /containername\n        containerName = parsedUrl.getPath()!.split(\"/\")[1];\n      } else {\n        // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/containername\n        // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/containername\n        // .getPath() -> /devstoreaccount1/containername\n        containerName = parsedUrl.getPath()!.split(\"/\")[2];\n      }\n\n      // decode the encoded containerName - to get all the special characters that might be present in it\n      containerName = decodeURIComponent(containerName);\n\n      if (!containerName) {\n        throw new Error(\"Provided containerName is invalid.\");\n      }\n\n      return containerName;\n    } catch (error) {\n      throw new Error(\"Unable to extract containerName with provided information.\");\n    }\n  }\n}\n", "import { ServiceSubmitBatchResponseModel } from \"./generatedModels\";\nimport { streamToBuffer2 } from \"./utils/utils.node\";\nimport { BATCH_MAX_PAYLOAD_IN_BYTES } from \"./utils/constants\";\n\nexport async function getBodyAsText(\n  batchResponse: ServiceSubmitBatchResponseModel\n): Promise<string> {\n  let buffer = Buffer.alloc(BATCH_MAX_PAYLOAD_IN_BYTES);\n\n  let responseLength = await streamToBuffer2(\n    batchResponse.readableStreamBody as NodeJS.ReadableStream,\n    buffer\n  );\n\n  // Slice the buffer to trim the empty ending.\n  buffer = buffer.slice(0, responseLength);\n\n  return buffer.toString();\n}\n\nexport function utf8ByteLength(str: string): number {\n  return Buffer.byteLength(str);\n}\n", "import { HttpHeaders } from \"@azure/core-http\";\n\nimport { ServiceSubmitBatchResponseModel } from \"./generatedModels\";\nimport {\n  HTTP_VERSION_1_1,\n  HTTP_LINE_ENDING,\n  HeaderConstants,\n  HTTPURLConnection\n} from \"./utils/constants\";\nimport { getBodyAsText } from \"./BatchUtils\";\nimport { BatchSubRequest } from \"./BlobBatch\";\nimport { BatchSubResponse, ParsedBatchResponse } from \"./BatchResponse\";\n\nconst HTTP_HEADER_DELIMITER = \": \";\nconst SPACE_DELIMITER = \" \";\nconst NOT_FOUND = -1;\n\n/**\n * Util class for parsing batch response.\n */\nexport class BatchResponseParser {\n  private readonly batchResponse: ServiceSubmitBatchResponseModel;\n  private readonly responseBatchBoundary: string;\n  private readonly perResponsePrefix: string;\n  private readonly batchResponseEnding: string;\n  private readonly subRequests: Map<number, BatchSubRequest>;\n\n  constructor(\n    batchResponse: ServiceSubmitBatchResponseModel,\n    subRequests: Map<number, BatchSubRequest>\n  ) {\n    if (!batchResponse || !batchResponse.contentType) {\n      // In special case(reported), server may return invalid content-type which could not be parsed.\n      throw new RangeError(\"batchResponse is malformed or doesn't contain valid content-type.\");\n    }\n\n    if (!subRequests || subRequests.size === 0) {\n      // This should be prevent during coding.\n      throw new RangeError(\"Invalid state: subRequests is not provided or size is 0.\");\n    }\n\n    this.batchResponse = batchResponse;\n    this.subRequests = subRequests;\n    this.responseBatchBoundary = this.batchResponse.contentType!.split(\"=\")[1];\n    this.perResponsePrefix = `--${this.responseBatchBoundary}${HTTP_LINE_ENDING}`;\n    this.batchResponseEnding = `--${this.responseBatchBoundary}--`;\n  }\n\n  // For example of response, please refer to https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#response\n  public async parseBatchResponse(): Promise<ParsedBatchResponse> {\n    // When logic reach here, suppose batch request has already succeeded with 202, so we can further parse\n    // sub request's response.\n    if (this.batchResponse._response.status != HTTPURLConnection.HTTP_ACCEPTED) {\n      throw new Error(\n        `Invalid state: batch request failed with status: '${this.batchResponse._response.status}'.`\n      );\n    }\n\n    let responseBodyAsText = await getBodyAsText(this.batchResponse);\n\n    let subResponses = responseBodyAsText\n      .split(this.batchResponseEnding)[0] // string after ending is useless\n      .split(this.perResponsePrefix)\n      .slice(1); // string before first response boundary is useless\n    let subResponseCount = subResponses.length;\n\n    // Defensive coding in case of potential error parsing.\n    // Note: subResponseCount == 1 is special case where sub request is invalid.\n    // We try to prevent such cases through early validation, e.g. validate sub request count >= 1.\n    // While in unexpected sub request invalid case, we allow sub response to be parsed and return to user.\n    if (subResponseCount != this.subRequests.size && subResponseCount != 1) {\n      throw new Error(\"Invalid state: sub responses' count is not equal to sub requests' count.\");\n    }\n\n    let deserializedSubResponses: Array<BatchSubResponse> = new Array(subResponseCount);\n    let subResponsesSucceededCount: number = 0;\n    let subResponsesFailedCount: number = 0;\n\n    // Parse sub subResponses.\n    for (let index = 0; index < subResponseCount; index++) {\n      const subResponse = subResponses[index];\n      deserializedSubResponses[index] = {} as BatchSubResponse;\n      let deserializedSubResponse = deserializedSubResponses[index];\n      deserializedSubResponse.headers = new HttpHeaders();\n\n      let responseLines = subResponse.split(`${HTTP_LINE_ENDING}`);\n      let subRespHeaderStartFound = false;\n      let subRespHeaderEndFound = false;\n      let subRespFailed = false;\n      let contentId = NOT_FOUND;\n\n      for (const responseLine of responseLines) {\n        if (!subRespHeaderStartFound) {\n          // Convention line to indicate content ID\n          if (responseLine.startsWith(HeaderConstants.CONTENT_ID)) {\n            contentId = parseInt(responseLine.split(HTTP_HEADER_DELIMITER)[1]);\n          }\n\n          // Http version line with status code indicates the start of sub request's response.\n          // Example: HTTP/1.1 202 Accepted\n          if (responseLine.startsWith(HTTP_VERSION_1_1)) {\n            subRespHeaderStartFound = true;\n\n            let tokens = responseLine.split(SPACE_DELIMITER);\n            deserializedSubResponse.status = parseInt(tokens[1]);\n            deserializedSubResponse.statusMessage = tokens.slice(2).join(SPACE_DELIMITER);\n          }\n\n          continue; // Skip convention headers not specifically for sub request i.e. Content-Type: application/http and Content-ID: *\n        }\n\n        if (responseLine.trim() === \"\") {\n          // Sub response's header start line already found, and the first empty line indicates header end line found.\n          if (!subRespHeaderEndFound) {\n            subRespHeaderEndFound = true;\n          }\n\n          continue; // Skip empty line\n        }\n\n        // Note: when code reach here, it indicates subRespHeaderStartFound == true\n        if (!subRespHeaderEndFound) {\n          if (responseLine.indexOf(HTTP_HEADER_DELIMITER) === -1) {\n            // Defensive coding to prevent from missing valuable lines.\n            throw new Error(\n              `Invalid state: find non-empty line '${responseLine}' without HTTP header delimiter '${HTTP_HEADER_DELIMITER}'.`\n            );\n          }\n\n          // Parse headers of sub response.\n          let tokens = responseLine.split(HTTP_HEADER_DELIMITER);\n          deserializedSubResponse.headers.set(tokens[0], tokens[1]);\n          if (tokens[0] === HeaderConstants.X_MS_ERROR_CODE) {\n            deserializedSubResponse.errorCode = tokens[1];\n            subRespFailed = true;\n          }\n        } else {\n          // Assemble body of sub response.\n          if (!deserializedSubResponse.bodyAsText) {\n            deserializedSubResponse.bodyAsText = \"\";\n          }\n\n          deserializedSubResponse.bodyAsText += responseLine;\n        }\n      } // Inner for end\n\n      if (contentId != NOT_FOUND) {\n        deserializedSubResponse._request = this.subRequests.get(contentId)!;\n      }\n\n      if (subRespFailed) {\n        subResponsesFailedCount++;\n      } else {\n        subResponsesSucceededCount++;\n      }\n    }\n\n    return {\n      subResponses: deserializedSubResponses,\n      subResponsesSucceededCount: subResponsesSucceededCount,\n      subResponsesFailedCount: subResponsesFailedCount\n    };\n  }\n}\n", "enum MutexLockStatus {\n  LOCKED,\n  UNLOCKED\n}\n\ntype Callback = (...args: any[]) => any;\n\n/**\n * An async mutex lock.\n *\n * @export\n * @class Mutex\n */\nexport class Mutex {\n  /**\n   * Lock for a specific key. If the lock has been acquired by another customer, then\n   * will wait until getting the lock.\n   *\n   * @static\n   * @param {string} key lock key\n   * @returns {Promise<void>}\n   * @memberof Mutex\n   */\n  public static async lock(key: string): Promise<void> {\n    return new Promise<void>((resolve) => {\n      if (this.keys[key] === undefined || this.keys[key] === MutexLockStatus.UNLOCKED) {\n        this.keys[key] = MutexLockStatus.LOCKED;\n        resolve();\n      } else {\n        this.onUnlockEvent(key, () => {\n          this.keys[key] = MutexLockStatus.LOCKED;\n          resolve();\n        });\n      }\n    });\n  }\n\n  /**\n   * Unlock a key.\n   *\n   * @static\n   * @param {string} key\n   * @returns {Promise<void>}\n   * @memberof Mutex\n   */\n  public static async unlock(key: string): Promise<void> {\n    return new Promise<void>((resolve) => {\n      if (this.keys[key] === MutexLockStatus.LOCKED) {\n        this.emitUnlockEvent(key);\n      }\n      delete this.keys[key];\n      resolve();\n    });\n  }\n\n  private static keys: { [key: string]: MutexLockStatus } = {};\n  private static listeners: { [key: string]: Callback[] } = {};\n\n  private static onUnlockEvent(key: string, handler: Callback) {\n    if (this.listeners[key] === undefined) {\n      this.listeners[key] = [handler];\n    } else {\n      this.listeners[key].push(handler);\n    }\n  }\n\n  private static emitUnlockEvent(key: string) {\n    if (this.listeners[key] !== undefined && this.listeners[key].length > 0) {\n      const handler = this.listeners[key].shift();\n      setImmediate(() => {\n        handler!.call(this);\n      });\n    }\n  }\n}\n", "import {\n  BaseRequestPolicy,\n  deserializationPolicy,\n  generateUuid,\n  HttpHeaders,\n  HttpOperationResponse,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  WebResource,\n  TokenCredential,\n  isTokenCredential,\n  bearerTokenAuthenticationPolicy,\n  isNode\n} from \"@azure/core-http\";\nimport { CanonicalCode } from \"@opentelemetry/api\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { BlobClient, BlobDeleteOptions, BlobSetTierOptions } from \"./Clients\";\nimport { AccessTier } from \"./generatedModels\";\nimport { Mutex } from \"./utils/Mutex\";\nimport { Pipeline } from \"./Pipeline\";\nimport { getURLPath, getURLPathAndQuery, iEqual } from \"./utils/utils.common\";\nimport {\n  HeaderConstants,\n  BATCH_MAX_REQUEST,\n  HTTP_VERSION_1_1,\n  HTTP_LINE_ENDING,\n  StorageOAuthScopes\n} from \"./utils/constants\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { createSpan } from \"./utils/tracing\";\n\n/**\n * A request associated with a batch operation.\n */\nexport interface BatchSubRequest {\n  /**\n   * The URL of the resource to request operation.\n   *\n   * @type {string}\n   * @memberof BatchSubRequest\n   */\n  url: string;\n\n  /**\n   * The credential used for sub request.\n   * Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the @azure/identity package to authenticate requests to the service.\n   * You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   *\n   * @type {StorageSharedKeyCredential | AnonymousCredential | TokenCredential}\n   * @memberof BatchSubRequest\n   */\n  credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential;\n}\n\n/**\n * A BlobBatch represents an aggregated set of operations on blobs.\n * Currently, only `delete` and `setAccessTier` are supported.\n *\n * @export\n * @class BlobBatch\n */\nexport class BlobBatch {\n  private batchRequest: InnerBatchRequest;\n  private readonly batch: string = \"batch\";\n  private batchType: \"delete\" | \"setAccessTier\" | undefined;\n\n  constructor() {\n    this.batchRequest = new InnerBatchRequest();\n  }\n\n  /**\n   * Get the value of Content-Type for a batch request.\n   * The value must be multipart/mixed with a batch boundary.\n   * Example: multipart/mixed; boundary=batch_a81786c8-e301-4e42-a729-a32ca24ae252\n   */\n  public getMultiPartContentType(): string {\n    return this.batchRequest.getMultipartContentType();\n  }\n\n  /**\n   * Get assembled HTTP request body for sub requests.\n   */\n  public getHttpRequestBody(): string {\n    return this.batchRequest.getHttpRequestBody();\n  }\n\n  /**\n   * Get sub requests that are added into the batch request.\n   */\n  public getSubRequests(): Map<number, BatchSubRequest> {\n    return this.batchRequest.getSubRequests();\n  }\n\n  private async addSubRequestInternal(\n    subRequest: BatchSubRequest,\n    assembleSubRequestFunc: () => Promise<void>\n  ): Promise<void> {\n    await Mutex.lock(this.batch);\n\n    try {\n      this.batchRequest.preAddSubRequest(subRequest);\n      await assembleSubRequestFunc();\n      this.batchRequest.postAddSubRequest(subRequest);\n    } finally {\n      await Mutex.unlock(this.batch);\n    }\n  }\n\n  private setBatchType(batchType: \"delete\" | \"setAccessTier\"): void {\n    if (!this.batchType) {\n      this.batchType = batchType;\n    }\n    if (this.batchType !== batchType) {\n      throw new RangeError(\n        `BlobBatch only supports one operation type per batch and it already is being used for ${this.batchType} operations.`\n      );\n    }\n  }\n\n  /**\n   * The deleteBlob operation marks the specified blob or snapshot for deletion.\n   * The blob is later deleted during garbage collection.\n   * Only one kind of operation is allowed per batch request.\n   *\n   * Note that in order to delete a blob, you must delete all of its snapshots.\n   * You can delete both at the same time. See [delete operation details](https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob).\n   * The operation will be authenticated and authorized with specified credential.\n   * See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param {string} url The url of the blob resource to delete.\n   * @param {StorageSharedKeyCredential | AnonymousCredential | TokenCredential} credential Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the @azure/identity package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param {BlobDeleteOptions} [options]\n   * @returns {Promise<void>}\n   * @memberof BlobBatch\n   */\n  public async deleteBlob(\n    url: string,\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    options?: BlobDeleteOptions\n  ): Promise<void>;\n\n  /**\n   * The deleteBlob operation marks the specified blob or snapshot for deletion.\n   * The blob is later deleted during garbage collection.\n   * Only one kind of operation is allowed per batch request.\n   *\n   * Note that in order to delete a blob, you must delete all of its snapshots.\n   * You can delete both at the same time. See [delete operation details](https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob).\n   * The operation will be authenticated and authorized with specified credential.\n   * See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param {BlobClient} blobClient The BlobClient.\n   * @param {BlobDeleteOptions} [options]\n   * @returns {Promise<void>}\n   * @memberof BlobBatch\n   */\n  public async deleteBlob(blobClient: BlobClient, options?: BlobDeleteOptions): Promise<void>;\n\n  public async deleteBlob(\n    urlOrBlobClient: string | BlobClient,\n    credentialOrOptions:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | BlobDeleteOptions\n      | undefined,\n    options?: BlobDeleteOptions\n  ): Promise<void> {\n    let url: string;\n    let credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential;\n\n    if (\n      typeof urlOrBlobClient === \"string\" &&\n      ((isNode && credentialOrOptions instanceof StorageSharedKeyCredential) ||\n        credentialOrOptions instanceof AnonymousCredential ||\n        isTokenCredential(credentialOrOptions))\n    ) {\n      // First overload\n      url = urlOrBlobClient;\n      credential = credentialOrOptions;\n    } else if (urlOrBlobClient instanceof BlobClient) {\n      // Second overload\n      url = urlOrBlobClient.url;\n      credential = urlOrBlobClient.credential;\n      options = credentialOrOptions as BlobDeleteOptions;\n    } else {\n      throw new RangeError(\n        \"Invalid arguments. Either url and credential, or BlobClient need be provided.\"\n      );\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    const { span, spanOptions } = createSpan(\n      \"BatchDeleteRequest-addSubRequest\",\n      options.tracingOptions\n    );\n\n    try {\n      this.setBatchType(\"delete\");\n      await this.addSubRequestInternal(\n        {\n          url: url,\n          credential: credential\n        },\n        async () => {\n          await new BlobClient(url, this.batchRequest.createPipeline(credential)).delete({\n            ...options,\n            tracingOptions: { ...options!.tracingOptions, spanOptions }\n          });\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * The setBlobAccessTier operation sets the tier on a blob.\n   * The operation is allowed on block blobs in a blob storage or general purpose v2 account.\n   * Only one kind of operation is allowed per batch request.\n   *\n   * A block blob's tier determines Hot/Cool/Archive storage type.\n   * This operation does not update the blob's ETag.\n   * For detailed information about block blob level tiering\n   * see [hot, cool, and archive access tiers](https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers).\n   * The operation will be authenticated and authorized\n   * with specified credential. See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param {string} url The url of the blob resource to delete.\n   * @param {StorageSharedKeyCredential | AnonymousCredential | TokenCredential} credential Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the @azure/identity package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param {AccessTier} tier\n   * @param {BlobSetTierOptions} [options]\n   * @returns {Promise<void>}\n   * @memberof BlobBatch\n   */\n  public async setBlobAccessTier(\n    url: string,\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    tier: AccessTier,\n    options?: BlobSetTierOptions\n  ): Promise<void>;\n\n  /**\n   * The setBlobAccessTier operation sets the tier on a blob.\n   * The operation is allowed on block blobs in a blob storage or general purpose v2 account.\n   * Only one kind of operation is allowed per batch request.\n   *\n   * A block blob's tier determines Hot/Cool/Archive storage type.\n   * This operation does not update the blob's ETag.\n   * For detailed information about block blob level tiering\n   * see [hot, cool, and archive access tiers](https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers).\n   * The operation will be authenticated and authorized\n   * with specified credential. See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param {BlobClient} blobClient The BlobClient.\n   * @param {AccessTier} tier\n   * @param {BlobSetTierOptions} [options]\n   * @returns {Promise<void>}\n   * @memberof BlobBatch\n   */\n  public async setBlobAccessTier(\n    blobClient: BlobClient,\n    tier: AccessTier,\n    options?: BlobSetTierOptions\n  ): Promise<void>;\n\n  public async setBlobAccessTier(\n    urlOrBlobClient: string | BlobClient,\n    credentialOrTier:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | AccessTier,\n    tierOrOptions?: AccessTier | BlobSetTierOptions,\n    options?: BlobSetTierOptions\n  ): Promise<void> {\n    let url: string;\n    let credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential;\n    let tier: AccessTier;\n\n    if (\n      typeof urlOrBlobClient === \"string\" &&\n      ((isNode && credentialOrTier instanceof StorageSharedKeyCredential) ||\n        credentialOrTier instanceof AnonymousCredential ||\n        isTokenCredential(credentialOrTier))\n    ) {\n      // First overload\n      url = urlOrBlobClient;\n      credential = credentialOrTier as\n        | StorageSharedKeyCredential\n        | AnonymousCredential\n        | TokenCredential;\n      tier = tierOrOptions as AccessTier;\n    } else if (urlOrBlobClient instanceof BlobClient) {\n      // Second overload\n      url = urlOrBlobClient.url;\n      credential = urlOrBlobClient.credential;\n      tier = credentialOrTier as AccessTier;\n      options = tierOrOptions as BlobSetTierOptions;\n    } else {\n      throw new RangeError(\n        \"Invalid arguments. Either url and credential, or BlobClient need be provided.\"\n      );\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    const { span, spanOptions } = createSpan(\n      \"BatchSetTierRequest-addSubRequest\",\n      options.tracingOptions\n    );\n\n    try {\n      this.setBatchType(\"setAccessTier\");\n      await this.addSubRequestInternal(\n        {\n          url: url,\n          credential: credential\n        },\n        async () => {\n          await new BlobClient(\n            url,\n            this.batchRequest.createPipeline(credential)\n          ).setAccessTier(tier, {\n            ...options,\n            tracingOptions: { ...options!.tracingOptions, spanOptions }\n          });\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n\n/**\n * Inner batch request class which is responsible for assembling and serializing sub requests.\n * See https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#request-body for how requests are assembled.\n */\nclass InnerBatchRequest {\n  private operationCount: number;\n  private body: string;\n  private subRequests: Map<number, BatchSubRequest>;\n  private readonly boundary: string;\n  private readonly subRequestPrefix: string;\n  private readonly multipartContentType: string;\n  private readonly batchRequestEnding: string;\n\n  constructor() {\n    this.operationCount = 0;\n    this.body = \"\";\n\n    let tempGuid = generateUuid();\n\n    // batch_{batchid}\n    this.boundary = `batch_${tempGuid}`;\n    // --batch_{batchid}\n    // Content-Type: application/http\n    // Content-Transfer-Encoding: binary\n    this.subRequestPrefix = `--${this.boundary}${HTTP_LINE_ENDING}${HeaderConstants.CONTENT_TYPE}: application/http${HTTP_LINE_ENDING}${HeaderConstants.CONTENT_TRANSFER_ENCODING}: binary`;\n    // multipart/mixed; boundary=batch_{batchid}\n    this.multipartContentType = `multipart/mixed; boundary=${this.boundary}`;\n    // --batch_{batchid}--\n    this.batchRequestEnding = `--${this.boundary}--`;\n\n    this.subRequests = new Map();\n  }\n\n  /**\n   * Create pipeline to assemble sub requests. The idea here is to use exising\n   * credential and serialization/deserialization components, with additional policies to\n   * filter unnecessary headers, assemble sub requests into request's body\n   * and intercept request from going to wire.\n   * @param {StorageSharedKeyCredential | AnonymousCredential | TokenCredential} credential  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the @azure/identity package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   */\n  public createPipeline(\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential\n  ): Pipeline {\n    const isAnonymousCreds = credential instanceof AnonymousCredential;\n    const policyFactoryLength = 3 + (isAnonymousCreds ? 0 : 1); // [deserilizationPolicy, BatchHeaderFilterPolicyFactory, (Optional)Credential, BatchRequestAssemblePolicyFactory]\n    let factories: RequestPolicyFactory[] = new Array(policyFactoryLength);\n\n    factories[0] = deserializationPolicy(); // Default deserializationPolicy is provided by protocol layer\n    factories[1] = new BatchHeaderFilterPolicyFactory(); // Use batch header filter policy to exclude unnecessary headers\n    if (!isAnonymousCreds) {\n      factories[2] = isTokenCredential(credential)\n        ? bearerTokenAuthenticationPolicy(credential, StorageOAuthScopes)\n        : credential;\n    }\n    factories[policyFactoryLength - 1] = new BatchRequestAssemblePolicyFactory(this); // Use batch assemble policy to assemble request and intercept request from going to wire\n\n    return new Pipeline(factories, {});\n  }\n\n  public appendSubRequestToBody(request: WebResource) {\n    // Start to assemble sub request\n    this.body += [\n      this.subRequestPrefix, // sub request constant prefix\n      `${HeaderConstants.CONTENT_ID}: ${this.operationCount}`, // sub request's content ID\n      \"\", // empty line after sub request's content ID\n      `${request.method.toString()} ${getURLPathAndQuery(\n        request.url\n      )} ${HTTP_VERSION_1_1}${HTTP_LINE_ENDING}` // sub request start line with method\n    ].join(HTTP_LINE_ENDING);\n\n    for (const header of request.headers.headersArray()) {\n      this.body += `${header.name}: ${header.value}${HTTP_LINE_ENDING}`;\n    }\n\n    this.body += HTTP_LINE_ENDING; // sub request's headers need be ending with an empty line\n    // No body to assemble for current batch request support\n    // End to assemble sub request\n  }\n\n  public preAddSubRequest(subRequest: BatchSubRequest) {\n    if (this.operationCount >= BATCH_MAX_REQUEST) {\n      throw new RangeError(`Cannot exceed ${BATCH_MAX_REQUEST} sub requests in a single batch`);\n    }\n\n    // Fast fail if url for sub request is invalid\n    const path = getURLPath(subRequest.url);\n    if (!path || path == \"\") {\n      throw new RangeError(`Invalid url for sub request: '${subRequest.url}'`);\n    }\n  }\n\n  public postAddSubRequest(subRequest: BatchSubRequest) {\n    this.subRequests.set(this.operationCount, subRequest);\n    this.operationCount++;\n  }\n\n  // Return the http request body with assembling the ending line to the sub request body.\n  public getHttpRequestBody(): string {\n    return `${this.body}${this.batchRequestEnding}${HTTP_LINE_ENDING}`;\n  }\n\n  public getMultipartContentType(): string {\n    return this.multipartContentType;\n  }\n\n  public getSubRequests(): Map<number, BatchSubRequest> {\n    return this.subRequests;\n  }\n}\n\nclass BatchRequestAssemblePolicy extends BaseRequestPolicy {\n  private batchRequest: InnerBatchRequest;\n  private readonly dummyResponse: HttpOperationResponse = {\n    request: new WebResource(),\n    status: 200,\n    headers: new HttpHeaders()\n  };\n\n  constructor(\n    batchRequest: InnerBatchRequest,\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions\n  ) {\n    super(nextPolicy, options);\n\n    this.batchRequest = batchRequest;\n  }\n\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    await this.batchRequest.appendSubRequestToBody(request);\n\n    return this.dummyResponse; // Intercept request from going to wire\n  }\n}\n\nclass BatchRequestAssemblePolicyFactory implements RequestPolicyFactory {\n  private batchRequest: InnerBatchRequest;\n\n  constructor(batchRequest: InnerBatchRequest) {\n    this.batchRequest = batchRequest;\n  }\n\n  public create(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions\n  ): BatchRequestAssemblePolicy {\n    return new BatchRequestAssemblePolicy(this.batchRequest, nextPolicy, options);\n  }\n}\n\nclass BatchHeaderFilterPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    let xMsHeaderName = \"\";\n\n    for (const header of request.headers.headersArray()) {\n      if (iEqual(header.name, HeaderConstants.X_MS_VERSION)) {\n        xMsHeaderName = header.name;\n      }\n    }\n\n    if (xMsHeaderName !== \"\") {\n      request.headers.remove(xMsHeaderName); // The subrequests should not have the x-ms-version header.\n    }\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n\nclass BatchHeaderFilterPolicyFactory implements RequestPolicyFactory {\n  constructor() {}\n\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): BatchHeaderFilterPolicy {\n    return new BatchHeaderFilterPolicy(nextPolicy, options);\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {\n  AccessTier,\n  ServiceSubmitBatchHeaders,\n  ServiceSubmitBatchOptionalParamsModel,\n  ServiceSubmitBatchResponseModel\n} from \"./generatedModels\";\nimport { ParsedBatchResponse } from \"./BatchResponse\";\nimport { BatchResponseParser } from \"./BatchResponseParser\";\nimport { utf8ByteLength } from \"./BatchUtils\";\nimport { BlobBatch } from \"./BlobBatch\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { CanonicalCode } from \"@opentelemetry/api\";\nimport { createSpan } from \"./utils/tracing\";\nimport { HttpResponse, TokenCredential } from \"@azure/core-http\";\nimport { Service } from \"./generated/src/operations\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { CommonOptions } from \"./StorageClient\";\nimport { BlobDeleteOptions, BlobClient, BlobSetTierOptions } from \"./Clients\";\nimport { StorageClientContext } from \"./generated/src/storageClientContext\";\nimport { Pipeline, StoragePipelineOptions, newPipeline } from \"./Pipeline\";\n\n/**\n * Options to configure the Service - Submit Batch Optional Params.\n *\n * @export\n * @interface BlobBatchSubmitBatchOptionalParams\n */\nexport interface BlobBatchSubmitBatchOptionalParams\n  extends ServiceSubmitBatchOptionalParamsModel,\n    CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof BlobBatchSubmitBatchOptionalParams\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Contains response data for blob batch operations.\n */\nexport declare type BlobBatchSubmitBatchResponse = ParsedBatchResponse &\n  ServiceSubmitBatchHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ServiceSubmitBatchHeaders;\n    };\n  };\n\n/**\n * Contains response data for the {@link deleteBlobs} operation.\n */\nexport declare type BlobBatchDeleteBlobsResponse = BlobBatchSubmitBatchResponse;\n\n/**\n * Contains response data for the {@link setBlobsAccessTier} operation.\n */\nexport declare type BlobBatchSetBlobsAccessTierResponse = BlobBatchSubmitBatchResponse;\n\n/**\n * A BlobBatchClient allows you to make batched requests to the Azure Storage Blob service.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch\n */\nexport class BlobBatchClient {\n  private _serviceContext: Service;\n\n  /**\n   * Creates an instance of BlobBatchClient.\n   *\n   * @param {string} url A url pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param {StorageSharedKeyCredential | AnonymousCredential | TokenCredential} credential  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the @azure/identity package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param {StoragePipelineOptions} [options] Options to configure the HTTP pipeline.\n   * @memberof BlobBatchClient\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    options?: StoragePipelineOptions\n  );\n  /**\n   * Creates an instance of BlobBatchClient.\n   *\n   * @param {string} url A url pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param {Pipeline} pipeline Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof BlobBatchClient\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    url: string,\n    credentialOrPipeline?:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | Pipeline,\n    options?: StoragePipelineOptions\n  ) {\n    let pipeline: Pipeline;\n    if (credentialOrPipeline instanceof Pipeline) {\n      pipeline = credentialOrPipeline;\n    } else if (!credentialOrPipeline) {\n      // no credential provided\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else {\n      pipeline = newPipeline(credentialOrPipeline, options);\n    }\n\n    const storageClientContext = new StorageClientContext(url, pipeline.toServiceClientOptions());\n\n    this._serviceContext = new Service(storageClientContext);\n  }\n\n  /**\n   * Creates a {@link BlobBatch}.\n   * A BlobBatch represents an aggregated set of operations on blobs.\n   */\n  public createBatch(): BlobBatch {\n    return new BlobBatch();\n  }\n\n  /**\n   * Create multiple delete operations to mark the specified blobs or snapshots for deletion.\n   * Note that in order to delete a blob, you must delete all of its snapshots.\n   * You can delete both at the same time. See [delete operation details](https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob).\n   * The operations will be authenticated and authorized with specified credential.\n   * See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param {string[]} urls The urls of the blob resources to delete.\n   * @param {StorageSharedKeyCredential | AnonymousCredential | TokenCredential} credential  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the @azure/identity package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param {BlobDeleteOptions} [options]\n   * @returns {Promise<BlobBatchDeleteBlobsResponse>}\n   * @memberof BlobBatchClient\n   */\n  public async deleteBlobs(\n    urls: string[],\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    options?: BlobDeleteOptions\n  ): Promise<BlobBatchDeleteBlobsResponse>;\n\n  /**\n   * Create multiple delete operations to mark the specified blobs or snapshots for deletion.\n   * Note that in order to delete a blob, you must delete all of its snapshots.\n   * You can delete both at the same time. See [delete operation details](https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob).\n   * The operation(subrequest) will be authenticated and authorized with specified credential.\n   * See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param {BlobClient[]} blobClients The BlobClients for the blobs to delete.\n   * @param {BlobDeleteOptions} [options]\n   * @returns {Promise<BlobBatchDeleteBlobsResponse>}\n   * @memberof BlobBatchClient\n   */\n  public async deleteBlobs(\n    blobClients: BlobClient[],\n    options?: BlobDeleteOptions\n  ): Promise<BlobBatchDeleteBlobsResponse>;\n\n  public async deleteBlobs(\n    urlsOrBlobClients: string[] | BlobClient[],\n    credentialOrOptions:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | BlobDeleteOptions\n      | undefined,\n    options?: BlobDeleteOptions\n  ): Promise<BlobBatchDeleteBlobsResponse> {\n    const batch = new BlobBatch();\n    for (const urlOrBlobClient of urlsOrBlobClients) {\n      if (typeof urlOrBlobClient === \"string\") {\n        await batch.deleteBlob(urlOrBlobClient, credentialOrOptions as TokenCredential, options);\n      } else {\n        await batch.deleteBlob(urlOrBlobClient, credentialOrOptions as BlobDeleteOptions);\n      }\n    }\n    return this.submitBatch(batch);\n  }\n\n  /**\n   * Create multiple set tier operations to set the tier on a blob.\n   * The operation is allowed on a page blob in a premium\n   * storage account and on a block blob in a blob storage account (locally redundant\n   * storage only). A premium page blob's tier determines the allowed size, IOPS,\n   * and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive\n   * storage type. This operation does not update the blob's ETag.\n   * See [set blob tier details](https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier).\n   * The operation(subrequest) will be authenticated and authorized\n   * with specified credential.See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param {string[]} urls The urls of the blob resource to delete.\n   * @param {StorageSharedKeyCredential | AnonymousCredential | TokenCredential} credential  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the @azure/identity package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param {AccessTier} tier\n   * @param {BlobSetTierOptions} [options]\n   * @returns {Promise<BlobBatchSetBlobsAccessTierResponse>}\n   * @memberof BlobBatchClient\n   */\n  public async setBlobsAccessTier(\n    urls: string[],\n    credential: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    tier: AccessTier,\n    options?: BlobSetTierOptions\n  ): Promise<BlobBatchSetBlobsAccessTierResponse>;\n\n  /**\n   * Create multiple set tier operations to set the tier on a blob.\n   * The operation is allowed on a page blob in a premium\n   * storage account and on a block blob in a blob storage account (locally redundant\n   * storage only). A premium page blob's tier determines the allowed size, IOPS,\n   * and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive\n   * storage type. This operation does not update the blob's ETag.\n   * See [set blob tier details](https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier).\n   * The operation(subrequest) will be authenticated and authorized\n   * with specified credential.See [blob batch authorization details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).\n   *\n   * @param {BlobClient[]} blobClients The BlobClients for the blobs which should have a new tier set.\n   * @param {AccessTier} tier\n   * @param {BlobSetTierOptions} [options]\n   * @returns {Promise<BlobBatchSetBlobsAccessTierResponse>}\n   * @memberof BlobBatchClient\n   */\n  public async setBlobsAccessTier(\n    blobClients: BlobClient[],\n    tier: AccessTier,\n    options?: BlobSetTierOptions\n  ): Promise<BlobBatchSetBlobsAccessTierResponse>;\n\n  public async setBlobsAccessTier(\n    urlsOrBlobClients: string[] | BlobClient[],\n    credentialOrTier:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | AccessTier,\n    tierOrOptions?: AccessTier | BlobSetTierOptions,\n    options?: BlobSetTierOptions\n  ): Promise<BlobBatchSetBlobsAccessTierResponse> {\n    const batch = new BlobBatch();\n    for (const urlOrBlobClient of urlsOrBlobClients) {\n      if (typeof urlOrBlobClient === \"string\") {\n        await batch.setBlobAccessTier(\n          urlOrBlobClient,\n          credentialOrTier as TokenCredential,\n          tierOrOptions as AccessTier,\n          options\n        );\n      } else {\n        await batch.setBlobAccessTier(\n          urlOrBlobClient,\n          credentialOrTier as AccessTier,\n          tierOrOptions as BlobSetTierOptions\n        );\n      }\n    }\n    return this.submitBatch(batch);\n  }\n\n  /**\n   * Submit batch request which consists of multiple subrequests.\n   *\n   * Get `blobBatchClient` and other details before running the snippets.\n   * `blobServiceClient.getBlobBatchClient()` gives the `blobBatchClient`\n   *\n   * Example usage:\n   *\n   * ```js\n   * let batchRequest = new BlobBatch();\n   * await batchRequest.deleteBlob(urlInString0, credential0);\n   * await batchRequest.deleteBlob(urlInString1, credential1, {\n   *  deleteSnapshots: \"include\"\n   * });\n   * const batchResp = await blobBatchClient.submitBatch(batchRequest);\n   * console.log(batchResp.subResponsesSucceededCount);\n   * ```\n   *\n   * Example using a lease:\n   *\n   * ```js\n   * let batchRequest = new BlobBatch();\n   * await batchRequest.setBlobAccessTier(blockBlobClient0, \"Cool\");\n   * await batchRequest.setBlobAccessTier(blockBlobClient1, \"Cool\", {\n   *  conditions: { leaseId: leaseId }\n   * });\n   * const batchResp = await blobBatchClient.submitBatch(batchRequest);\n   * console.log(batchResp.subResponsesSucceededCount);\n   * ```\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch\n   *\n   * @param {BlobBatch} batchRequest A set of Delete or SetTier operations.\n   * @param {BlobBatchSubmitBatchOptionalParams} [options]\n   * @returns {Promise<BlobBatchSubmitBatchResponse>}\n   * @memberof BlobBatchClient\n   */\n  public async submitBatch(\n    batchRequest: BlobBatch,\n    options: BlobBatchSubmitBatchOptionalParams = {}\n  ): Promise<BlobBatchSubmitBatchResponse> {\n    if (!batchRequest || batchRequest.getSubRequests().size == 0) {\n      throw new RangeError(\"Batch request should contain one or more sub requests.\");\n    }\n\n    const { span, spanOptions } = createSpan(\"BlobBatchClient-submitBatch\", options.tracingOptions);\n    try {\n      const batchRequestBody = batchRequest.getHttpRequestBody();\n\n      const rawBatchResponse: ServiceSubmitBatchResponseModel = await this._serviceContext.submitBatch(\n        batchRequestBody,\n        utf8ByteLength(batchRequestBody),\n        batchRequest.getMultiPartContentType(),\n        {\n          ...options,\n          spanOptions\n        }\n      );\n\n      // Parse the sub responses result, if logic reaches here(i.e. the batch request succeeded with status code 202).\n      const batchResponseParser = new BatchResponseParser(\n        rawBatchResponse,\n        batchRequest.getSubRequests()\n      );\n      const responseSummary = await batchResponseParser.parseBatchResponse();\n\n      const res: BlobBatchSubmitBatchResponse = {\n        _response: rawBatchResponse._response,\n        contentType: rawBatchResponse.contentType,\n        errorCode: rawBatchResponse.errorCode,\n        requestId: rawBatchResponse.requestId,\n        clientRequestId: rawBatchResponse.clientRequestId,\n        version: rawBatchResponse.version,\n        subResponses: responseSummary.subResponses,\n        subResponsesSucceededCount: responseSummary.subResponsesSucceededCount,\n        subResponsesFailedCount: responseSummary.subResponsesFailedCount\n      };\n\n      return res;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport {\n  TokenCredential,\n  isTokenCredential,\n  isNode,\n  HttpResponse,\n  getDefaultProxySettings\n} from \"@azure/core-http\";\nimport { CanonicalCode } from \"@opentelemetry/api\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport {\n  ServiceGetUserDelegationKeyHeaders,\n  ContainerCreateResponse,\n  ContainerDeleteResponse,\n  ServiceGetPropertiesResponse,\n  BlobServiceProperties,\n  ServiceSetPropertiesResponse,\n  ServiceGetStatisticsResponse,\n  ServiceGetAccountInfoResponse,\n  ServiceListContainersSegmentResponse,\n  ContainerItem,\n  ListContainersIncludeType,\n  UserDelegationKeyModel\n} from \"./generatedModels\";\nimport { Service } from \"./generated/src/operations\";\nimport { newPipeline, StoragePipelineOptions, Pipeline } from \"./Pipeline\";\nimport { ContainerClient, ContainerCreateOptions, ContainerDeleteMethodOptions } from \"./Clients\";\nimport { appendToURLPath, extractConnectionStringParts } from \"./utils/utils.common\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport \"@azure/core-paging\";\nimport { PageSettings, PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\nimport { createSpan } from \"./utils/tracing\";\nimport { BlobBatchClient } from \"./BlobBatchClient\";\nimport { CommonOptions, StorageClient } from \"./StorageClient\";\n\n/**\n * Options to configure the {@link BlobServiceClient.getProperties} operation.\n *\n * @export\n * @interface ServiceGetPropertiesOptions\n */\nexport interface ServiceGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ServiceGetPropertiesOptions\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.setProperties} operation.\n *\n * @export\n * @interface ServiceSetPropertiesOptions\n */\nexport interface ServiceSetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ServiceSetPropertiesOptions\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.getAccountInfo} operation.\n *\n * @export\n * @interface ServiceGetAccountInfoOptions\n */\nexport interface ServiceGetAccountInfoOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ServiceGetAccountInfoOptions\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.getStatistics} operation.\n *\n * @export\n * @interface ServiceGetStatisticsOptions\n */\nexport interface ServiceGetStatisticsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ServiceGetStatisticsOptions\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the Service - Get User Delegation Key.\n *\n * @export\n * @interface ServiceGetUserDelegationKeyOptions\n */\nexport interface ServiceGetUserDelegationKeyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ServiceGetStatisticsOptions\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.listContainerSegment} operation.\n *\n * @interface ServiceListContainersSegmentOptions\n */\ninterface ServiceListContainersSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ServiceListContainersSegmentOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * Specifies the maximum number of containers\n   * to return. If the request does not specify maxPageSize, or specifies a\n   * value greater than 5000, the server will return up to 5000 items. Note\n   * that if the listing operation crosses a partition boundary, then the\n   * service will return a continuation token for retrieving the remainder of\n   * the results. For this reason, it is possible that the service will return\n   * fewer results than specified by maxPageSize, or than the default of 5000.\n   */\n  maxPageSize?: number;\n  /**\n   * Include this parameter to\n   * specify that the container's metadata be returned as part of the response\n   * body. Possible values include: 'metadata'\n   */\n  include?: ListContainersIncludeType;\n}\n\n/**\n * Options to configure the {@link BlobServiceClient.listContainers} operation.\n *\n * @export\n * @interface ServiceListContainersOptions\n */\nexport interface ServiceListContainersOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   *\n   * @type {AbortSignalLike}\n   * @memberof ServiceListContainersOptions\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only containers\n   * whose name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * Specifies whether the container's metadata\n   *                                   should be returned as part of the response body.\n   */\n  includeMetadata?: boolean;\n}\n\n/**\n * A user delegation key.\n */\nexport interface UserDelegationKey {\n  /**\n   * The Azure Active Directory object ID in GUID format.\n   *\n   * @type {string}\n   * @memberof UserDelegationKey\n   */\n  signedObjectId: string;\n  /**\n   * The Azure Active Directory tenant ID in GUID format.\n   *\n   * @type {string}\n   * @memberof UserDelegationKey\n   */\n  signedTenantId: string;\n  /**\n   * The date-time the key is active.\n   *\n   * @type {Date}\n   * @memberof UserDelegationKey\n   */\n  signedStartsOn: Date;\n  /**\n   * The date-time the key expires.\n   *\n   * @type {Date}\n   * @memberof UserDelegationKey\n   */\n  signedExpiresOn: Date;\n  /**\n   * Abbreviation of the Azure Storage service that accepts the key.\n   *\n   * @type {string}\n   * @memberof UserDelegationKey\n   */\n  signedService: string;\n  /**\n   * The service version that created the key.\n   *\n   * @type {string}\n   * @memberof UserDelegationKey\n   */\n  signedVersion: string;\n  /**\n   * The key as a base64 string.\n   *\n   * @type {string}\n   * @memberof UserDelegationKey\n   */\n  value: string;\n}\n\n/**\n * Contains response data for the {@link getUserDelegationKey} operation.\n */\nexport declare type ServiceGetUserDelegationKeyResponse = UserDelegationKey &\n  ServiceGetUserDelegationKeyHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ServiceGetUserDelegationKeyHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: UserDelegationKeyModel;\n    };\n  };\n\n/**\n * A BlobServiceClient represents a Client to the Azure Storage Blob service allowing you\n * to manipulate blob containers.\n *\n * @export\n * @class BlobServiceClient\n */\nexport class BlobServiceClient extends StorageClient {\n  /**\n   * serviceContext provided by protocol layer.\n   *\n   * @private\n   * @type {Service}\n   * @memberof BlobServiceClient\n   */\n  private serviceContext: Service;\n\n  /**\n   *\n   * Creates an instance of BlobServiceClient from connection string.\n   *\n   * @param {string} connectionString Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param {StoragePipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof BlobServiceClient\n   */\n  public static fromConnectionString(connectionString: string, options?: StoragePipelineOptions) {\n    options = options || {};\n    const extractedCreds = extractConnectionStringParts(connectionString);\n    if (extractedCreds.kind === \"AccountConnString\") {\n      if (isNode) {\n        const sharedKeyCredential = new StorageSharedKeyCredential(\n          extractedCreds.accountName!,\n          extractedCreds.accountKey\n        );\n        options.proxyOptions = getDefaultProxySettings(extractedCreds.proxyUri);\n        const pipeline = newPipeline(sharedKeyCredential, options);\n        return new BlobServiceClient(extractedCreds.url, pipeline);\n      } else {\n        throw new Error(\"Account connection string is only supported in Node.js environment\");\n      }\n    } else if (extractedCreds.kind === \"SASConnString\") {\n      const pipeline = newPipeline(new AnonymousCredential(), options);\n      return new BlobServiceClient(extractedCreds.url + \"?\" + extractedCreds.accountSas, pipeline);\n    } else {\n      throw new Error(\n        \"Connection string must be either an Account connection string or a SAS connection string\"\n      );\n    }\n  }\n\n  /**\n   * Creates an instance of BlobServiceClient.\n   *\n   * @param {string} url A Client string pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param {StorageSharedKeyCredential | AnonymousCredential | TokenCredential} credential  Such as AnonymousCredential, StorageSharedKeyCredential or any credential from the @azure/identity package to authenticate requests to the service. You can also provide an object that implements the TokenCredential interface. If not specified, AnonymousCredential is used.\n   * @param {StoragePipelineOptions} [options] Optional. Options to configure the HTTP pipeline.\n   * @memberof BlobServiceClient\n   *\n   * Example using DefaultAzureCredential from `@azure/identity`:\n   *\n   * ```js\n   * const account = \"<storage account name>\";\n   *\n   * const defaultAzureCredential = new DefaultAzureCredential();\n   *\n   * const blobServiceClient = new BlobServiceClient(\n   *   `https://${account}.blob.core.windows.net`,\n   *   defaultAzureCredential\n   * );\n   * ```\n   *\n   * Example using an account name/key:\n   *\n   * ```js\n   * const account = \"<storage account name>\"\n   * const sharedKeyCredential = new StorageSharedKeyCredential(account, \"<account key>\");\n   *\n   * const blobServiceClient = new BlobServiceClient(\n   *   `https://${account}.blob.core.windows.net`,\n   *   sharedKeyCredential\n   * );\n   * ```\n   */\n  constructor(\n    url: string,\n    credential?: StorageSharedKeyCredential | AnonymousCredential | TokenCredential,\n    options?: StoragePipelineOptions\n  );\n  /**\n   * Creates an instance of BlobServiceClient.\n   *\n   * @param {string} url A Client string pointing to Azure Storage blob service, such as\n   *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n   * @param {Pipeline} pipeline Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   * @memberof BlobServiceClient\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    url: string,\n    credentialOrPipeline?:\n      | StorageSharedKeyCredential\n      | AnonymousCredential\n      | TokenCredential\n      | Pipeline,\n    options?: StoragePipelineOptions\n  ) {\n    let pipeline: Pipeline;\n    if (credentialOrPipeline instanceof Pipeline) {\n      pipeline = credentialOrPipeline;\n    } else if (\n      (isNode && credentialOrPipeline instanceof StorageSharedKeyCredential) ||\n      credentialOrPipeline instanceof AnonymousCredential ||\n      isTokenCredential(credentialOrPipeline)\n    ) {\n      pipeline = newPipeline(credentialOrPipeline, options);\n    } else {\n      // The second parameter is undefined. Use anonymous credential\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    }\n    super(url, pipeline);\n    this.serviceContext = new Service(this.storageClientContext);\n  }\n\n  /**\n   * Creates a {@link ContainerClient} object\n   *\n   * @param {string} containerName A container name\n   * @returns {ContainerClient} A new ContainerClient object for the given container name.\n   * @memberof BlobServiceClient\n   *\n   * Example usage:\n   *\n   * ```js\n   * const containerClient = blobServiceClient.getContainerClient(\"<container name>\");\n   * ```\n   */\n  public getContainerClient(containerName: string): ContainerClient {\n    return new ContainerClient(\n      appendToURLPath(this.url, encodeURIComponent(containerName)),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Create a Blob container.\n   *\n   * @param {string} containerName Name of the container to create.\n   * @param {ContainerCreateOptions} [options] Options to configure Container Create operation.\n   * @returns {Promise<{ containerClient: ContainerClient; containerCreateResponse: ContainerCreateResponse }>} Container creation response and the corresponding container client.\n   * @memberof BlobServiceClient\n   */\n  public async createContainer(\n    containerName: string,\n    options: ContainerCreateOptions = {}\n  ): Promise<{\n    containerClient: ContainerClient;\n    containerCreateResponse: ContainerCreateResponse;\n  }> {\n    const { span, spanOptions } = createSpan(\n      \"BlobServiceClient-createContainer\",\n      options.tracingOptions\n    );\n    try {\n      const containerClient = this.getContainerClient(containerName);\n      const containerCreateResponse = await containerClient.create({\n        ...options,\n        tracingOptions: { ...options!.tracingOptions, spanOptions }\n      });\n      return {\n        containerClient,\n        containerCreateResponse\n      };\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Deletes a Blob container.\n   *\n   * @param {string} containerName Name of the container to delete.\n   * @param {ContainerDeleteMethodOptions} [options] Options to configure Container Delete operation.\n   * @returns {Promise<ContainerDeleteResponse>} Container deletion response.\n   * @memberof BlobServiceClient\n   */\n  public async deleteContainer(\n    containerName: string,\n    options: ContainerDeleteMethodOptions = {}\n  ): Promise<ContainerDeleteResponse> {\n    const { span, spanOptions } = createSpan(\n      \"BlobServiceClient-deleteContainer\",\n      options.tracingOptions\n    );\n    try {\n      const containerClient = this.getContainerClient(containerName);\n      return await containerClient.delete({\n        ...options,\n        tracingOptions: { ...options!.tracingOptions, spanOptions }\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the properties of a storage account\u2019s Blob service, including properties\n   * for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-properties\n   *\n   * @param {ServiceGetPropertiesOptions} [options] Options to the Service Get Properties operation.\n   * @returns {Promise<ServiceGetPropertiesResponse>} Response data for the Service Get Properties operation.\n   * @memberof BlobServiceClient\n   */\n  public async getProperties(\n    options: ServiceGetPropertiesOptions = {}\n  ): Promise<ServiceGetPropertiesResponse> {\n    const { span, spanOptions } = createSpan(\n      \"BlobServiceClient-getProperties\",\n      options.tracingOptions\n    );\n    try {\n      return await this.serviceContext.getProperties({\n        abortSignal: options.abortSignal,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets properties for a storage account\u2019s Blob service endpoint, including properties\n   * for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules and soft delete settings.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-service-properties}\n   *\n   * @param {BlobServiceProperties} properties\n   * @param {ServiceSetPropertiesOptions} [options] Options to the Service Set Properties operation.\n   * @returns {Promise<ServiceSetPropertiesResponse>} Response data for the Service Set Properties operation.\n   * @memberof BlobServiceClient\n   */\n  public async setProperties(\n    properties: BlobServiceProperties,\n    options: ServiceSetPropertiesOptions = {}\n  ): Promise<ServiceSetPropertiesResponse> {\n    const { span, spanOptions } = createSpan(\n      \"BlobServiceClient-setProperties\",\n      options.tracingOptions\n    );\n    try {\n      return await this.serviceContext.setProperties(properties, {\n        abortSignal: options.abortSignal,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Retrieves statistics related to replication for the Blob service. It is only\n   * available on the secondary location endpoint when read-access geo-redundant\n   * replication is enabled for the storage account.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-stats}\n   *\n   * @param {ServiceGetStatisticsOptions} [options] Options to the Service Get Statistics operation.\n   * @returns {Promise<ServiceGetStatisticsResponse>} Response data for the Service Get Statistics operation.\n   * @memberof BlobServiceClient\n   */\n  public async getStatistics(\n    options: ServiceGetStatisticsOptions = {}\n  ): Promise<ServiceGetStatisticsResponse> {\n    const { span, spanOptions } = createSpan(\n      \"BlobServiceClient-getStatistics\",\n      options.tracingOptions\n    );\n    try {\n      return await this.serviceContext.getStatistics({\n        abortSignal: options.abortSignal,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * The Get Account Information operation returns the sku name and account kind\n   * for the specified account.\n   * The Get Account Information operation is available on service versions beginning\n   * with version 2018-03-28.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information\n   *\n   * @param {ServiceGetAccountInfoOptions} [options] Options to the Service Get Account Info operation.\n   * @returns {Promise<ServiceGetAccountInfoResponse>} Response data for the Service Get Account Info operation.\n   * @memberof BlobServiceClient\n   */\n  public async getAccountInfo(\n    options: ServiceGetAccountInfoOptions = {}\n  ): Promise<ServiceGetAccountInfoResponse> {\n    const { span, spanOptions } = createSpan(\n      \"BlobServiceClient-getAccountInfo\",\n      options.tracingOptions\n    );\n    try {\n      return await this.serviceContext.getAccountInfo({\n        abortSignal: options.abortSignal,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns a list of the containers under the specified account.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/list-containers2\n   *\n   * @param {string} [marker] A string value that identifies the portion of\n   *                        the list of containers to be returned with the next listing operation. The\n   *                        operation returns the NextMarker value within the response body if the\n   *                        listing operation did not return all containers remaining to be listed\n   *                        with the current page. The NextMarker value can be used as the value for\n   *                        the marker parameter in a subsequent call to request the next page of list\n   *                        items. The marker value is opaque to the client.\n   * @param {ServiceListContainersSegmentOptions} [options] Options to the Service List Container Segment operation.\n   * @returns {Promise<ServiceListContainersSegmentResponse>} Response data for the Service List Container Segment operation.\n   * @memberof BlobServiceClient\n   */\n  private async listContainersSegment(\n    marker?: string,\n    options: ServiceListContainersSegmentOptions = {}\n  ): Promise<ServiceListContainersSegmentResponse> {\n    const { span, spanOptions } = createSpan(\n      \"BlobServiceClient-listContainersSegment\",\n      options.tracingOptions\n    );\n    try {\n      return await this.serviceContext.listContainersSegment({\n        abortSignal: options.abortSignal,\n        marker,\n        ...options,\n        spanOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for ServiceListContainersSegmentResponses\n   *\n   * @private\n   * @param {string} [marker] A string value that identifies the portion of\n   *                        the list of containers to be returned with the next listing operation. The\n   *                        operation returns the NextMarker value within the response body if the\n   *                        listing operation did not return all containers remaining to be listed\n   *                        with the current page. The NextMarker value can be used as the value for\n   *                        the marker parameter in a subsequent call to request the next page of list\n   *                        items. The marker value is opaque to the client.\n   * @param {ServiceListContainersSegmentOptions} [options] Options to list containers operation.\n   * @returns {AsyncIterableIterator<ServiceListContainersSegmentResponse>}\n   * @memberof BlobServiceClient\n   */\n  private async *listSegments(\n    marker?: string,\n    options: ServiceListContainersSegmentOptions = {}\n  ): AsyncIterableIterator<ServiceListContainersSegmentResponse> {\n    let listContainersSegmentResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        listContainersSegmentResponse = await this.listContainersSegment(marker, options);\n        listContainersSegmentResponse.containerItems =\n          listContainersSegmentResponse.containerItems || [];\n        marker = listContainersSegmentResponse.continuationToken;\n        yield await listContainersSegmentResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for Container Items\n   *\n   * @private\n   * @param {ServiceListContainersSegmentOptions} [options] Options to list containers operation.\n   * @returns {AsyncIterableIterator<ContainerItem>}\n   * @memberof BlobServiceClient\n   */\n  private async *listItems(\n    options: ServiceListContainersSegmentOptions = {}\n  ): AsyncIterableIterator<ContainerItem> {\n    let marker: string | undefined;\n    for await (const segment of this.listSegments(marker, options)) {\n      yield* segment.containerItems;\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the containers\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the containers in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * let i = 1;\n   * for await (const container of blobServiceClient.listContainers()) {\n   *   console.log(`Container ${i++}: ${container.name}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * const iter = blobServiceClient.listContainers();\n   * let containerItem = await iter.next();\n   * while (!containerItem.done) {\n   *   console.log(`Container ${i++}: ${containerItem.value.name}`);\n   *   containerItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of blobServiceClient.listContainers().byPage({ maxPageSize: 20 })) {\n   *   if (response.containerItems) {\n   *     for (const container of response.containerItems) {\n   *       console.log(`Container ${i++}: ${container.name}`);\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = blobServiceClient.listContainers().byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 container names\n   * if (response.containerItems) {\n   *   for (const container of response.containerItems) {\n   *     console.log(`Container ${i++}: ${container.name}`);\n   *   }\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   * // Passing next marker as continuationToken\n   * iterator = blobServiceClient\n   *   .listContainers()\n   *   .byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 container names\n   * if (response.containerItems) {\n   *   for (const container of response.containerItems) {\n   *      console.log(`Container ${i++}: ${container.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param {ServiceListContainersOptions} [options={}] Options to list containers.\n   * @returns {PagedAsyncIterableIterator<ContainerItem, ServiceListContainersSegmentResponse>} An asyncIterableIterator that supports paging.\n   * @memberof BlobServiceClient\n   */\n  public listContainers(\n    options: ServiceListContainersOptions = {}\n  ): PagedAsyncIterableIterator<ContainerItem, ServiceListContainersSegmentResponse> {\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n    // AsyncIterableIterator to iterate over containers\n    const listSegmentOptions: ServiceListContainersSegmentOptions = {\n      ...options,\n      ...(options.includeMetadata ? { include: \"metadata\" } : {})\n    };\n\n    const iter = this.listItems(listSegmentOptions);\n    return {\n      /**\n       * @member {Promise} [next] The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * @member {Symbol} [asyncIterator] The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * @member {Function} [byPage] Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listSegments(settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...listSegmentOptions\n        });\n      }\n    };\n  }\n\n  /**\n   * ONLY AVAILABLE WHEN USING BEARER TOKEN AUTHENTICATION (TokenCredential).\n   *\n   * Retrieves a user delegation key for the Blob service. This is only a valid operation when using\n   * bearer token authentication.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-user-delegation-key\n   *\n   * @param {Date} startsOn      The start time for the user delegation SAS. Must be within 7 days of the current time\n   * @param {Date} expiresOn     The end time for the user delegation SAS. Must be within 7 days of the current time\n   * @returns {Promise<ServiceGetUserDelegationKeyResponse>}\n   * @memberof BlobServiceClient\n   */\n  public async getUserDelegationKey(\n    startsOn: Date,\n    expiresOn: Date,\n    options: ServiceGetUserDelegationKeyOptions = {}\n  ): Promise<ServiceGetUserDelegationKeyResponse> {\n    const { span, spanOptions } = createSpan(\n      \"BlobServiceClient-getUserDelegationKey\",\n      options.tracingOptions\n    );\n    try {\n      const response = await this.serviceContext.getUserDelegationKey(\n        {\n          startsOn: truncatedISO8061Date(startsOn, false),\n          expiresOn: truncatedISO8061Date(expiresOn, false)\n        },\n        {\n          abortSignal: options.abortSignal,\n          spanOptions\n        }\n      );\n\n      const userDelegationKey = {\n        signedObjectId: response.signedObjectId,\n        signedTenantId: response.signedTenantId,\n        signedStartsOn: new Date(response.signedStartsOn),\n        signedExpiresOn: new Date(response.signedExpiresOn),\n        signedService: response.signedService,\n        signedVersion: response.signedVersion,\n        value: response.value\n      };\n\n      const res: ServiceGetUserDelegationKeyResponse = {\n        _response: response._response,\n        requestId: response.requestId,\n        clientRequestId: response.clientRequestId,\n        version: response.version,\n        date: response.date,\n        errorCode: response.errorCode,\n        ...userDelegationKey\n      };\n\n      return res;\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a BlobBatchClient object to conduct batch operations.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch\n   *\n   * @returns {BlobBatchClient} A new BlobBatchClient object for this service.\n   * @memberof BlobServiceClient\n   */\n  public getBlobBatchClient(): BlobBatchClient {\n    return new BlobBatchClient(this.url, this.pipeline);\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant permissions for that operation. Once all the\n * values are set, this should be serialized with toString and set as the permissions field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n *\n * @export\n * @class AccountSASPermissions\n */\nexport class AccountSASPermissions {\n  /**\n   * Parse initializes the AccountSASPermissions fields from a string.\n   *\n   * @static\n   * @param {string} permissions\n   * @returns {AccountSASPermissions}\n   * @memberof AccountSASPermissions\n   */\n  public static parse(permissions: string): AccountSASPermissions {\n    const accountSASPermissions = new AccountSASPermissions();\n\n    for (const c of permissions) {\n      switch (c) {\n        case \"r\":\n          accountSASPermissions.read = true;\n          break;\n        case \"w\":\n          accountSASPermissions.write = true;\n          break;\n        case \"d\":\n          accountSASPermissions.delete = true;\n          break;\n        case \"l\":\n          accountSASPermissions.list = true;\n          break;\n        case \"a\":\n          accountSASPermissions.add = true;\n          break;\n        case \"c\":\n          accountSASPermissions.create = true;\n          break;\n        case \"u\":\n          accountSASPermissions.update = true;\n          break;\n        case \"p\":\n          accountSASPermissions.process = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission character: ${c}`);\n      }\n    }\n\n    return accountSASPermissions;\n  }\n\n  /**\n   * Permission to read resources and list queues and tables granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public read: boolean = false;\n\n  /**\n   * Permission to write resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public write: boolean = false;\n\n  /**\n   * Permission to create blobs and files granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public delete: boolean = false;\n\n  /**\n   * Permission to list blob containers, blobs, shares, directories, and files granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public list: boolean = false;\n\n  /**\n   * Permission to add messages, table entities, and append to blobs granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public add: boolean = false;\n\n  /**\n   * Permission to create blobs and files granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public create: boolean = false;\n\n  /**\n   * Permissions to update messages and table entities granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public update: boolean = false;\n\n  /**\n   * Permission to get and delete messages granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASPermissions\n   */\n  public process: boolean = false;\n\n  /**\n   * Produces the SAS permissions string for an Azure Storage account.\n   * Call this method to set AccountSASSignatureValues Permissions field.\n   *\n   * Using this method will guarantee the resource types are in\n   * an order accepted by the service.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   * @returns {string}\n   * @memberof AccountSASPermissions\n   */\n  public toString(): string {\n    // The order of the characters should be as specified here to ensure correctness:\n    // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n    // Use a string array instead of string concatenating += operator for performance\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.update) {\n      permissions.push(\"u\");\n    }\n    if (this.process) {\n      permissions.push(\"p\");\n    }\n    return permissions.join(\"\");\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the resources accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that resource type. Once all the\n * values are set, this should be serialized with toString and set as the resources field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the resources string without this class, but\n * the order of the resources is particular and this class guarantees correctness.\n *\n * @export\n * @class AccountSASResourceTypes\n */\nexport class AccountSASResourceTypes {\n  /**\n   * Creates an {@link AccountSASResourceTypes} from the specified resource types string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid resource type.\n   *\n   * @static\n   * @param {string} resourceTypes\n   * @returns {AccountSASResourceTypes}\n   * @memberof AccountSASResourceTypes\n   */\n  public static parse(resourceTypes: string): AccountSASResourceTypes {\n    const accountSASResourceTypes = new AccountSASResourceTypes();\n\n    for (const c of resourceTypes) {\n      switch (c) {\n        case \"s\":\n          accountSASResourceTypes.service = true;\n          break;\n        case \"c\":\n          accountSASResourceTypes.container = true;\n          break;\n        case \"o\":\n          accountSASResourceTypes.object = true;\n          break;\n        default:\n          throw new RangeError(`Invalid resource type: ${c}`);\n      }\n    }\n\n    return accountSASResourceTypes;\n  }\n\n  /**\n   * Permission to access service level APIs granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASResourceTypes\n   */\n  public service: boolean = false;\n\n  /**\n   * Permission to access container level APIs (Blob Containers, Tables, Queues, File Shares) granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASResourceTypes\n   */\n  public container: boolean = false;\n\n  /**\n   * Permission to access object level APIs (Blobs, Table Entities, Queue Messages, Files) granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASResourceTypes\n   */\n  public object: boolean = false;\n\n  /**\n   * Converts the given resource types to a string.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   * @returns {string}\n   * @memberof AccountSASResourceTypes\n   */\n  public toString(): string {\n    const resourceTypes: string[] = [];\n    if (this.service) {\n      resourceTypes.push(\"s\");\n    }\n    if (this.container) {\n      resourceTypes.push(\"c\");\n    }\n    if (this.object) {\n      resourceTypes.push(\"o\");\n    }\n    return resourceTypes.join(\"\");\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the services accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that service. Once all the\n * values are set, this should be serialized with toString and set as the services field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the services string without this class, but\n * the order of the services is particular and this class guarantees correctness.\n *\n * @export\n * @class AccountSASServices\n */\nexport class AccountSASServices {\n  /**\n   * Creates an {@link AccountSASServices} from the specified services string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid service.\n   *\n   * @static\n   * @param {string} services\n   * @returns {AccountSASServices}\n   * @memberof AccountSASServices\n   */\n  public static parse(services: string): AccountSASServices {\n    const accountSASServices = new AccountSASServices();\n\n    for (const c of services) {\n      switch (c) {\n        case \"b\":\n          accountSASServices.blob = true;\n          break;\n        case \"f\":\n          accountSASServices.file = true;\n          break;\n        case \"q\":\n          accountSASServices.queue = true;\n          break;\n        case \"t\":\n          accountSASServices.table = true;\n          break;\n        default:\n          throw new RangeError(`Invalid service character: ${c}`);\n      }\n    }\n\n    return accountSASServices;\n  }\n\n  /**\n   * Permission to access blob resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASServices\n   */\n  public blob: boolean = false;\n\n  /**\n   * Permission to access file resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASServices\n   */\n  public file: boolean = false;\n\n  /**\n   * Permission to access queue resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASServices\n   */\n  public queue: boolean = false;\n\n  /**\n   * Permission to access table resources granted.\n   *\n   * @type {boolean}\n   * @memberof AccountSASServices\n   */\n  public table: boolean = false;\n\n  /**\n   * Converts the given services to a string.\n   *\n   * @returns {string}\n   * @memberof AccountSASServices\n   */\n  public toString(): string {\n    const services: string[] = [];\n    if (this.blob) {\n      services.push(\"b\");\n    }\n    if (this.table) {\n      services.push(\"t\");\n    }\n    if (this.queue) {\n      services.push(\"q\");\n    }\n    if (this.file) {\n      services.push(\"f\");\n    }\n    return services.join(\"\");\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * Allowed IP range for a SAS.\n *\n * @export\n * @interface SasIPRange\n */\nexport interface SasIPRange {\n  /**\n   * Starting IP address in the IP range.\n   * If end IP doesn't provide, start IP will the only IP allowed.\n   *\n   * @type {string}\n   * @memberof SasIPRange\n   */\n  start: string;\n  /**\n   * Optional. IP address that ends the IP range.\n   * If not provided, start IP will the only IP allowed.\n   *\n   * @type {string}\n   * @memberof SasIPRange\n   */\n  end?: string;\n}\n\n/**\n * Generate SasIPRange format string. For example:\n *\n * \"8.8.8.8\" or \"1.1.1.1-255.255.255.255\"\n *\n * @export\n * @param {SasIPRange} ipRange\n * @returns {string}\n */\nexport function ipRangeToString(ipRange: SasIPRange): string {\n  return ipRange.end ? `${ipRange.start}-${ipRange.end}` : ipRange.start;\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { SasIPRange, ipRangeToString } from \"./SasIPRange\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\nimport { UserDelegationKey } from \"./BlobServiceClient\";\n\n/**\n * Protocols for generated SAS.\n *\n * @export\n * @enum {number}\n */\nexport enum SASProtocol {\n  /**\n   * Protocol that allows HTTPS only\n   */\n  Https = \"https\",\n\n  /**\n   * Protocol that allows both HTTPS and HTTP\n   */\n  HttpsAndHttp = \"https,http\"\n}\n\n/**\n * Represents the components that make up an Azure Storage SAS' query parameters. This type is not constructed directly\n * by the user; it is only generated by the {@link AccountSASSignatureValues} and {@link BlobSASSignatureValues}\n * types. Once generated, it can be encoded into a {@code String} and appended to a URL directly (though caution should\n * be taken here in case there are existing query parameters, which might affect the appropriate means of appending\n * these query parameters).\n *\n * NOTE: Instances of this class are immutable.\n *\n * @export\n * @class SASQueryParameters\n */\nexport class SASQueryParameters {\n  /**\n   * The storage API version.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly version: string;\n\n  /**\n   * Optional. The allowed HTTP protocol(s).\n   *\n   * @type {SASProtocol}\n   * @memberof SASQueryParameters\n   */\n  public readonly protocol?: SASProtocol;\n\n  /**\n   * Optional. The start time for this SAS token.\n   *\n   * @type {Date}\n   * @memberof SASQueryParameters\n   */\n  public readonly startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The expiry time for this SAS token.\n   *\n   * @type {Date}\n   * @memberof SASQueryParameters\n   */\n  public readonly expiresOn?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to {@link AccountSASPermissions}, {@link BlobSASPermissions}, or {@link ContainerSASPermissions} for\n   * more details.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly permissions?: string;\n\n  /**\n   * Optional. The storage services being accessed (only for Account SAS). Please refer to {@link AccountSASServices}\n   * for more details.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly services?: string;\n\n  /**\n   * Optional. The storage resource types being accessed (only for Account SAS). Please refer to\n   * {@link AccountSASResourceTypes} for more details.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly resourceTypes?: string;\n\n  /**\n   * Optional. The signed identifier (only for {@link BlobSASSignatureValues}).\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly identifier?: string;\n\n  /**\n   * Optional. The storage container or blob (only for {@link BlobSASSignatureValues}).\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly resource?: string;\n\n  /**\n   * The signature for the SAS token.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly signature: string;\n\n  /**\n   * Value for cache-control header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly cacheControl?: string;\n\n  /**\n   * Value for content-disposition header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentDisposition?: string;\n\n  /**\n   * Value for content-encoding header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentEncoding?: string;\n\n  /**\n   * Value for content-length header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentLanguage?: string;\n\n  /**\n   * Value for content-type header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentType?: string;\n\n  /**\n   * Inner value of getter ipRange.\n   *\n   * @private\n   * @type {SasIPRange}\n   * @memberof SASQueryParameters\n   */\n  private readonly ipRangeInner?: SasIPRange;\n\n  /**\n   * The Azure Active Directory object ID in GUID format.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedOid?: string;\n\n  /**\n   * The Azure Active Directory tenant ID in GUID format.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedTenentId?: string;\n\n  /**\n   * The date-time the key is active.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {Date}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedStartsOn?: Date;\n\n  /**\n   * The date-time the key expires.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {Date}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedExpiresOn?: Date;\n\n  /**\n   * Abbreviation of the Azure Storage service that accepts the user delegation key.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedService?: string;\n\n  /**\n   * The service version that created the user delegation key.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedVersion?: string;\n\n  /**\n   * Optional. IP range allowed for this SAS.\n   *\n   * @readonly\n   * @type {(SasIPRange | undefined)}\n   * @memberof SASQueryParameters\n   */\n  public get ipRange(): SasIPRange | undefined {\n    if (this.ipRangeInner) {\n      return {\n        end: this.ipRangeInner.end,\n        start: this.ipRangeInner.start\n      };\n    }\n    return undefined;\n  }\n\n  /**\n   * Creates an instance of SASQueryParameters.\n   *\n   * @param {string} version Representing the storage version\n   * @param {string} signature Representing the signature for the SAS token\n   * @param {string} [permissions] Representing the storage permissions\n   * @param {string} [services] Representing the storage services being accessed (only for Account SAS)\n   * @param {string} [resourceTypes] Representing the storage resource types being accessed (only for Account SAS)\n   * @param {SASProtocol} [protocol] Representing the allowed HTTP protocol(s)\n   * @param {Date} [startsOn] Representing the start time for this SAS token\n   * @param {Date} [expiresOn] Representing the expiry time for this SAS token\n   * @param {SasIPRange} [ipRange] Representing the range of valid IP addresses for this SAS token\n   * @param {string} [identifier] Representing the signed identifier (only for Service SAS)\n   * @param {string} [resource] Representing the storage container or blob (only for Service SAS)\n   * @param {string} [cacheControl] Representing the cache-control header (only for Blob/File Service SAS)\n   * @param {string} [contentDisposition] Representing the content-disposition header (only for Blob/File Service SAS)\n   * @param {string} [contentEncoding] Representing the content-encoding header (only for Blob/File Service SAS)\n   * @param {string} [contentLanguage] Representing the content-language header (only for Blob/File Service SAS)\n   * @param {string} [contentType] Representing the content-type header (only for Blob/File Service SAS)\n   * @param {userDelegationKey} [userDelegationKey] Representing the user delegation key properties\n   * @memberof SASQueryParameters\n   */\n  constructor(\n    version: string,\n    signature: string,\n    permissions?: string,\n    services?: string,\n    resourceTypes?: string,\n    protocol?: SASProtocol,\n    startsOn?: Date,\n    expiresOn?: Date,\n    ipRange?: SasIPRange,\n    identifier?: string,\n    resource?: string,\n    cacheControl?: string,\n    contentDisposition?: string,\n    contentEncoding?: string,\n    contentLanguage?: string,\n    contentType?: string,\n    userDelegationKey?: UserDelegationKey\n  ) {\n    this.version = version;\n    this.services = services;\n    this.resourceTypes = resourceTypes;\n    this.expiresOn = expiresOn;\n    this.permissions = permissions;\n    this.protocol = protocol;\n    this.startsOn = startsOn;\n    this.ipRangeInner = ipRange;\n    this.identifier = identifier;\n    this.resource = resource;\n    this.signature = signature;\n    this.cacheControl = cacheControl;\n    this.contentDisposition = contentDisposition;\n    this.contentEncoding = contentEncoding;\n    this.contentLanguage = contentLanguage;\n    this.contentType = contentType;\n\n    if (userDelegationKey) {\n      this.signedOid = userDelegationKey.signedObjectId;\n      this.signedTenentId = userDelegationKey.signedTenantId;\n      this.signedStartsOn = userDelegationKey.signedStartsOn;\n      this.signedExpiresOn = userDelegationKey.signedExpiresOn;\n      this.signedService = userDelegationKey.signedService;\n      this.signedVersion = userDelegationKey.signedVersion;\n    }\n  }\n\n  /**\n   * Encodes all SAS query parameters into a string that can be appended to a URL.\n   *\n   * @returns {string}\n   * @memberof SASQueryParameters\n   */\n  public toString(): string {\n    const params: string[] = [\n      \"sv\",\n      \"ss\",\n      \"srt\",\n      \"spr\",\n      \"st\",\n      \"se\",\n      \"sip\",\n      \"si\",\n      \"skoid\", // Signed object ID\n      \"sktid\", // Signed tenant ID\n      \"skt\", // Signed key start time\n      \"ske\", // Signed key expiry time\n      \"sks\", // Signed key service\n      \"skv\", // Signed key version\n      \"sr\",\n      \"sp\",\n      \"sig\",\n      \"rscc\",\n      \"rscd\",\n      \"rsce\",\n      \"rscl\",\n      \"rsct\"\n    ];\n    const queries: string[] = [];\n\n    for (const param of params) {\n      switch (param) {\n        case \"sv\":\n          this.tryAppendQueryParameter(queries, param, this.version);\n          break;\n        case \"ss\":\n          this.tryAppendQueryParameter(queries, param, this.services);\n          break;\n        case \"srt\":\n          this.tryAppendQueryParameter(queries, param, this.resourceTypes);\n          break;\n        case \"spr\":\n          this.tryAppendQueryParameter(queries, param, this.protocol);\n          break;\n        case \"st\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.startsOn ? truncatedISO8061Date(this.startsOn, false) : undefined\n          );\n          break;\n        case \"se\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.expiresOn ? truncatedISO8061Date(this.expiresOn, false) : undefined\n          );\n          break;\n        case \"sip\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.ipRange ? ipRangeToString(this.ipRange) : undefined\n          );\n          break;\n        case \"si\":\n          this.tryAppendQueryParameter(queries, param, this.identifier);\n          break;\n        case \"skoid\": // Signed object ID\n          this.tryAppendQueryParameter(queries, param, this.signedOid);\n          break;\n        case \"sktid\": // Signed tenant ID\n          this.tryAppendQueryParameter(queries, param, this.signedTenentId);\n          break;\n        case \"skt\": // Signed key start time\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.signedStartsOn ? truncatedISO8061Date(this.signedStartsOn, false) : undefined\n          );\n          break;\n        case \"ske\": // Signed key expiry time\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.signedExpiresOn ? truncatedISO8061Date(this.signedExpiresOn, false) : undefined\n          );\n          break;\n        case \"sks\": // Signed key service\n          this.tryAppendQueryParameter(queries, param, this.signedService);\n          break;\n        case \"skv\": // Signed key version\n          this.tryAppendQueryParameter(queries, param, this.signedVersion);\n          break;\n        case \"sr\":\n          this.tryAppendQueryParameter(queries, param, this.resource);\n          break;\n        case \"sp\":\n          this.tryAppendQueryParameter(queries, param, this.permissions);\n          break;\n        case \"sig\":\n          this.tryAppendQueryParameter(queries, param, this.signature);\n          break;\n        case \"rscc\":\n          this.tryAppendQueryParameter(queries, param, this.cacheControl);\n          break;\n        case \"rscd\":\n          this.tryAppendQueryParameter(queries, param, this.contentDisposition);\n          break;\n        case \"rsce\":\n          this.tryAppendQueryParameter(queries, param, this.contentEncoding);\n          break;\n        case \"rscl\":\n          this.tryAppendQueryParameter(queries, param, this.contentLanguage);\n          break;\n        case \"rsct\":\n          this.tryAppendQueryParameter(queries, param, this.contentType);\n          break;\n      }\n    }\n    return queries.join(\"&\");\n  }\n\n  /**\n   * A private helper method used to filter and append query key/value pairs into an array.\n   *\n   * @private\n   * @param {string[]} queries\n   * @param {string} key\n   * @param {string} [value]\n   * @returns {void}\n   * @memberof SASQueryParameters\n   */\n  private tryAppendQueryParameter(queries: string[], key: string, value?: string): void {\n    if (!value) {\n      return;\n    }\n\n    key = encodeURIComponent(key);\n    value = encodeURIComponent(value);\n    if (key.length > 0 && value.length > 0) {\n      queries.push(`${key}=${value}`);\n    }\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { AccountSASPermissions } from \"./AccountSASPermissions\";\nimport { AccountSASResourceTypes } from \"./AccountSASResourceTypes\";\nimport { AccountSASServices } from \"./AccountSASServices\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { SasIPRange, ipRangeToString } from \"./SasIPRange\";\nimport { SASProtocol, SASQueryParameters } from \"./SASQueryParameters\";\nimport { SERVICE_VERSION } from \"./utils/constants\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * AccountSASSignatureValues is used to generate a Shared Access Signature (SAS) for an Azure Storage account. Once\n * all the values here are set appropriately, call {@link generateAccountSASQueryParameters} to obtain a representation\n * of the SAS which can actually be applied to blob urls. Note: that both this class and {@link SASQueryParameters}\n * exist because the former is mutable and a logical representation while the latter is immutable and used to generate\n * actual REST requests.\n *\n * @see https://docs.microsoft.com/en-us/azure/storage/common/storage-dotnet-shared-access-signature-part-1\n * for more conceptual information on SAS\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n * for descriptions of the parameters, including which are required\n *\n * @export\n * @class AccountSASSignatureValues\n */\nexport interface AccountSASSignatureValues {\n  /**\n   * If not provided, this defaults to the service version targeted by this version of the library.\n   *\n   * @type {string}\n   * @memberof AccountSASSignatureValues\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols allowed.\n   *\n   * @type {SASProtocol}\n   * @memberof AccountSASSignatureValues\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   *\n   * @type {Date}\n   * @memberof AccountSASSignatureValues\n   */\n  startsOn?: Date;\n\n  /**\n   * The time after which the SAS will no longer work.\n   *\n   * @type {Date}\n   * @memberof AccountSASSignatureValues\n   */\n  expiresOn: Date;\n\n  /**\n   * Specifies which operations the SAS user may perform. Please refer to {@link AccountSASPermissions} for help\n   * constructing the permissions string.\n   *\n   * @type {AccountSASPermissions}\n   * @memberof AccountSASSignatureValues\n   */\n  permissions: AccountSASPermissions;\n\n  /**\n   * Optional. IP range allowed.\n   *\n   * @type {SasIPRange}\n   * @memberof AccountSASSignatureValues\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * The values that indicate the services accessible with this SAS. Please refer to {@link AccountSASServices} to\n   * construct this value.\n   *\n   * @type {string}\n   * @memberof AccountSASSignatureValues\n   */\n  services: string;\n\n  /**\n   * The values that indicate the resource types accessible with this SAS. Please refer\n   * to {@link AccountSASResourceTypes} to construct this value.\n   *\n   * @type {string}\n   * @memberof AccountSASSignatureValues\n   */\n  resourceTypes: string;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Generates a {@link SASQueryParameters} object which contains all SAS query parameters needed to make an actual\n * REST request.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n *\n * @param {AccountSASSignatureValues} accountSASSignatureValues\n * @param {StorageSharedKeyCredential} sharedKeyCredential\n * @returns {SASQueryParameters}\n * @memberof AccountSASSignatureValues\n */\nexport function generateAccountSASQueryParameters(\n  accountSASSignatureValues: AccountSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential\n): SASQueryParameters {\n  const version = accountSASSignatureValues.version\n    ? accountSASSignatureValues.version\n    : SERVICE_VERSION;\n\n  const parsedPermissions = AccountSASPermissions.parse(\n    accountSASSignatureValues.permissions.toString()\n  );\n  const parsedServices = AccountSASServices.parse(accountSASSignatureValues.services).toString();\n  const parsedResourceTypes = AccountSASResourceTypes.parse(\n    accountSASSignatureValues.resourceTypes\n  ).toString();\n\n  const stringToSign = [\n    sharedKeyCredential.accountName,\n    parsedPermissions,\n    parsedServices,\n    parsedResourceTypes,\n    accountSASSignatureValues.startsOn\n      ? truncatedISO8061Date(accountSASSignatureValues.startsOn, false)\n      : \"\",\n    truncatedISO8061Date(accountSASSignatureValues.expiresOn, false),\n    accountSASSignatureValues.ipRange ? ipRangeToString(accountSASSignatureValues.ipRange) : \"\",\n    accountSASSignatureValues.protocol ? accountSASSignatureValues.protocol : \"\",\n    version,\n    \"\" // Account SAS requires an additional newline character\n  ].join(\"\\n\");\n\n  const signature: string = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    version,\n    signature,\n    parsedPermissions.toString(),\n    parsedServices,\n    parsedResourceTypes,\n    accountSASSignatureValues.protocol,\n    accountSASSignatureValues.startsOn,\n    accountSASSignatureValues.expiresOn,\n    accountSASSignatureValues.ipRange\n  );\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a blob. Setting\n * a value to true means that any SAS which uses these permissions will grant permissions for that operation. Once all\n * the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link BlobSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n *\n * @export\n * @class BlobSASPermissions\n */\nexport class BlobSASPermissions {\n  /**\n   * Creates a {@link BlobSASPermissions} from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @static\n   * @param {string} permissions\n   * @returns {BlobSASPermissions}\n   * @memberof BlobSASPermissions\n   */\n  public static parse(permissions: string): BlobSASPermissions {\n    const blobSASPermissions = new BlobSASPermissions();\n\n    for (const char of permissions) {\n      switch (char) {\n        case \"r\":\n          blobSASPermissions.read = true;\n          break;\n        case \"a\":\n          blobSASPermissions.add = true;\n          break;\n        case \"c\":\n          blobSASPermissions.create = true;\n          break;\n        case \"w\":\n          blobSASPermissions.write = true;\n          break;\n        case \"d\":\n          blobSASPermissions.delete = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission: ${char}`);\n      }\n    }\n\n    return blobSASPermissions;\n  }\n\n  /**\n   * Specifies Read access granted.\n   *\n   * @type {boolean}\n   * @memberof BlobSASPermissions\n   */\n  public read: boolean = false;\n\n  /**\n   * Specifies Add access granted.\n   *\n   * @type {boolean}\n   * @memberof BlobSASPermissions\n   */\n  public add: boolean = false;\n\n  /**\n   * Specifies Create access granted.\n   *\n   * @type {boolean}\n   * @memberof BlobSASPermissions\n   */\n  public create: boolean = false;\n\n  /**\n   * Specifies Write access granted.\n   *\n   * @type {boolean}\n   * @memberof BlobSASPermissions\n   */\n  public write: boolean = false;\n\n  /**\n   * Specifies Delete access granted.\n   *\n   * @type {boolean}\n   * @memberof BlobSASPermissions\n   */\n  public delete: boolean = false;\n\n  /**\n   * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n   * order accepted by the service.\n   *\n   * @returns {string} A string which represents the BlobSASPermissions\n   * @memberof BlobSASPermissions\n   */\n  public toString(): string {\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    return permissions.join(\"\");\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a container.\n * Setting a value to true means that any SAS which uses these permissions will grant permissions for that operation.\n * Once all the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link BlobSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n *\n * @export\n * @class ContainerSASPermissions\n */\nexport class ContainerSASPermissions {\n  /**\n   * Creates an {@link ContainerSASPermissions} from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @static\n   * @param {string} permissions\n   * @returns {ContainerSASPermissions}\n   * @memberof ContainerSASPermissions\n   */\n  public static parse(permissions: string) {\n    const containerSASPermissions = new ContainerSASPermissions();\n\n    for (const char of permissions) {\n      switch (char) {\n        case \"r\":\n          containerSASPermissions.read = true;\n          break;\n        case \"a\":\n          containerSASPermissions.add = true;\n          break;\n        case \"c\":\n          containerSASPermissions.create = true;\n          break;\n        case \"w\":\n          containerSASPermissions.write = true;\n          break;\n        case \"d\":\n          containerSASPermissions.delete = true;\n          break;\n        case \"l\":\n          containerSASPermissions.list = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission ${char}`);\n      }\n    }\n\n    return containerSASPermissions;\n  }\n\n  /**\n   * Specifies Read access granted.\n   *\n   * @type {boolean}\n   * @memberof ContainerSASPermissions\n   */\n  public read: boolean = false;\n\n  /**\n   * Specifies Add access granted.\n   *\n   * @type {boolean}\n   * @memberof ContainerSASPermissions\n   */\n  public add: boolean = false;\n\n  /**\n   * Specifies Create access granted.\n   *\n   * @type {boolean}\n   * @memberof ContainerSASPermissions\n   */\n  public create: boolean = false;\n\n  /**\n   * Specifies Write access granted.\n   *\n   * @type {boolean}\n   * @memberof ContainerSASPermissions\n   */\n  public write: boolean = false;\n\n  /**\n   * Specifies Delete access granted.\n   *\n   * @type {boolean}\n   * @memberof ContainerSASPermissions\n   */\n  public delete: boolean = false;\n\n  /**\n   * Specifies List access granted.\n   *\n   * @type {boolean}\n   * @memberof ContainerSASPermissions\n   */\n  public list: boolean = false;\n\n  /**\n   * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n   * order accepted by the service.\n   *\n   * The order of the characters should be as specified here to ensure correctness.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @returns {string}\n   * @memberof ContainerSASPermissions\n   */\n  public toString(): string {\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    return permissions.join(\"\");\n  }\n}\n", "import { createHmac } from \"crypto\";\nimport { UserDelegationKey } from \"../BlobServiceClient\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * UserDelegationKeyCredential is only used for generation of user delegation SAS.\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-user-delegation-sas\n *\n * @export\n * @class UserDelegationKeyCredential\n */\nexport class UserDelegationKeyCredential {\n  /**\n   * Azure Storage account name; readonly.\n   *\n   * @type {string}\n   * @memberof UserDelegationKeyCredential\n   */\n  public readonly accountName: string;\n\n  /**\n   * Azure Storage user delegation key; readonly.\n   *\n   * @type {UserDelegationKey}\n   * @memberof UserDelegationKeyCredential\n   */\n  public readonly userDelegationKey: UserDelegationKey;\n\n  /**\n   * Key value in Buffer type.\n   *\n   * @private\n   * @type {Buffer}\n   * @memberof UserDelegationKeyCredential\n   */\n  private readonly key: Buffer;\n\n  /**\n   * Creates an instance of UserDelegationKeyCredential.\n   * @param {string} accountName\n   * @param {UserDelegationKey} userDelegationKey\n   * @memberof UserDelegationKeyCredential\n   */\n  constructor(accountName: string, userDelegationKey: UserDelegationKey) {\n    this.accountName = accountName;\n    this.userDelegationKey = userDelegationKey;\n    this.key = Buffer.from(userDelegationKey.value, \"base64\");\n  }\n\n  /**\n   * Generates a hash signature for an HTTP request or for a SAS.\n   *\n   * @param {string} stringToSign\n   * @returns {string}\n   * @memberof UserDelegationKeyCredential\n   */\n  public computeHMACSHA256(stringToSign: string): string {\n    // console.log(`stringToSign: ${JSON.stringify(stringToSign)}`);\n\n    return createHmac(\"sha256\", this.key)\n      .update(stringToSign, \"utf8\")\n      .digest(\"base64\");\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { BlobSASPermissions } from \"./BlobSASPermissions\";\nimport { ContainerSASPermissions } from \"./ContainerSASPermissions\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { SasIPRange, ipRangeToString } from \"./SasIPRange\";\nimport { SASProtocol } from \"./SASQueryParameters\";\nimport { SASQueryParameters } from \"./SASQueryParameters\";\nimport { UserDelegationKeyCredential } from \"./credentials/UserDelegationKeyCredential\";\nimport { UserDelegationKey } from \"./BlobServiceClient\";\nimport { SERVICE_VERSION } from \"./utils/constants\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * BlobSASSignatureValues is used to help generating Blob service SAS tokens for containers or blobs.\n *\n * @export\n * @class BlobSASSignatureValues\n */\nexport interface BlobSASSignatureValues {\n  /**\n   * The version of the service this SAS will target. If not specified, it will default to the version targeted by the\n   * library.\n   *\n   * @type {string}\n   * @memberof BlobSASSignatureValues\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols, HTTPS only or HTTPSandHTTP\n   *\n   * @type {SASProtocol}\n   * @memberof BlobSASSignatureValues\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   *\n   * @type {Date}\n   * @memberof BlobSASSignatureValues\n   */\n  startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The time after which the SAS will no longer work.\n   *\n   * @type {Date}\n   * @memberof BlobSASSignatureValues\n   */\n  expiresOn?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to either {@link ContainerSASPermissions} or {@link BlobSASPermissions} depending on the resource\n   * being accessed for help constructing the permissions string.\n   *\n   * @type {BlobSASPermissions}\n   * @memberof BlobSASSignatureValues\n   */\n  permissions?: BlobSASPermissions;\n\n  /**\n   * Optional. IP ranges allowed in this SAS.\n   *\n   * @type {SasIPRange}\n   * @memberof BlobSASSignatureValues\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * The name of the container the SAS user may access.\n   *\n   * @type {string}\n   * @memberof BlobSASSignatureValues\n   */\n  containerName: string;\n\n  /**\n   * Optional. The blob name of the SAS user may access. Required if snapshotTime is provided.\n   *\n   * @type {string}\n   * @memberof BlobSASSignatureValues\n   */\n  blobName?: string;\n\n  /**\n   * Optional. Snapshot timestamp string the SAS user may access. Only supported from API version 2018-11-09.\n   *\n   * @type {string}\n   * @memberof IBlobSASSignatureValues\n   */\n  snapshotTime?: string;\n\n  /**\n   * Optional. The name of the access policy on the container this SAS references if any.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   *\n   * @type {string}\n   * @memberof BlobSASSignatureValues\n   */\n  identifier?: string;\n\n  /**\n   * Optional. The cache-control header for the SAS.\n   *\n   * @type {string}\n   * @memberof BlobSASSignatureValues\n   */\n  cacheControl?: string;\n\n  /**\n   * Optional. The content-disposition header for the SAS.\n   *\n   * @type {string}\n   * @memberof BlobSASSignatureValues\n   */\n  contentDisposition?: string;\n\n  /**\n   * Optional. The content-encoding header for the SAS.\n   *\n   * @type {string}\n   * @memberof BlobSASSignatureValues\n   */\n  contentEncoding?: string;\n\n  /**\n   * Optional. The content-language header for the SAS.\n   *\n   * @type {string}\n   * @memberof BlobSASSignatureValues\n   */\n  contentLanguage?: string;\n\n  /**\n   * Optional. The content-type header for the SAS.\n   *\n   * @type {string}\n   * @memberof BlobSASSignatureValues\n   */\n  contentType?: string;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * Fill in the required details before running the following snippets.\n *\n * Example usage:\n *\n * ```js\n * // Generate service level SAS for a container\n * const containerSAS = generateBlobSASQueryParameters({\n *     containerName, // Required\n *     permissions: ContainerSASPermissions.parse(\"racwdl\"), // Required\n *     startsOn: new Date(), // Required\n *     expiresOn: new Date(new Date().valueOf() + 86400), // Optional. Date type\n *     ipRange: { start: \"0.0.0.0\", end: \"255.255.255.255\" }, // Optional\n *     protocol: SASProtocol.HttpsAndHttp, // Optional\n *     version: \"2016-05-31\" // Optional\n *   },\n *   sharedKeyCredential // StorageSharedKeyCredential - `new StorageSharedKeyCredential(account, accountKey)`\n * ).toString();\n * ```\n *\n * Example using an identifier:\n *\n * ```js\n * // Generate service level SAS for a container with identifier\n * // startsOn & permissions are optional when identifier is provided\n * const identifier = \"unique-id\";\n * await containerClient.setAccessPolicy(undefined, [\n *   {\n *     accessPolicy: {\n *       expiresOn: new Date(new Date().valueOf() + 86400), // Date type\n *       permissions: ContainerSASPermissions.parse(\"racwdl\").toString(),\n *       startsOn: new Date() // Date type\n *     },\n *     id: identifier\n *   }\n * ]);\n *\n * const containerSAS = generateBlobSASQueryParameters(\n *   {\n *     containerName, // Required\n *     identifier // Required\n *   },\n *   sharedKeyCredential // StorageSharedKeyCredential - `new StorageSharedKeyCredential(account, accountKey)`\n * ).toString();\n * ```\n *\n * Example using a blob name:\n *\n * ```js\n * // Generate service level SAS for a blob\n * const blobSAS = generateBlobSASQueryParameters({\n *     containerName, // Required\n *     blobName, // Required\n *     permissions: BlobSASPermissions.parse(\"racwd\"), // Required\n *     startsOn: new Date(), // Required\n *     expiresOn: new Date(new Date().valueOf() + 86400), // Optional. Date type\n *     cacheControl: \"cache-control-override\", // Optional\n *     contentDisposition: \"content-disposition-override\", // Optional\n *     contentEncoding: \"content-encoding-override\", // Optional\n *     contentLanguage: \"content-language-override\", // Optional\n *     contentType: \"content-type-override\", // Optional\n *     ipRange: { start: \"0.0.0.0\", end: \"255.255.255.255\" }, // Optional\n *     protocol: SASProtocol.HttpsAndHttp, // Optional\n *     version: \"2016-05-31\" // Optional\n *   },\n *   sharedKeyCredential // StorageSharedKeyCredential - `new StorageSharedKeyCredential(account, accountKey)`\n * ).toString();\n * ```\n *\n * @export\n * @param {BlobSASSignatureValues} blobSASSignatureValues\n * @param {StorageSharedKeyCredential} sharedKeyCredential\n * @returns {SASQueryParameters}\n */\nexport function generateBlobSASQueryParameters(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential\n): SASQueryParameters;\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Creates an instance of SASQueryParameters.\n * WARNING: identifier will be ignored when generating user delegation SAS, permissions and expiresOn are required.\n *\n * Example usage:\n *\n * ```js\n * // Generate user delegation SAS for a container\n * const userDelegationKey = await blobServiceClient.getUserDelegationKey(startsOn, expiresOn);\n * const containerSAS = generateBlobSASQueryParameters({\n *     containerName, // Required\n *     permissions: ContainerSASPermissions.parse(\"racwdl\"), // Required\n *     startsOn, // Required. Date type\n *     expiresOn, // Optional. Date type\n *     ipRange: { start: \"0.0.0.0\", end: \"255.255.255.255\" }, // Optional\n *     protocol: SASProtocol.HttpsAndHttp, // Optional\n *     version: \"2018-11-09\" // Must >= 2018-11-09 to generate user delegation SAS\n *   },\n *   userDelegationKey, // UserDelegationKey\n *   accountName\n * ).toString();\n * ```\n *\n * @export\n * @param {BlobSASSignatureValues} blobSASSignatureValues\n * @param {UserDelegationKey} userDelegationKey Return value of `blobServiceClient.getUserDelegationKey()`\n * @param {string} accountName\n * @returns {SASQueryParameters}\n */\nexport function generateBlobSASQueryParameters(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  userDelegationKey: UserDelegationKey,\n  accountName: string\n): SASQueryParameters;\n\nexport function generateBlobSASQueryParameters(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredentialOrUserDelegationKey: StorageSharedKeyCredential | UserDelegationKey,\n  accountName?: string\n): SASQueryParameters {\n  const version = blobSASSignatureValues.version ? blobSASSignatureValues.version : SERVICE_VERSION;\n\n  const sharedKeyCredential =\n    sharedKeyCredentialOrUserDelegationKey instanceof StorageSharedKeyCredential\n      ? sharedKeyCredentialOrUserDelegationKey\n      : undefined;\n  let userDelegationKeyCredential: UserDelegationKeyCredential | undefined;\n\n  if (sharedKeyCredential === undefined && accountName !== undefined) {\n    userDelegationKeyCredential = new UserDelegationKeyCredential(\n      accountName,\n      sharedKeyCredentialOrUserDelegationKey as UserDelegationKey\n    );\n  }\n\n  if (sharedKeyCredential === undefined && userDelegationKeyCredential === undefined) {\n    throw TypeError(\"Invalid sharedKeyCredential, userDelegationKey or accountName.\");\n  }\n\n  // Version 2018-11-09 adds support for the signed resource and signed blob snapshot time fields.\n  // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas#constructing-the-signature-string\n  if (version >= \"2018-11-09\") {\n    if (sharedKeyCredential !== undefined) {\n      return generateBlobSASQueryParameters20181109(blobSASSignatureValues, sharedKeyCredential);\n    } else {\n      return generateBlobSASQueryParametersUDK20181109(\n        blobSASSignatureValues,\n        userDelegationKeyCredential!\n      );\n    }\n  }\n\n  if (version >= \"2015-04-05\") {\n    if (sharedKeyCredential !== undefined) {\n      return generateBlobSASQueryParameters20150405(blobSASSignatureValues, sharedKeyCredential);\n    } else {\n      throw new RangeError(\n        \"'version' must be >= '2018-11-09' when generating user delegation SAS using user delegation key.\"\n      );\n    }\n  }\n\n  throw new RangeError(\"'version' must be >= '2015-04-05'.\");\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2015-04-05 AND BEFORE 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * @param {BlobSASSignatureValues} blobSASSignatureValues\n * @param {StorageSharedKeyCredential} sharedKeyCredential\n * @returns {SASQueryParameters}\n */\nfunction generateBlobSASQueryParameters20150405(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential\n): SASQueryParameters {\n  if (\n    !blobSASSignatureValues.identifier &&\n    !blobSASSignatureValues.permissions && !blobSASSignatureValues.expiresOn\n  ) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.\"\n    );\n  }\n\n  const version = blobSASSignatureValues.version ? blobSASSignatureValues.version : SERVICE_VERSION;\n  let resource: string = \"c\";\n  let verifiedPermissions: string | undefined;\n\n  if (blobSASSignatureValues.snapshotTime) {\n    throw RangeError(\"'version' must be >= '2018-11-09' when provided 'snapshotTime'.\");\n  }\n\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString()\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString()\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      sharedKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName\n    ),\n    blobSASSignatureValues.identifier,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    version,\n    blobSASSignatureValues.cacheControl ? blobSASSignatureValues.cacheControl : \"\",\n    blobSASSignatureValues.contentDisposition ? blobSASSignatureValues.contentDisposition : \"\",\n    blobSASSignatureValues.contentEncoding ? blobSASSignatureValues.contentEncoding : \"\",\n    blobSASSignatureValues.contentLanguage ? blobSASSignatureValues.contentLanguage : \"\",\n    blobSASSignatureValues.contentType ? blobSASSignatureValues.contentType : \"\"\n  ].join(\"\\n\");\n\n  const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    version,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    blobSASSignatureValues.protocol,\n    blobSASSignatureValues.startsOn,\n    blobSASSignatureValues.expiresOn,\n    blobSASSignatureValues.ipRange,\n    blobSASSignatureValues.identifier,\n    resource,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType\n  );\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * @param {BlobSASSignatureValues} blobSASSignatureValues\n * @param {StorageSharedKeyCredential} sharedKeyCredential\n * @returns {SASQueryParameters}\n */\nfunction generateBlobSASQueryParameters20181109(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential\n): SASQueryParameters {\n  if (\n    !blobSASSignatureValues.identifier &&\n    !blobSASSignatureValues.permissions && !blobSASSignatureValues.expiresOn\n  ) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when 'identifier' is not provided.\"\n    );\n  }\n\n  const version = blobSASSignatureValues.version ? blobSASSignatureValues.version : SERVICE_VERSION;\n  let resource: string = \"c\";\n  let verifiedPermissions: string | undefined;\n\n  if (blobSASSignatureValues.blobName === undefined && blobSASSignatureValues.snapshotTime) {\n    throw RangeError(\"Must provide 'blobName' when provided 'snapshotTime'.\");\n  }\n\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n    if (blobSASSignatureValues.snapshotTime) {\n      resource = \"bs\";\n    }\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString()\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString()\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      sharedKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName\n    ),\n    blobSASSignatureValues.identifier,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    version,\n    resource,\n    blobSASSignatureValues.snapshotTime,\n    blobSASSignatureValues.cacheControl ? blobSASSignatureValues.cacheControl : \"\",\n    blobSASSignatureValues.contentDisposition ? blobSASSignatureValues.contentDisposition : \"\",\n    blobSASSignatureValues.contentEncoding ? blobSASSignatureValues.contentEncoding : \"\",\n    blobSASSignatureValues.contentLanguage ? blobSASSignatureValues.contentLanguage : \"\",\n    blobSASSignatureValues.contentType ? blobSASSignatureValues.contentType : \"\"\n  ].join(\"\\n\");\n\n  const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    version,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    blobSASSignatureValues.protocol,\n    blobSASSignatureValues.startsOn,\n    blobSASSignatureValues.expiresOn,\n    blobSASSignatureValues.ipRange,\n    blobSASSignatureValues.identifier,\n    resource,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType\n  );\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n * IMPLEMENTATION FOR API VERSION FROM 2018-11-09.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: identifier will be ignored, permissions and expiresOn are required.\n *\n * @param {BlobSASSignatureValues} blobSASSignatureValues\n * @param {UserDelegationKeyCredential} userDelegationKeyCredential\n * @returns {SASQueryParameters}\n */\nfunction generateBlobSASQueryParametersUDK20181109(\n  blobSASSignatureValues: BlobSASSignatureValues,\n  userDelegationKeyCredential: UserDelegationKeyCredential\n): SASQueryParameters {\n  if (!blobSASSignatureValues.permissions || !blobSASSignatureValues.expiresOn) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for Blob SAS generation when generating user delegation SAS.\"\n    );\n  }\n\n  const version = blobSASSignatureValues.version ? blobSASSignatureValues.version : SERVICE_VERSION;\n  let resource: string = \"c\";\n  let verifiedPermissions: string | undefined;\n\n  if (blobSASSignatureValues.blobName === undefined && blobSASSignatureValues.snapshotTime) {\n    throw RangeError(\"Must provide 'blobName' when provided 'snapshotTime'.\");\n  }\n\n  if (blobSASSignatureValues.blobName) {\n    resource = \"b\";\n    if (blobSASSignatureValues.snapshotTime) {\n      resource = \"bs\";\n    }\n  }\n\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  if (blobSASSignatureValues.permissions) {\n    if (blobSASSignatureValues.blobName) {\n      verifiedPermissions = BlobSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString()\n      ).toString();\n    } else {\n      verifiedPermissions = ContainerSASPermissions.parse(\n        blobSASSignatureValues.permissions.toString()\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions ? verifiedPermissions : \"\",\n    blobSASSignatureValues.startsOn\n      ? truncatedISO8061Date(blobSASSignatureValues.startsOn, false)\n      : \"\",\n    blobSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(blobSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      userDelegationKeyCredential.accountName,\n      blobSASSignatureValues.containerName,\n      blobSASSignatureValues.blobName\n    ),\n    userDelegationKeyCredential.userDelegationKey.signedObjectId,\n    userDelegationKeyCredential.userDelegationKey.signedTenantId,\n    userDelegationKeyCredential.userDelegationKey.signedStartsOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedStartsOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedExpiresOn\n      ? truncatedISO8061Date(userDelegationKeyCredential.userDelegationKey.signedExpiresOn, false)\n      : \"\",\n    userDelegationKeyCredential.userDelegationKey.signedService,\n    userDelegationKeyCredential.userDelegationKey.signedVersion,\n    blobSASSignatureValues.ipRange ? ipRangeToString(blobSASSignatureValues.ipRange) : \"\",\n    blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n    version,\n    resource,\n    blobSASSignatureValues.snapshotTime,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType\n  ].join(\"\\n\");\n\n  const signature = userDelegationKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    version,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    blobSASSignatureValues.protocol,\n    blobSASSignatureValues.startsOn,\n    blobSASSignatureValues.expiresOn,\n    blobSASSignatureValues.ipRange,\n    blobSASSignatureValues.identifier,\n    resource,\n    blobSASSignatureValues.cacheControl,\n    blobSASSignatureValues.contentDisposition,\n    blobSASSignatureValues.contentEncoding,\n    blobSASSignatureValues.contentLanguage,\n    blobSASSignatureValues.contentType,\n    userDelegationKeyCredential.userDelegationKey\n  );\n}\n\nfunction getCanonicalName(accountName: string, containerName: string, blobName?: string): string {\n  // Container: \"/blob/account/containerName\"\n  // Blob:      \"/blob/account/containerName/blobName\"\n  const elements: string[] = [`/blob/${accountName}/${containerName}`];\n  if (blobName) {\n    elements.push(`/${blobName}`);\n  }\n  return elements.join(\"\");\n}\n", null, null, null, null, null, null, "const cache = require(\"@actions/cache\");\nconst core = require(\"@actions/core\");\nconst exec = require(\"@actions/exec\");\nconst fs = require(\"fs\");\nconst path = require(\"path\");\n\nconst keyPrefix = core.getInput(\"key-prefix\");\n\nlet key = core.getInput(\"key\");\nlet restoreKeys = core\n  .getInput(\"restore-keys\")\n  .split(\"\\n\")\n  .map((s) => s.trim())\n  .filter((x) => x !== \"\");\n\nasync function run(script, args) {\n  // We have to convert non-POSIX-compliant environment variable names to be\n  // compliant in order to read them in Bash.\n  // See issue https://github.com/actions/runner/issues/2283.\n  let env = { ...process.env };\n  for (const [key, value] of Object.entries(env)) {\n    const posixName = key.replace(/[- ]/g, \"_\").replace(/[^A-Za-z0-9_]/g, \"\");\n    if (posixName !== key) {\n      env[posixName] = value;\n    }\n  }\n\n  let srcDir = path.dirname(__filename);\n  let stdout = \"\";\n  await exec.exec(path.join(srcDir, script), args, {\n    env: env,\n    listeners: {\n      stdout: (data) => {\n        stdout += data.toString();\n      },\n    },\n  });\n\n  return stdout;\n}\n\nconst paths = [\n  \"/nix/store/\",\n  \"/nix/var/nix/profiles\",\n  \"/nix/var/nix/gcroots\",\n  \"/nix/var/nix/db\",\n  \"/etc/nix\",\n  \"/home/\" + process.env.USER + \"/.nix-profile\",\n];\n\nasync function instantiateKey() {\n  console.log(\"Instantiating Nix store cache key based on input files\");\n  let key = await run(\"core.sh\", [\"instantiate-key\"]);\n  return key.trim().split(\"-\");\n}\n\nasync function instantiateRestoreKeys() {\n  const keyParts = await instantiateKey();\n  let keys = [];\n  for (let i = keyParts.length; i >= 0; i--) {\n    keys.push(keyPrefix + keyParts.slice(0, i).join(\"-\"));\n  }\n  return keys;\n}\n\nasync function restoreCache() {\n  console.log(\"Restoring cache\");\n  const cacheKey = await cache.restoreCache(paths, key, restoreKeys);\n  if (cacheKey === undefined) {\n    console.log(\"No cache found for given key\");\n  } else {\n    console.log(`Cache restored from ${cacheKey}`);\n  }\n  return cacheKey;\n}\n\nasync function saveCache(cacheKey) {\n  if (cacheKey === undefined || cacheKey !== key) {\n    console.log(\"Preparing save\");\n    await run(\"core.sh\", [\"prepare-save\"]);\n    console.log(\"Saving cache with key: \" + key);\n    await cache.saveCache(paths, key);\n  }\n}\n\nasync function installWithNix(cacheKey) {\n  if (cacheKey === undefined) {\n    console.log(\"Installing with Nix\");\n    await run(\"core.sh\", [\"install-with-nix\"]);\n  } else {\n    console.log(\"Installing from cache\");\n    await run(\"core.sh\", [\"install-from-cache\"]);\n  }\n}\n\nasync function main() {\n  if (key === \"\" && keyPrefix === \"\") {\n    throw \"either key or key-prefix must be set\";\n  }\n\n  if (key === \"\") {\n    console.log(\"Pre-instantiating restore keys\");\n    restoreKeys = await instantiateRestoreKeys();\n  }\n\n  console.log(\"Preparing restore\");\n  await run(\"core.sh\", [\"prepare-restore\"]);\n\n  const cacheKey = await restoreCache();\n\n  await installWithNix(cacheKey);\n\n  // Save the key for later use.\n  const stateKey = \"cache-install-\" + (key === \"\" ? keyPrefix : key);\n  const stateVal = cacheKey === undefined ? \"\" : cacheKey;\n  fs.appendFileSync(process.env.GITHUB_STATE, `${stateKey}=${stateVal}`);\n}\n\nasync function post(cacheKey) {\n  // Now that we have Nix installed, we can go ahead and recalculate our cache\n  // key.\n  if (key === \"\") {\n    console.log(\"Re-instantiating cache save key\");\n    const keys = await instantiateRestoreKeys();\n    if (keys[0] == keys[1]) {\n      throw new Error(\"Instantiation of key failed\");\n    }\n    key = keys[0];\n  }\n\n  await saveCache(cacheKey);\n}\n\n(async function run() {\n  const stateKey = \"cache-install-\" + (key === \"\" ? keyPrefix : key);\n  if (process.env[`STATE_${stateKey}`] === undefined) {\n    await main();\n  } else {\n    const cacheKey = process.env[`STATE_${stateKey}`];\n    await post(cacheKey === \"\" ? undefined : cacheKey);\n  }\n  // Run the async function and exit when an exception occurs.\n})().catch((e) => {\n  console.error(e);\n  process.exit(1);\n});\n"],
  "mappings": "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c,ECL1CC,GAAsB,SACtBC,GAA0B,aAE1BC,GAA2C,IAAM,KAAO,KACxDC,GAA2C,IAAM,KAAO,KACxDC,GAAgC,IAChCC,GAA0C,EAAI,KAAO,KACrDC,GAA4C,EAAI,KAAO,KACvDC,GAA8C,EAI9CC,GAAwC,qCAExCC,GAAe,CAC1B,WAAY,CACV,uBAAwB,IACxB,UAAW,MACX,SAAU,WACV,QAAS,YAIAC,GAAoB,CAC/B,cAAe,IACf,cAAe,IACf,eAAgB,IAChB,mBAAoB,IACpB,2BAA4B,KAGjBC,GAAkB,CAC7B,cAAe,gBACf,qBAAsB,SACtB,iBAAkB,mBAClB,WAAY,aACZ,iBAAkB,mBAClB,eAAgB,iBAChB,YAAa,cACb,0BAA2B,4BAC3B,aAAc,eACd,OAAQ,SACR,KAAM,OACN,SAAU,WACV,kBAAmB,oBACnB,cAAe,gBACf,oBAAqB,sBACrB,mBAAoB,QACpB,MAAO,QACP,WAAY,aACZ,uBAAwB,yBACxB,iBAAkB,mBAClB,UAAW,YACX,gBAAiB,kBACjB,aAAc,gBAGHC,GAAW,GAGXC,GAAY,EAAI,KAAO,KACvBC,GAAoB,IACpBC,GAA6B,EAAIF,GACjCG,GAAmB;EACnBC,GAAmB,WAEnBC,GAA2B,SAE3BC,GAA8B,uNAE9BC,GAAuC,CAClD,8BACA,gBACA,iBACA,eACA,OACA,aACA,cACA,oBACA,aACA,yBACA,YACA,kBACA,kBACA,gCACA,eACA,gBACA,sBACA,mBACA,mBACA,cACA,gBACA,OACA,gBACA,SACA,OACA,qBACA,mBACA,4BACA,eACA,qBACA,mBACA,+BACA,sBACA,mBACA,oBACA,aACA,gCACA,wBACA,gBACA,oBACA,WACA,oBACA,gBACA,sBACA,mBACA,+BACA,4BACA,oBACA,sBACA,0BACA,0BACA,kCACA,gCACA,8BACA,gCACA,6BACA,6BACA,2BACA,wBACA,yBACA,0BACA,4BACA,iBACA,iCACA,qBACA,gCACA,wBACA,6BACA,sCACA,4BACA,6BACA,6BACA,6BACA,wBACA,oBACA,0BACA,sBACA,gBACA,kBACA,kBACA,yBACA,6BACA,0B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",
  "names": ["toCommandValue", "input", "exports", "toCommandProperties", "annotationProperties", "os", "__importStar", "utils_1", "issueCommand", "command", "properties", "message", "cmd", "Command", "exports", "issue", "name", "CMD_STRING", "cmdStr", "first", "key", "val", "escapeProperty", "escapeData", "s", "require_rng", "__commonJSMin", "exports", "rng", "_crypto", "_interopRequireDefault", "obj", "rnds8Pool", "poolPtr", "require_regex", "__commonJSMin", "exports", "_default", "require_validate", "__commonJSMin", "exports", "_regex", "_interopRequireDefault", "obj", "validate", "uuid", "_default", "require_stringify", "__commonJSMin", "exports", "_validate", "_interopRequireDefault", "obj", "byteToHex", "i", "stringify", "arr", "offset", "uuid", "_default", "require_v1", "__commonJSMin", "exports", "_rng", "_interopRequireDefault", "_stringify", "obj", "_nodeId", "_clockseq", "_lastMSecs", "_lastNSecs", "v1", "options", "buf", "offset", "b", "node", "clockseq", "seedBytes", "msecs", "nsecs", "dt", "tl", "tmh", "n", "_default", "require_parse", "__commonJSMin", "exports", "_validate", "_interopRequireDefault", "obj", "parse", "uuid", "v", "arr", "_default", "require_v35", "__commonJSMin", "exports", "_default", "_stringify", "_interopRequireDefault", "_parse", "obj", "stringToBytes", "str", "bytes", "i", "DNS", "URL", "name", "version", "hashfunc", "generateUUID", "value", "namespace", "buf", "offset", "require_md5", "__commonJSMin", "exports", "_crypto", "_interopRequireDefault", "obj", "md5", "bytes", "_default", "require_v3", "__commonJSMin", "exports", "_v", "_interopRequireDefault", "_md", "obj", "v3", "_default", "require_v4", "__commonJSMin", "exports", "_rng", "_interopRequireDefault", "_stringify", "obj", "v4", "options", "buf", "offset", "rnds", "i", "_default", "require_sha1", "__commonJSMin", "exports", "_crypto", "_interopRequireDefault", "obj", "sha1", "bytes", "_default", "require_v5", "__commonJSMin", "exports", "_v", "_interopRequireDefault", "_sha", "obj", "v5", "_default", "require_nil", "__commonJSMin", "exports", "_default", "require_version", "__commonJSMin", "exports", "_validate", "_interopRequireDefault", "obj", "version", "uuid", "_default", "require_dist", "__commonJSMin", "exports", "_v", "_v2", "_v3", "_v4", "_nil", "_version", "_validate", "_stringify", "_parse", "_interopRequireDefault", "obj", "fs", "__importStar", "os", "uuid_1", "utils_1", "issueFileCommand", "command", "message", "filePath", "exports", "prepareKeyValueMessage", "key", "value", "delimiter", "convertedValue", "getProxyUrl", "reqUrl", "usingSsl", "checkBypass", "proxyVar", "exports", "noProxy", "reqPort", "upperReqHosts", "upperNoProxyItem", "x", "require_tunnel", "__commonJSMin", "exports", "net", "tls", "http", "https", "events", "assert", "util", "httpOverHttp", "httpsOverHttp", "httpOverHttps", "httpsOverHttps", "options", "agent", "TunnelingAgent", "createSecureSocket", "self", "socket", "host", "port", "localAddress", "toOptions", "i", "len", "pending", "req", "mergeOptions", "onFree", "onCloseOrRemove", "err", "cb", "placeholder", "connectOptions", "debug", "connectReq", "onResponse", "onUpgrade", "onConnect", "onError", "res", "head", "error", "cause", "pos", "hostHeader", "tlsOptions", "secureSocket", "target", "overrides", "keys", "j", "keyLen", "k", "args", "require_tunnel", "__commonJSMin", "exports", "module", "http", "__importStar", "https", "pm", "tunnel", "HttpCodes", "exports", "Headers", "MediaTypes", "getProxyUrl", "serverUrl", "proxyUrl", "HttpRedirectCodes", "HttpResponseRetryCodes", "RetryableHttpVerbs", "ExponentialBackoffCeiling", "ExponentialBackoffTimeSlice", "HttpClientError", "message", "statusCode", "HttpClientResponse", "resolve", "__awaiter", "output", "chunk", "isHttps", "requestUrl", "HttpClient", "userAgent", "handlers", "requestOptions", "additionalHeaders", "data", "verb", "stream", "res", "obj", "headers", "parsedUrl", "info", "maxTries", "numTries", "response", "authenticationHandler", "handler", "redirectsRemaining", "redirectUrl", "parsedRedirectUrl", "header", "reject", "callbackForResult", "err", "onResult", "callbackCalled", "handleResult", "req", "msg", "socket", "sock", "method", "usingSsl", "defaultPort", "lowercaseKeys", "_default", "clientHeader", "agent", "useProxy", "maxSockets", "agentOptions", "tunnelAgent", "overHttps", "options", "retryNumber", "ms", "dateTimeDeserializer", "key", "value", "a", "contents", "c", "k", "BasicCredentialHandler", "username", "password", "options", "exports", "BearerCredentialHandler", "token", "PersonalAccessTokenCredentialHandler", "http_client_1", "auth_1", "core_1", "OidcClient", "allowRetry", "maxRetry", "requestOptions", "token", "runtimeUrl", "id_token_url", "id_token", "_a", "error", "audience", "encodedAudience", "exports", "os_1", "fs_1", "access", "appendFile", "writeFile", "exports", "Summary", "pathFromEnv", "tag", "content", "attrs", "htmlAttrs", "key", "value", "options", "overwrite", "filePath", "text", "addEOL", "code", "lang", "element", "items", "ordered", "listItems", "item", "rows", "tableBody", "row", "cells", "cell", "header", "data", "colspan", "rowspan", "label", "src", "alt", "width", "height", "level", "allowedTag", "cite", "href", "_summary", "path", "__importStar", "toPosixPath", "pth", "exports", "toWin32Path", "toPlatformPath", "command_1", "file_command_1", "utils_1", "os", "__importStar", "path", "oidc_utils_1", "ExitCode", "exports", "exportVariable", "name", "val", "convertedVal", "setSecret", "secret", "addPath", "inputPath", "getInput", "options", "getMultilineInput", "inputs", "x", "input", "getBooleanInput", "trueValue", "falseValue", "setOutput", "value", "setCommandEcho", "enabled", "setFailed", "message", "error", "isDebug", "debug", "properties", "warning", "notice", "info", "startGroup", "endGroup", "group", "fn", "result", "saveState", "getState", "getIDToken", "aud", "summary_1", "summary_2", "path_utils_1", "assert_1", "fs", "path", "_a", "exports", "exists", "fsPath", "err", "isDirectory", "useStat", "isRooted", "p", "normalizeSeparators", "mkdirP", "maxDepth", "depth", "stats", "tryGetExecutablePath", "filePath", "extensions", "upperExt", "validExt", "isUnixExecutable", "originalFilePath", "extension", "directory", "upperName", "actualName", "childProcess", "path", "util_1", "ioUtil", "exec", "cp", "source", "dest", "options", "force", "recursive", "readCopyOptions", "destStat", "newDest", "cpDirRecursive", "copyFile", "exports", "mv", "destExists", "rmRF", "mkdirP", "inputPath", "err", "isDir", "fsPath", "which", "tool", "check", "extensions", "extension", "filePath", "directories", "p", "directory", "sourceDir", "destDir", "currentDepth", "files", "fileName", "srcFile", "destFile", "e", "symlinkFull", "os", "__importStar", "events", "child", "path", "io", "ioUtil", "IS_WINDOWS", "ToolRunner", "toolPath", "args", "options", "message", "noPrefix", "cmd", "a", "data", "strBuffer", "onLine", "s", "line", "err", "argline", "str", "end", "upperToolPath", "arg", "cmdSpecialChars", "needsQuotes", "char", "x", "reverse", "quoteHit", "i", "result", "resolve", "reject", "optionsNonNull", "state", "ExecState", "fileName", "cp", "stdbuffer", "errbuffer", "code", "error", "exitCode", "exports", "argStringToArray", "argString", "inQuotes", "escaped", "append", "c", "tr", "__importStar", "exec", "commandLine", "args", "options", "commandArgs", "toolPath", "exports", "core", "getOptions", "copy", "result", "exports", "assert", "path", "IS_WINDOWS", "dirname", "p", "safeTrimTrailingSeparator", "result", "exports", "ensureAbsoluteRoot", "root", "itemPath", "hasAbsoluteRoot", "cwd", "normalizeSeparators", "hasRoot", "MatchKind", "exports", "pathHelper", "internal_match_kind_1", "IS_WINDOWS", "getSearchPaths", "patterns", "x", "searchPathMap", "pattern", "key", "result", "foundAncestor", "tempKey", "parent", "exports", "match", "itemPath", "partialMatch", "require_concat_map", "__commonJSMin", "exports", "module", "xs", "fn", "res", "x", "isArray", "require_balanced_match", "__commonJSMin", "exports", "module", "balanced", "a", "b", "str", "maybeMatch", "r", "range", "reg", "m", "begs", "beg", "left", "right", "result", "ai", "bi", "i", "require_brace_expansion", "__commonJSMin", "exports", "module", "concatMap", "balanced", "expandTop", "escSlash", "escOpen", "escClose", "escComma", "escPeriod", "numeric", "str", "escapeBraces", "unescapeBraces", "parseCommaParts", "parts", "m", "pre", "body", "post", "p", "postParts", "expand", "embrace", "isPadded", "el", "lte", "i", "y", "gte", "isTop", "expansions", "isNumericSequence", "isAlphaSequence", "isSequence", "isOptions", "n", "N", "x", "width", "incr", "test", "reverse", "pad", "c", "need", "z", "j", "k", "expansion", "require_minimatch", "__commonJSMin", "exports", "module", "minimatch", "Minimatch", "path", "GLOBSTAR", "expand", "plTypes", "qmark", "star", "twoStarDot", "twoStarNoDot", "reSpecials", "charSet", "s", "set", "c", "slashSplit", "filter", "pattern", "options", "p", "list", "ext", "a", "b", "k", "def", "orig", "m", "assertValidPattern", "make", "si", "parseNegate", "negate", "negateOffset", "i", "l", "braceExpand", "MAX_PATTERN_LENGTH", "parse", "SUBPARSE", "isSub", "re", "hasMagic", "escaping", "patternListStack", "negativeLists", "stateChar", "inClass", "reClassStart", "classStart", "patternStart", "self", "clearStateChar", "len", "pl", "cs", "sp", "tail", "_", "$1", "$2", "t", "addPatternStart", "n", "nl", "nlBefore", "nlFirst", "nlLast", "nlAfter", "openParensBefore", "cleanAfter", "dollar", "newRe", "globUnescape", "flags", "regExp", "makeRe", "twoStar", "regExpEscape", "mm", "f", "partial", "filename", "file", "hit", "fi", "pi", "fl", "fr", "pr", "swallowee", "assert", "path", "pathHelper", "IS_WINDOWS", "Path", "itemPath", "remaining", "dir", "basename", "i", "segment", "result", "skipSlash", "exports", "assert", "os", "path", "pathHelper", "minimatch_1", "internal_match_kind_1", "internal_path_1", "IS_WINDOWS", "Pattern", "patternOrNegate", "segments", "pattern", "root", "foundGlob", "searchSegments", "x", "minimatchOptions", "itemPath", "s", "literalSegments", "i", "homedir", "segment", "literal", "c", "set", "closed", "i2", "c2", "exports", "SearchState", "path", "level", "exports", "core", "fs", "globOptionsHelper", "path", "patternHelper", "internal_match_kind_1", "internal_pattern_1", "internal_search_state_1", "IS_WINDOWS", "DefaultGlobber", "options", "result", "_b", "__asyncValues", "_c", "itemPath", "patterns", "pattern", "stack", "searchPath", "__await", "err", "traversalChain", "item", "match", "partialMatch", "stats", "childLevel", "childItems", "x", "lines", "line", "realPath", "exports", "internal_globber_1", "create", "patterns", "options", "exports", "require_semver", "__commonJSMin", "exports", "module", "SemVer", "debug", "args", "MAX_LENGTH", "MAX_SAFE_INTEGER", "MAX_SAFE_COMPONENT_LENGTH", "re", "src", "t", "R", "tok", "n", "tildeTrimReplace", "caretTrimReplace", "comparatorTrimReplace", "i", "parse", "version", "options", "r", "valid", "v", "clean", "s", "m", "id", "num", "other", "compareIdentifiers", "a", "b", "release", "identifier", "inc", "loose", "diff", "version1", "version2", "eq", "v1", "v2", "prefix", "defaultResult", "key", "numeric", "anum", "bnum", "rcompareIdentifiers", "major", "minor", "patch", "compare", "compareLoose", "compareBuild", "versionA", "versionB", "rcompare", "sort", "list", "rsort", "gt", "lt", "neq", "gte", "lte", "cmp", "op", "Comparator", "comp", "ANY", "rangeTmp", "Range", "satisfies", "sameDirectionIncreasing", "sameDirectionDecreasing", "sameSemVer", "differentDirectionsInclusive", "oppositeDirectionsLessThan", "oppositeDirectionsGreaterThan", "range", "c", "comps", "hr", "hyphenReplace", "compRe", "set", "parseComparator", "thisComparators", "isSatisfiable", "rangeComparators", "thisComparator", "rangeComparator", "comparators", "result", "remainingComparators", "testComparator", "otherComparator", "toComparators", "replaceCarets", "replaceTildes", "replaceXRanges", "replaceStars", "isX", "replaceTilde", "_", "M", "p", "pr", "ret", "replaceCaret", "replaceXRange", "gtlt", "xM", "xm", "xp", "anyX", "$0", "from", "fM", "fm", "fp", "fpr", "fb", "to", "tM", "tm", "tp", "tpr", "tb", "testSet", "allowed", "maxSatisfying", "versions", "max", "maxSV", "rangeObj", "minSatisfying", "min", "minSV", "minVersion", "minver", "comparator", "compver", "validRange", "ltr", "outside", "gtr", "hilo", "gtfn", "ltefn", "ltfn", "ecomp", "high", "low", "prerelease", "parsed", "intersects", "r1", "r2", "coerce", "match", "next", "require_rng", "__commonJSMin", "exports", "module", "crypto", "require_bytesToUuid", "__commonJSMin", "exports", "module", "byteToHex", "i", "bytesToUuid", "buf", "offset", "bth", "require_v1", "__commonJSMin", "exports", "module", "rng", "bytesToUuid", "_nodeId", "_clockseq", "_lastMSecs", "_lastNSecs", "v1", "options", "buf", "offset", "b", "node", "clockseq", "seedBytes", "msecs", "nsecs", "dt", "tl", "tmh", "n", "require_v4", "__commonJSMin", "exports", "module", "rng", "bytesToUuid", "v4", "options", "buf", "offset", "rnds", "ii", "require_uuid", "__commonJSMin", "exports", "module", "v1", "v4", "uuid", "CacheFilename", "exports", "CompressionMethod", "core", "__importStar", "exec", "glob", "io", "fs", "path", "semver", "util", "uuid_1", "constants_1", "createTempDirectory", "IS_WINDOWS", "tempDirectory", "baseLocation", "dest", "exports", "getArchiveFileSizeIsBytes", "filePath", "resolvePaths", "patterns", "paths", "workspace", "_b", "globber", "_c", "__asyncValues", "_d", "file", "relativeFile", "unlinkFile", "getVersion", "app", "versionOutput", "data", "err", "getCompressionMethod", "isGnuTarInstalled", "version", "getCacheFileName", "compressionMethod", "assertDefined", "name", "value", "require_proxy", "__commonJSMin", "exports", "getProxyUrl", "reqUrl", "usingSsl", "proxyUrl", "checkBypass", "proxyVar", "noProxy", "reqPort", "upperReqHosts", "upperNoProxyItem", "x", "require_http_client", "__commonJSMin", "exports", "http", "https", "pm", "tunnel", "HttpCodes", "Headers", "MediaTypes", "getProxyUrl", "serverUrl", "proxyUrl", "HttpRedirectCodes", "HttpResponseRetryCodes", "RetryableHttpVerbs", "ExponentialBackoffCeiling", "ExponentialBackoffTimeSlice", "HttpClientError", "message", "statusCode", "HttpClientResponse", "resolve", "reject", "output", "chunk", "isHttps", "requestUrl", "HttpClient", "userAgent", "handlers", "requestOptions", "additionalHeaders", "data", "verb", "stream", "res", "obj", "headers", "parsedUrl", "info", "maxTries", "numTries", "response", "authenticationHandler", "i", "redirectsRemaining", "redirectUrl", "parsedRedirectUrl", "header", "callbackForResult", "err", "onResult", "socket", "callbackCalled", "handleResult", "req", "msg", "sock", "method", "usingSsl", "defaultPort", "handler", "lowercaseKeys", "c", "k", "_default", "clientHeader", "agent", "useProxy", "maxSockets", "agentOptions", "tunnelAgent", "overHttps", "options", "retryNumber", "ms", "key", "value", "a", "contents", "require_auth", "__commonJSMin", "exports", "BasicCredentialHandler", "username", "password", "options", "response", "httpClient", "requestInfo", "objs", "BearerCredentialHandler", "token", "PersonalAccessTokenCredentialHandler", "require_rng", "__commonJSMin", "exports", "rng", "_crypto", "_interopRequireDefault", "obj", "rnds8", "require_regex", "__commonJSMin", "exports", "_default", "require_validate", "__commonJSMin", "exports", "_regex", "_interopRequireDefault", "obj", "validate", "uuid", "_default", "require_stringify", "__commonJSMin", "exports", "_validate", "_interopRequireDefault", "obj", "byteToHex", "i", "stringify", "arr", "offset", "uuid", "_default", "require_v1", "__commonJSMin", "exports", "_rng", "_interopRequireDefault", "_stringify", "obj", "_nodeId", "_clockseq", "_lastMSecs", "_lastNSecs", "v1", "options", "buf", "offset", "b", "node", "clockseq", "seedBytes", "msecs", "nsecs", "dt", "tl", "tmh", "n", "_default", "require_parse", "__commonJSMin", "exports", "_validate", "_interopRequireDefault", "obj", "parse", "uuid", "v", "arr", "_default", "require_v35", "__commonJSMin", "exports", "_default", "_stringify", "_interopRequireDefault", "_parse", "obj", "stringToBytes", "str", "bytes", "i", "DNS", "URL", "name", "version", "hashfunc", "generateUUID", "value", "namespace", "buf", "offset", "require_md5", "__commonJSMin", "exports", "_crypto", "_interopRequireDefault", "obj", "md5", "bytes", "_default", "require_v3", "__commonJSMin", "exports", "_v", "_interopRequireDefault", "_md", "obj", "v3", "_default", "require_v4", "__commonJSMin", "exports", "_rng", "_interopRequireDefault", "_stringify", "obj", "v4", "options", "buf", "offset", "rnds", "i", "_default", "require_sha1", "__commonJSMin", "exports", "_crypto", "_interopRequireDefault", "obj", "sha1", "bytes", "_default", "require_v5", "__commonJSMin", "exports", "_v", "_interopRequireDefault", "_sha", "obj", "v5", "_default", "require_nil", "__commonJSMin", "exports", "_default", "require_version", "__commonJSMin", "exports", "_validate", "_interopRequireDefault", "obj", "version", "uuid", "_default", "require_dist", "__commonJSMin", "exports", "_v", "_v2", "_v3", "_v4", "_nil", "_version", "_validate", "_stringify", "_parse", "_interopRequireDefault", "obj", "require_tslib", "__commonJSMin", "exports", "module", "__extends", "__assign", "__rest", "__decorate", "__param", "__metadata", "__awaiter", "__generator", "__exportStar", "__values", "__read", "__spread", "__spreadArrays", "__await", "__asyncGenerator", "__asyncDelegator", "__asyncValues", "__makeTemplateObject", "__importStar", "__importDefault", "__classPrivateFieldGet", "__classPrivateFieldSet", "__createBinding", "factory", "root", "createExporter", "previous", "id", "v", "exporter", "extendStatics", "d", "b", "p", "__", "t", "s", "i", "n", "e", "decorators", "target", "key", "desc", "c", "r", "paramIndex", "decorator", "metadataKey", "metadataValue", "thisArg", "_arguments", "P", "generator", "adopt", "value", "resolve", "reject", "fulfilled", "step", "rejected", "result", "body", "_", "f", "y", "g", "verb", "op", "m", "o", "k", "k2", "ar", "error", "il", "a", "j", "jl", "q", "resume", "settle", "fulfill", "cooked", "raw", "__setModuleDefault", "mod", "receiver", "privateMap", "require_psl", "__commonJSMin", "exports", "Punycode", "internals", "rule", "str", "suffix", "domain", "punyDomain", "memo", "input", "ascii", "labels", "label", "i", "error", "parsed", "domainParts", "handlePunycode", "tldParts", "privateParts", "require_pubsuffix_psl", "__commonJSMin", "exports", "psl", "getPublicSuffix", "domain", "require_store", "__commonJSMin", "exports", "Store", "domain", "path", "key", "cb", "allowSpecialUseDomain", "cookie", "oldCookie", "newCookie", "require_universalify", "__commonJSMin", "exports", "fn", "resolve", "reject", "err", "res", "cb", "r", "require_permuteDomain", "__commonJSMin", "exports", "pubsuffix", "SPECIAL_USE_DOMAINS", "permuteDomain", "domain", "allowSpecialUseDomain", "pubSuf", "domainParts", "parts", "cur", "permutations", "require_pathMatch", "__commonJSMin", "exports", "pathMatch", "reqPath", "cookiePath", "require_memstore", "__commonJSMin", "exports", "fromCallback", "Store", "permuteDomain", "pathMatch", "util", "MemoryCookieStore", "domain", "path", "key", "cb", "allowSpecialUseDomain", "results", "pathMatcher", "domainIndex", "cookiePath", "pathIndex", "curPath", "domains", "idx", "curDomain", "cookie", "oldCookie", "newCookie", "cookies", "a", "b", "name", "require_version", "__commonJSMin", "exports", "module", "require_cookie", "__commonJSMin", "exports", "punycode", "urlParse", "util", "pubsuffix", "Store", "MemoryCookieStore", "pathMatch", "VERSION", "fromCallback", "COOKIE_OCTETS", "CONTROL_CHARS", "TERMINATORS", "PATH_VALUE", "DATE_DELIM", "MONTH_TO_NUM", "MAX_TIME", "MIN_TIME", "SAME_SITE_CONTEXT_VAL_ERR", "checkSameSiteContext", "value", "context", "PrefixSecurityEnum", "IP_REGEX_LOWERCASE", "parseDigits", "token", "minDigits", "maxDigits", "trailingOK", "count", "c", "parseTime", "parts", "result", "num", "parseMonth", "parseDate", "str", "tokens", "hour", "minute", "second", "dayOfMonth", "month", "year", "i", "formatDate", "date", "canonicalDomain", "domainMatch", "domStr", "canonicalize", "idx", "defaultPath", "path", "rightSlash", "trimTerminator", "t", "terminatorIdx", "parseCookiePair", "cookiePair", "looseMode", "firstEq", "cookieName", "cookieValue", "Cookie", "parse", "options", "firstSemi", "unparsed", "cookie_avs", "av", "av_sep", "av_key", "av_value", "exp", "delta", "domain", "isSecurePrefixConditionMet", "cookie", "isHostPrefixConditionMet", "jsonParse", "obj", "e", "fromJSON", "prop", "cookieDefaults", "cookieCompare", "a", "b", "cmp", "aPathLen", "aTime", "bTime", "permutePath", "permutations", "lindex", "getCookieContext", "url", "now", "hostOnly", "createAge", "accessAge", "cdomain", "age", "val", "ssCanon", "ext", "expires", "relativeTo", "millisec", "getNormalizedPrefixSecurity", "prefixSecurity", "normalizedPrefixSecurity", "CookieJar", "store", "syncWrap", "cb", "err", "host", "loose", "sameSiteContext", "ignoreErrorForPrefixSecurity", "errorFound", "errorMsg", "oldCookie", "newCookie", "withCookie", "next", "secure", "sameSiteLevel", "http", "expireCheck", "allPaths", "matchingCookie", "cookies", "args", "type", "serialized", "putNext", "newStore", "completedCount", "removeErrors", "removeCookieCb", "removeErr", "strOrObj", "jar", "name", "method", "syncErr", "syncResult", "require_lib", "__commonJSMin", "exports", "module", "conversions", "sign", "x", "evenRound", "createNumberConversion", "bitLength", "typeOpts", "lowerBound", "upperBound", "moduloVal", "moduloBound", "V", "opts", "val", "c", "i", "S", "n", "U", "d", "a", "b", "require_utils", "__commonJSMin", "exports", "module", "target", "source", "keys", "i", "impl", "wrapper", "require_tr46", "__commonJSMin", "exports", "module", "punycode", "mappingTable", "PROCESSING_OPTIONS", "normalize", "str", "s", "findStatus", "val", "start", "end", "mid", "target", "regexAstralSymbols", "countSymbols", "string", "mapChars", "domain_name", "useSTD3", "processing_option", "hasError", "processed", "len", "i", "codePoint", "status", "combiningMarksRegex", "validateLabel", "label", "error", "processing", "result", "labels", "validation", "verifyDnsLength", "l", "total", "require_url_state_machine", "__commonJSMin", "exports", "module", "punycode", "tr46", "specialSchemes", "failure", "countSymbols", "str", "at", "input", "idx", "c", "isASCIIDigit", "isASCIIAlpha", "isASCIIAlphanumeric", "isASCIIHex", "isSingleDot", "buffer", "isDoubleDot", "isWindowsDriveLetterCodePoints", "cp1", "cp2", "isWindowsDriveLetterString", "string", "isNormalizedWindowsDriveLetterString", "containsForbiddenHostCodePoint", "containsForbiddenHostCodePointExcludingPercent", "isSpecialScheme", "scheme", "isSpecial", "url", "defaultPort", "percentEncode", "hex", "utf8PercentEncode", "buf", "utf8PercentDecode", "output", "isC0ControlPercentEncode", "extraPathPercentEncodeSet", "isPathPercentEncode", "extraUserinfoPercentEncodeSet", "isUserinfoPercentEncode", "percentEncodeChar", "encodeSetPredicate", "cStr", "parseIPv4Number", "R", "parseIPv4", "parts", "numbers", "part", "n", "i", "ipv4", "counter", "serializeIPv4", "address", "parseIPv6", "pieceIndex", "compress", "pointer", "value", "length", "numbersSeen", "ipv4Piece", "number", "swaps", "temp", "serializeIPv6", "findLongestZeroSequence", "ignore0", "parseHost", "isSpecialArg", "parseOpaqueHost", "domain", "asciiDomain", "ipv4Host", "decoded", "arr", "maxIdx", "maxLen", "currStart", "currLen", "serializeHost", "host", "trimControlChars", "trimTabAndNewline", "shortenPath", "path", "isNormalizedWindowsDriveLetter", "includesCredentials", "cannotHaveAUsernamePasswordPort", "URLStateMachine", "base", "encodingOverride", "stateOverride", "res", "ret", "len", "codePoint", "encodedCodePoints", "port", "fileOtherwiseCodePoints", "serializeURL", "excludeFragment", "serializeOrigin", "tuple", "result", "options", "usm", "username", "password", "integer", "require_URL_impl", "__commonJSMin", "exports", "usm", "constructorArgs", "url", "base", "parsedBase", "parsedURL", "v", "input", "require_URL", "__commonJSMin", "exports", "module", "conversions", "utils", "Impl", "impl", "URL", "url", "args", "i", "V", "obj", "constructorArgs", "privateData", "require_public_api", "__commonJSMin", "exports", "require_lib", "__commonJSMin", "exports", "module", "_interopDefault", "ex", "Stream", "http", "Url", "whatwgUrl", "https", "zlib", "Readable", "BUFFER", "TYPE", "Blob", "blobParts", "options", "buffers", "size", "a", "length", "i", "element", "buffer", "type", "buf", "ab", "readable", "start", "end", "relativeStart", "relativeEnd", "span", "slicedBuffer", "blob", "FetchError", "message", "systemError", "convert", "INTERNALS", "PassThrough", "Body", "body", "_this", "_ref", "_ref$size", "_ref$timeout", "timeout", "isURLSearchParams", "isBlob", "err", "error", "consumeBody", "ct", "_this2", "_this3", "convertBody", "proto", "name", "desc", "_this4", "accum", "accumBytes", "abort", "resolve", "reject", "resTimeout", "chunk", "headers", "charset", "res", "str", "obj", "clone", "instance", "p1", "p2", "extractContentType", "getTotalBytes", "writeToStream", "dest", "invalidTokenRegex", "invalidHeaderCharRegex", "validateName", "validateValue", "value", "find", "map", "key", "MAP", "Headers", "init", "rawHeaders", "headerNames", "headerName", "method", "pairs", "pair", "callback", "thisArg", "getHeaders", "_pairs$i", "createHeadersIterator", "kind", "k", "INTERNAL", "target", "iterator", "HeadersIteratorPrototype", "_INTERNAL", "index", "values", "len", "exportNodeCompatibleHeaders", "hostHeaderKey", "createHeadersLenient", "val", "INTERNALS$1", "STATUS_CODES", "Response", "opts", "status", "contentType", "INTERNALS$2", "URL", "parse_url", "format_url", "parseURL", "urlStr", "streamDestructionSupported", "isRequest", "input", "isAbortSignal", "signal", "Request", "parsedURL", "inputBody", "getNodeRequestOptions", "request", "contentLengthValue", "totalBytes", "agent", "AbortError", "URL$1", "PassThrough$1", "isDomainOrSubdomain", "destination", "original", "orig", "fetch", "url", "send", "response", "abortAndFinalize", "finalize", "req", "reqTimeout", "socket", "location", "locationURL", "requestOpts", "response_options", "codings", "zlibOptions", "code", "require_tslib", "__commonJSMin", "exports", "module", "__extends", "__assign", "__rest", "__decorate", "__param", "__metadata", "__awaiter", "__generator", "__exportStar", "__values", "__read", "__spread", "__spreadArrays", "__await", "__asyncGenerator", "__asyncDelegator", "__asyncValues", "__makeTemplateObject", "__importStar", "__importDefault", "__classPrivateFieldGet", "__classPrivateFieldSet", "__createBinding", "factory", "root", "createExporter", "previous", "id", "v", "exporter", "extendStatics", "d", "b", "p", "__", "s", "i", "e", "t", "decorators", "target", "key", "desc", "c", "r", "paramIndex", "decorator", "metadataKey", "metadataValue", "thisArg", "_arguments", "P", "generator", "adopt", "value", "resolve", "reject", "fulfilled", "step", "rejected", "result", "body", "_", "f", "y", "g", "verb", "n", "op", "o", "m", "k", "k2", "ar", "error", "il", "a", "j", "jl", "q", "resume", "settle", "fulfill", "cooked", "raw", "mod", "receiver", "privateMap", "listenersMap", "abortedMap", "AbortSignal", "_type", "listener", "listeners", "index", "_event", "abortSignal", "signal", "AbortError", "_super", "__extends", "message", "_this", "AbortController", "parentSignals", "_i", "parentSignals_1", "parentSignal", "ms", "timer", "require_delayed_stream", "__commonJSMin", "exports", "module", "Stream", "util", "DelayedStream", "source", "options", "delayedStream", "option", "realEmit", "args", "r", "message", "require_combined_stream", "__commonJSMin", "exports", "module", "util", "Stream", "DelayedStream", "CombinedStream", "options", "combinedStream", "option", "stream", "isStreamLike", "newStream", "dest", "getStream", "value", "self", "err", "data", "message", "require_mime_db", "__commonJSMin", "exports", "module", "require_mime_types", "__commonJSMin", "exports", "db", "extname", "EXTRACT_TYPE_REGEXP", "TEXT_TYPE_REGEXP", "charset", "contentType", "extension", "lookup", "populateMaps", "type", "match", "mime", "str", "exts", "path", "extensions", "types", "preference", "i", "from", "to", "require_defer", "__commonJSMin", "exports", "module", "defer", "fn", "nextTick", "require_async", "__commonJSMin", "exports", "module", "defer", "async", "callback", "isAsync", "err", "result", "require_abort", "__commonJSMin", "exports", "module", "abort", "state", "clean", "key", "require_iterate", "__commonJSMin", "exports", "module", "async", "abort", "iterate", "list", "iterator", "state", "callback", "key", "runJob", "error", "output", "item", "aborter", "require_state", "__commonJSMin", "exports", "module", "state", "list", "sortMethod", "isNamedList", "initState", "a", "b", "require_terminator", "__commonJSMin", "exports", "module", "abort", "async", "terminator", "callback", "require_parallel", "__commonJSMin", "exports", "module", "iterate", "initState", "terminator", "parallel", "list", "iterator", "callback", "state", "error", "result", "require_serialOrdered", "__commonJSMin", "exports", "module", "iterate", "initState", "terminator", "serialOrdered", "ascending", "descending", "list", "iterator", "sortMethod", "callback", "state", "iteratorHandler", "error", "result", "a", "b", "require_serial", "__commonJSMin", "exports", "module", "serialOrdered", "serial", "list", "iterator", "callback", "require_asynckit", "__commonJSMin", "exports", "module", "require_populate", "__commonJSMin", "exports", "module", "dst", "src", "prop", "require_form_data", "__commonJSMin", "exports", "module", "CombinedStream", "util", "path", "http", "https", "parseUrl", "fs", "mime", "asynckit", "populate", "FormData", "options", "option", "field", "value", "append", "header", "footer", "valueLength", "callback", "err", "stat", "fileSize", "response", "contentDisposition", "contentType", "contents", "headers", "prop", "filename", "next", "lastPart", "userHeaders", "formHeaders", "dataBuffer", "boundary", "i", "len", "knownLength", "hasKnownLength", "cb", "values", "length", "params", "request", "defaults", "onResponse", "error", "responce", "AzureKeyCredential", "key", "newKey", "isTokenCredential", "credential", "log", "message", "args", "_i", "util", "tslib", "EOL", "debugEnvVariable", "enabledString", "enabledNamespaces", "skippedNamespaces", "debuggers", "enable", "namespaces", "wildcard", "namespaceList", "ns", "namespaceList_1", "__values", "namespaceList_1_1", "debuggers_1", "debuggers_1_1", "instance", "enabled", "namespace", "skippedNamespaces_1", "skippedNamespaces_1_1", "skipped", "enabledNamespaces_1", "enabledNamespaces_1_1", "enabled_1", "disable", "result", "createDebugger", "debug", "newDebugger", "destroy", "debugObj", "extend", "index", "registeredLoggers", "logLevelFromEnv", "azureLogLevel", "AzureLogger", "AZURE_LOG_LEVELS", "isAzureLogLevel", "setLogLevel", "level", "registeredLoggers_1", "registeredLoggers_1_1", "logger", "shouldEnable", "getLogLevel", "levelMap", "createClientLogger", "clientRootLogger", "patchLogMethod", "createLogger", "parent", "child", "logLevel", "require_defaults", "__commonJSMin", "exports", "require_Utility", "__commonJSMin", "exports", "module", "assign", "getValue", "isArray", "isEmpty", "isFunction", "isObject", "isPlainObject", "slice", "hasProp", "i", "key", "len", "source", "sources", "target", "val", "ref", "ctor", "proto", "obj", "require_XMLDOMImplementation", "__commonJSMin", "exports", "module", "XMLDOMImplementation", "feature", "version", "qualifiedName", "publicId", "systemId", "namespaceURI", "doctype", "title", "require_XMLDOMErrorHandler", "__commonJSMin", "exports", "module", "XMLDOMErrorHandler", "error", "require_XMLDOMStringList", "__commonJSMin", "exports", "module", "XMLDOMStringList", "arr", "index", "str", "require_XMLDOMConfiguration", "__commonJSMin", "exports", "module", "XMLDOMConfiguration", "XMLDOMErrorHandler", "XMLDOMStringList", "clonedSelf", "name", "value", "require_NodeType", "__commonJSMin", "exports", "module", "require_XMLAttribute", "__commonJSMin", "exports", "module", "NodeType", "XMLAttribute", "XMLNode", "parent", "name", "value", "options", "node", "require_XMLNamedNodeMap", "__commonJSMin", "exports", "module", "XMLNamedNodeMap", "nodes", "name", "node", "oldNode", "index", "namespaceURI", "localName", "require_XMLElement", "__commonJSMin", "exports", "module", "NodeType", "XMLAttribute", "XMLElement", "XMLNamedNodeMap", "XMLNode", "getValue", "isFunction", "isObject", "ref", "extend", "child", "parent", "key", "hasProp", "ctor", "superClass", "name", "attributes", "j", "len", "ref1", "att", "attName", "clonedSelf", "clonedChild", "value", "attValue", "options", "newAttr", "oldAttr", "namespaceURI", "localName", "qualifiedName", "isId", "idAttr", "tagname", "classNames", "node", "i", "require_XMLCharacterData", "__commonJSMin", "exports", "module", "XMLCharacterData", "XMLNode", "extend", "child", "parent", "key", "hasProp", "ctor", "superClass", "value", "offset", "count", "arg", "node", "require_XMLCData", "__commonJSMin", "exports", "module", "NodeType", "XMLCData", "XMLCharacterData", "extend", "child", "parent", "key", "hasProp", "ctor", "superClass", "text", "options", "require_XMLComment", "__commonJSMin", "exports", "module", "NodeType", "XMLCharacterData", "XMLComment", "extend", "child", "parent", "key", "hasProp", "ctor", "superClass", "text", "options", "require_XMLDeclaration", "__commonJSMin", "exports", "module", "NodeType", "XMLDeclaration", "XMLNode", "isObject", "extend", "child", "parent", "key", "hasProp", "ctor", "superClass", "version", "encoding", "standalone", "ref", "options", "require_XMLDTDAttList", "__commonJSMin", "exports", "module", "NodeType", "XMLDTDAttList", "XMLNode", "extend", "child", "parent", "key", "hasProp", "ctor", "superClass", "elementName", "attributeName", "attributeType", "defaultValueType", "defaultValue", "options", "require_XMLDTDEntity", "__commonJSMin", "exports", "module", "NodeType", "XMLDTDEntity", "XMLNode", "isObject", "extend", "child", "parent", "key", "hasProp", "ctor", "superClass", "pe", "name", "value", "options", "require_XMLDTDElement", "__commonJSMin", "exports", "module", "NodeType", "XMLDTDElement", "XMLNode", "extend", "child", "parent", "key", "hasProp", "ctor", "superClass", "name", "value", "options", "require_XMLDTDNotation", "__commonJSMin", "exports", "module", "NodeType", "XMLDTDNotation", "XMLNode", "extend", "child", "parent", "key", "hasProp", "ctor", "superClass", "name", "value", "options", "require_XMLDocType", "__commonJSMin", "exports", "module", "NodeType", "XMLDTDAttList", "XMLDTDElement", "XMLDTDEntity", "XMLDTDNotation", "XMLDocType", "XMLNamedNodeMap", "XMLNode", "isObject", "extend", "child", "parent", "key", "hasProp", "ctor", "superClass", "pubID", "sysID", "i", "len", "ref", "ref1", "ref2", "nodes", "name", "value", "elementName", "attributeName", "attributeType", "defaultValueType", "defaultValue", "options", "node", "require_XMLRaw", "__commonJSMin", "exports", "module", "NodeType", "XMLNode", "XMLRaw", "extend", "child", "parent", "key", "hasProp", "ctor", "superClass", "text", "options", "require_XMLText", "__commonJSMin", "exports", "module", "NodeType", "XMLCharacterData", "XMLText", "extend", "child", "parent", "key", "hasProp", "ctor", "superClass", "text", "next", "prev", "str", "options", "offset", "content", "require_XMLProcessingInstruction", "__commonJSMin", "exports", "module", "NodeType", "XMLCharacterData", "XMLProcessingInstruction", "extend", "child", "parent", "key", "hasProp", "ctor", "superClass", "target", "value", "options", "node", "require_XMLDummy", "__commonJSMin", "exports", "module", "NodeType", "XMLDummy", "XMLNode", "extend", "child", "parent", "key", "hasProp", "ctor", "superClass", "options", "require_XMLNodeList", "__commonJSMin", "exports", "module", "XMLNodeList", "nodes", "index", "require_DocumentPosition", "__commonJSMin", "exports", "module", "require_XMLNode", "__commonJSMin", "exports", "module", "DocumentPosition", "NodeType", "XMLCData", "XMLComment", "XMLDeclaration", "XMLDocType", "XMLDummy", "XMLElement", "XMLNamedNodeMap", "XMLNode", "XMLNodeList", "XMLProcessingInstruction", "XMLRaw", "XMLText", "getValue", "isEmpty", "isFunction", "isObject", "ref1", "hasProp", "parent1", "i", "child", "j", "len", "ref2", "str", "value", "parent", "results", "name", "attributes", "text", "childNode", "item", "k", "key", "lastChild", "len1", "ref3", "val", "newChild", "refChild", "removed", "target", "insTarget", "insValue", "instruction", "version", "encoding", "standalone", "doc", "xmldec", "pubID", "sysID", "doctype", "node", "options", "clonedRoot", "oldChild", "deep", "feature", "other", "ref", "res", "namespaceURI", "prefix", "data", "handler", "isDescendantChild", "nodePos", "thisPos", "found", "pos", "func", "require_XMLStringifier", "__commonJSMin", "exports", "module", "XMLStringifier", "bind", "fn", "me", "hasProp", "options", "key", "ref", "value", "val", "str", "regex", "res", "ampregex", "require_WriterState", "__commonJSMin", "exports", "module", "require_XMLWriterBase", "__commonJSMin", "exports", "module", "NodeType", "WriterState", "XMLCData", "XMLComment", "XMLDTDAttList", "XMLDTDElement", "XMLDTDEntity", "XMLDTDNotation", "XMLDeclaration", "XMLDocType", "XMLDummy", "XMLElement", "XMLProcessingInstruction", "XMLRaw", "XMLText", "XMLWriterBase", "assign", "hasProp", "options", "key", "ref", "value", "filteredOptions", "ref1", "ref2", "ref3", "ref4", "ref5", "ref6", "node", "level", "indentLevel", "att", "r", "child", "i", "len", "childNodeCount", "firstChildNode", "j", "len1", "name", "prettySuppressed", "e", "require_XMLStringWriter", "__commonJSMin", "exports", "module", "XMLStringWriter", "XMLWriterBase", "extend", "child", "parent", "key", "hasProp", "ctor", "superClass", "options", "doc", "i", "len", "r", "ref", "require_XMLDocument", "__commonJSMin", "exports", "module", "NodeType", "XMLDOMConfiguration", "XMLDOMImplementation", "XMLDocument", "XMLNode", "XMLStringWriter", "XMLStringifier", "isPlainObject", "extend", "child", "parent", "key", "hasProp", "ctor", "superClass", "options", "i", "len", "ref", "writer", "writerOptions", "tagName", "data", "target", "name", "tagname", "importedNode", "deep", "namespaceURI", "qualifiedName", "localName", "elementId", "source", "node", "classNames", "eventInterface", "root", "whatToShow", "filter", "require_XMLDocumentCB", "__commonJSMin", "exports", "module", "NodeType", "WriterState", "XMLAttribute", "XMLCData", "XMLComment", "XMLDTDAttList", "XMLDTDElement", "XMLDTDEntity", "XMLDTDNotation", "XMLDeclaration", "XMLDocType", "XMLDocument", "XMLDocumentCB", "XMLElement", "XMLProcessingInstruction", "XMLRaw", "XMLStringWriter", "XMLStringifier", "XMLText", "getValue", "isFunction", "isObject", "isPlainObject", "ref", "hasProp", "options", "onData", "onEnd", "writerOptions", "node", "att", "attName", "attributes", "child", "i", "len", "ref1", "ref2", "name", "text", "oldValidationFlag", "root", "value", "attValue", "target", "insTarget", "insValue", "version", "encoding", "standalone", "pubID", "sysID", "elementName", "attributeName", "attributeType", "defaultValueType", "defaultValue", "chunk", "level", "require_XMLStreamWriter", "__commonJSMin", "exports", "module", "NodeType", "WriterState", "XMLStreamWriter", "XMLWriterBase", "extend", "child", "parent", "key", "hasProp", "ctor", "superClass", "stream", "options", "node", "level", "doc", "i", "j", "k", "len", "len1", "ref", "ref1", "results", "att", "childNodeCount", "firstChildNode", "name", "prettySuppressed", "e", "require_lib", "__commonJSMin", "exports", "module", "NodeType", "WriterState", "XMLDOMImplementation", "XMLDocument", "XMLDocumentCB", "XMLStreamWriter", "XMLStringWriter", "assign", "isFunction", "ref", "name", "xmldec", "doctype", "options", "doc", "root", "onData", "onEnd", "ref1", "stream", "require_builder", "__commonJSMin", "exports", "builder", "defaults", "escapeCDATA", "requiresCDATA", "wrapCDATA", "hasProp", "entry", "Builder", "opts", "key", "ref", "value", "rootObj", "attrkey", "charkey", "render", "rootElement", "rootName", "_this", "element", "obj", "attr", "child", "index", "require_sax", "__commonJSMin", "exports", "sax", "strict", "opt", "SAXParser", "SAXStream", "createStream", "buffers", "parser", "clearBuffers", "S", "rootNS", "emit", "o", "F", "newf", "a", "i", "checkBufferLength", "maxAllowed", "maxActual", "l", "len", "closeText", "emitNode", "error", "m", "flushBuffers", "end", "write", "Stream", "streamWraps", "ev", "me", "er", "h", "data", "SD", "chunk", "handler", "args", "CDATA", "DOCTYPE", "XML_NAMESPACE", "XMLNS_NAMESPACE", "nameStart", "nameBody", "entityStart", "entityBody", "isWhitespace", "c", "isQuote", "isAttribEnd", "isMatch", "regex", "notMatch", "key", "e", "s", "event", "nodeType", "textopts", "text", "strictFail", "message", "newTag", "parent", "tag", "qname", "name", "attribute", "qualName", "prefix", "local", "attrib", "qn", "openTag", "selfClosing", "p", "nv", "value", "uri", "closeTag", "t", "tagName", "closeTo", "close", "x", "n", "parseEntity", "entity", "entityLC", "num", "numStr", "beginWhiteSpace", "charAt", "result", "starti", "pad", "returnState", "buffer", "stringFromCharCode", "floor", "fromCodePoint", "MAX_SIZE", "codeUnits", "highSurrogate", "lowSurrogate", "index", "length", "codePoint", "require_bom", "__commonJSMin", "exports", "str", "require_processors", "__commonJSMin", "exports", "prefixMatch", "str", "require_parser", "__commonJSMin", "exports", "bom", "defaults", "events", "isEmpty", "processItem", "processors", "sax", "setImmediate", "bind", "fn", "me", "extend", "child", "parent", "key", "hasProp", "ctor", "thing", "item", "i", "len", "process", "superClass", "Parser", "opts", "ref", "value", "chunk", "err", "error1", "obj", "newValue", "attrkey", "charkey", "ontext", "stack", "_this", "error", "node", "processedKey", "cdata", "emptyStr", "nodeName", "objClone", "old", "s", "xpath", "results", "text", "charChild", "str", "cb", "result", "resolve", "reject", "a", "b", "options", "parser", "require_xml2js", "__commonJSMin", "exports", "builder", "defaults", "parser", "processors", "extend", "child", "parent", "key", "hasProp", "ctor", "superClass", "ValidationError", "message", "require_Time", "__commonJSMin", "exports", "defaultGetter", "carrier", "key", "exports", "NoopHttpTextPropagator", "context", "carrier", "setter", "getter", "exports", "defaultSetter", "carrier", "key", "value", "exports", "EntryTtl", "exports", "ValueType", "exports", "NoopMeter", "name", "options", "exports", "callback", "NoopMetric", "instrument", "labels", "NoopCounterMetric", "_super", "__extends", "value", "NoopValueRecorderMetric", "correlationContext", "spanContext", "NoopBaseObserverMetric", "NoopBatchObserverMetric", "NoopBoundCounter", "NoopBoundValueRecorder", "NoopBoundBaseObserver", "NoopMeter_1", "NoopMeterProvider", "_name", "_version", "exports", "require_attributes", "__commonJSMin", "exports", "TraceFlags", "exports", "trace_flags_1", "exports", "INVALID_SPAN_CONTEXT", "NoopSpan", "_spanContext", "key", "value", "attributes", "name", "status", "endTime", "NoopSpan_1", "NoopTracer", "name", "options", "span", "fn", "target", "exports", "NoopTracer_1", "NoopTracerProvider", "_name", "_version", "exports", "SamplingDecision", "exports", "SpanKind", "exports", "CanonicalCode", "exports", "require_trace_state", "__commonJSMin", "exports", "Context", "parentContext", "description", "key", "value", "context", "exports", "context_1", "NoopContextManager", "context", "fn", "target", "exports", "__exportStar", "exports", "exports", "__exportStar", "exports", "__exportStar", "exports", "platform_1", "exports", "makeGetter", "requiredVersion", "instance", "fallback", "version", "context_base_1", "global_utils_1", "NOOP_CONTEXT_MANAGER", "ContextAPI", "contextManager", "context", "fn", "target", "_b", "_a", "exports", "NoopTracerProvider_1", "global_utils_1", "TraceAPI", "provider", "_b", "_a", "name", "version", "exports", "NoopMeterProvider_1", "global_utils_1", "MetricsAPI", "provider", "_b", "_a", "name", "version", "exports", "getter_1", "NoopHttpTextPropagator_1", "setter_1", "context_1", "global_utils_1", "contextApi", "PropagationAPI", "propagator", "carrier", "setter", "context", "getter", "_b", "_a", "exports", "__exportStar", "exports", "context_base_1", "context_1", "trace_1", "metrics_1", "propagation_1", "NoOpSpan", "TraceFlags", "_endTime", "_key", "_value", "_attributes", "_name", "_status", "NoOpTracer", "_options", "_span", "fn", "target", "getGlobalObject", "GLOBAL_TRACER_VERSION", "GLOBAL_TRACER_SYMBOL", "cache", "loadTracerCache", "globalObj", "existingCache", "setGlobalCache", "getCache", "defaultTracer", "getDefaultTracer", "setTracer", "tracer", "getTracer", "OpenCensusTraceStateWrapper", "state", "isWrappedSpan", "span", "isTracer", "tracerOrSpan", "OpenCensusSpanWrapper", "name", "options", "parent", "_i", "_a", "link", "openCensusSpanContext", "key", "value", "attributes", "status", "OpenCensusTracerWrapper", "_fn", "_target", "TestSpan", "_super", "__extends", "parentTracer", "context", "kind", "parentSpanId", "startTime", "_this", "CanonicalCode", "TestTracer", "traceId", "traceSpans", "roots", "nodeMap", "traceSpans_1", "spanId", "node", "parentContext", "isRootSpan", "SpanKind", "result", "VERSION", "extractSpanContextFromTraceParentHeader", "traceParentHeader", "parts", "version", "traceOptions", "traceFlags", "spanContext", "getTraceParentHeader", "missingFields", "flags", "hexFlags", "require_dist", "__commonJSMin", "exports", "_interopDefault", "ex", "uuid", "tslib", "tough", "http", "https", "node_fetch", "abortController", "FormData", "util", "stream", "tunnel", "coreAuth", "logger$1", "xml2js", "os", "coreTracing", "api", "getHeaderKey", "headerName", "isHttpHeadersLike", "object", "HttpHeaders", "rawHeaders", "headerValue", "header", "result", "headerKey", "headers", "headerNames", "headerValues", "encodeString", "value", "encodeByteArray", "bufferValue", "decodeString", "Constants", "validUuidRegex", "isNode", "encodeUri", "uri", "stripResponse", "response", "strippedResponse", "stripRequest", "request", "strippedRequest", "isValidUuid", "generateUuid", "executePromisesSequentially", "promiseFactories", "kickstart", "promiseFactory", "delay", "t", "resolve", "promiseToCallback", "promise", "cb", "data", "err", "promiseToServiceCallback", "prepareXMLRootList", "obj", "elementName", "_a", "applyMixins", "targetCtor", "sourceCtors", "name", "validateISODuration", "isDuration", "replaceAll", "searchValue", "replaceValue", "isPrimitiveType", "Serializer", "modelMappers", "isXML", "mapper", "objectName", "failValidation", "constraintName", "constraintValue", "ExclusiveMaximum", "ExclusiveMinimum", "InclusiveMaximum", "InclusiveMinimum", "MaxItems", "MaxLength", "MinItems", "MinLength", "MultipleOf", "Pattern", "UniqueItems", "pattern", "item", "i", "ar", "payload", "mapperType", "required", "nullable", "serializeBasicTypes", "enumMapper", "serializeEnumType", "serializeDateTypes", "serializeByteArrayType", "serializeBase64UrlType", "serializeSequenceType", "serializeDictionaryType", "serializeCompositeType", "responseBody", "deserializeCompositeType", "unixTimeToDate", "base64UrlToByteArray", "deserializeSequenceType", "deserializeDictionaryType", "trimEnd", "str", "ch", "len", "bufferToBase64Url", "buffer", "splitSerializeName", "prop", "classes", "partialclass", "subwords", "_i", "subwords_1", "dateToUnixTime", "d", "n", "typeName", "objectType", "allowedValues", "isPresent", "returnValue", "serializer", "elementType", "tempArray", "valueType", "tempDictionary", "key", "resolveModelProperties", "modelProps", "className", "modelMapper", "getPolymorphicDiscriminatorRecursively", "getPolymorphicMapper", "_b", "propertyMapper", "propName", "parentObject", "paths", "_c", "paths_1", "pathName", "childObject", "propertyObjectName", "toSerialize", "polymorphicDiscriminator", "serializedValue", "additionalPropertiesMapper", "propNames", "_loop_1", "clientPropName", "isAdditionalProperty", "pn", "isSpecialXmlProperty", "propertyName", "instance", "handledPropertyNames", "serializedName", "xmlName", "xmlElementName", "headerCollectionPrefix", "dictionary", "unwrappedProperty", "isEmptyWrappedList", "propertyInstance", "res", "_d", "paths_2", "responsePropName", "_e", "_f", "element", "polymorphicPropertyName", "discriminatorName", "discriminatorValue", "indexDiscriminator", "polymorphicMapper", "getPolymorphicDiscriminatorSafely", "serializeObject", "array", "property", "strEnum", "o", "o_1", "MapperType", "isWebResourceLike", "WebResource", "url", "method", "body", "query", "streamResponseBody", "withCredentials", "abortSignal", "timeout", "onUploadProgress", "onDownloadProgress", "proxySettings", "keepAlive", "decompressResponse", "options", "validMethods", "pathTemplate_1", "pathParameters_1", "baseUrl", "url_1", "segments", "pathParamName", "pathParam", "stringifiedPathParameters", "queryParameters", "queryParams", "queryParamName", "queryParam", "custom", "URLQuery", "parameterName", "parameterValue", "newValue", "parameterStrings", "parameterValue_1", "parameterValueElement", "text", "currentState", "currentCharacter", "URLBuilder", "scheme", "host", "port", "path", "schemeIndex", "schemeStart", "currentPath", "queryParameterName", "queryParameterValue", "startState", "tokenizer", "URLTokenizer", "token", "tokenPath", "URLToken", "type", "isAlphaNumericCharacter", "character", "characterCode", "_text", "state", "hasCurrentCharacter", "nextScheme", "nextSchemeOrHost", "nextHost", "nextPort", "nextPath", "nextQuery", "readRemaining", "getCurrentCharacter", "nextCharacter", "step", "peekCharacters", "charactersToPeek", "endIndex", "readWhile", "condition", "readWhileLetterOrDigit", "readUntilCharacter", "terminatingCharacters", "schemeOrHost", "RedactedString", "defaultAllowedHeaderNames", "defaultAllowedQueryParameters", "Sanitizer", "allowedHeaderNames", "allowedQueryParameters", "p", "_", "v", "k", "allowedKeys", "accessor", "sanitized", "urlBuilder", "queryString", "errorSanitizer", "RestError", "_super", "message", "code", "statusCode", "_this", "ReportTransform", "progressCallback", "chunk", "_encoding", "callback", "FetchHttpClient", "httpRequest", "abortController$1", "abortListener", "formData", "requestForm_1", "appendFormValue", "formKey", "formValue", "j", "contentType", "uploadReportStream", "platformSpecificRequestInit", "requestInit", "operationResponse", "downloadReportStream", "length_1", "error_1", "fetchError", "event", "isReadableStream", "parseHeaders", "httpHeaders", "createProxyAgent", "requestUrl", "isValidPort", "tunnelOptions", "isRequestHttps", "isUrlHttps", "isProxyHttps", "proxyAgent", "createTunnel", "urlScheme", "getCachedAgent", "isHttps", "agentCache", "NodeFetchHttpClient", "agent", "agentOptions", "input", "init", "cookieString", "reject", "cookie", "setCookieHeader_1", "HttpPipelineLogLevel", "operationOptionsToRequestOptionsBase", "opts", "requestOptions", "tracingOptions", "additionalOptions", "BaseRequestPolicy", "_nextPolicy", "_options", "logLevel", "RequestPolicyOptions", "_logger", "logger", "logPolicy", "loggingOptions", "nextPolicy", "LogPolicy", "getPathStringFromParameter", "parameter", "getPathStringFromParameterPath", "parameterPath", "isStreamOperation", "operationSpec", "xml2jsDefaultOptionsV2", "xml2jsParserSettings", "xml2jsBuilderSettings", "stringifyXML", "builder", "parseXML", "xmlParser", "deserializationPolicy", "deserializationContentTypes", "DeserializationPolicy", "defaultJsonContentTypes", "defaultXmlContentTypes", "DefaultDeserializationOptions", "deserializeResponseBody", "getOperationResponse", "parsedResponse", "operationResponseGetter", "shouldDeserializeResponse", "shouldDeserialize", "jsonContentTypes", "xmlContentTypes", "parse", "responseSpec", "expectedStatusCodes", "hasNoExpectedStatusCodes", "isExpectedStatusCode", "defaultResponseSpec", "defaultBodyMapper", "defaultHeadersMapper", "initialErrorMessage", "error", "parsedBody", "internalError", "valueToDeserialize", "defaultError", "restError", "errorHandler", "msg", "errCode", "e", "text_1", "contentComponents", "component", "DEFAULT_CLIENT_RETRY_COUNT", "DEFAULT_CLIENT_RETRY_INTERVAL", "DEFAULT_CLIENT_MAX_RETRY_INTERVAL", "DEFAULT_CLIENT_MIN_RETRY_INTERVAL", "isNumber", "shouldRetry", "retryLimit", "predicate", "retryData", "updateRetryData", "retryOptions", "incrementDelta", "boundedRandDelta", "exponentialRetryPolicy", "retryCount", "retryInterval", "maxRetryInterval", "ExponentialRetryPolicy", "RetryMode", "DefaultRetryOptions", "retry", "policy", "requestError", "shouldPolicyRetry", "isAborted", "err_1", "generateClientRequestIdPolicy", "requestIdHeaderName", "GenerateClientRequestIdPolicy", "_requestIdHeaderName", "getDefaultUserAgentKey", "getPlatformSpecificData", "runtimeInfo", "osInfo", "getRuntimeInfo", "msRestRuntime", "getUserAgentString", "telemetryInfo", "keySeparator", "valueSeparator", "info", "getDefaultUserAgentHeaderName", "getDefaultUserAgentValue", "platformSpecificData", "userAgent", "userAgentPolicy", "userAgentData", "UserAgentPolicy", "DefaultRedirectOptions", "redirectPolicy", "maximumRetries", "RedirectPolicy", "maxRetries", "handleRedirect", "currentRetries", "status", "locationHeader", "rpRegistrationPolicy", "retryTimeout", "RPRegistrationPolicy", "_retryTimeout", "registerIfNeeded", "rpName", "checkRPNotRegisteredError", "urlPrefix", "extractSubscriptionUrl", "registerRP", "registrationStatus", "getRequestEssentials", "originalRequest", "reuseUrlToo", "reqOptions", "matchRes", "provider", "postUrl", "getUrl", "getRegistrationStatus", "TokenRefreshBufferMs", "ExpiringAccessTokenCache", "tokenRefreshBufferMs", "accessToken", "AccessTokenRefresher", "credential", "scopes", "requiredMillisecondsBeforeNewRefresh", "bearerTokenAuthenticationPolicy", "tokenCache", "tokenRefresher", "timeBetweenRefreshAttemptsInMs", "BearerTokenAuthenticationPolicy", "webResource", "systemErrorRetryPolicy", "minRetryInterval", "SystemErrorRetryPolicy", "retry$1", "_response", "QueryCollectionFormat", "loadEnvironmentProxyValue", "getDefaultProxySettings", "proxyUrl", "extractAuthFromUrl", "username", "password", "urlWithoutAuth", "parsedUrl", "schema", "proxyPolicy", "ProxyPolicy", "atIndex", "authStart", "auth", "colonIndex", "hasPassword", "StatusCodes", "throttlingRetryPolicy", "ThrottlingRetryPolicy", "_handleResponse", "httpResponse", "retryAfterHeader", "delayInMs", "retryAfterInSeconds", "now", "date", "diff", "signingPolicy", "authenticationProvider", "SigningPolicy", "nextRequest", "DefaultKeepAliveOptions", "keepAlivePolicy", "keepAliveOptions", "KeepAlivePolicy", "tracingPolicy", "TracingPolicy", "tracer", "spanOptions", "span", "spanContext", "traceParentHeader", "traceState", "serviceRequestId", "disableResponseDecompressionPolicy", "DisableResponseDecompressionPolicy", "ServiceClient", "credentials", "requestPolicyFactories", "authPolicyFactory", "wrappedPolicyFactory", "bearerTokenPolicyFactory", "serviceClient", "createDefaultRequestPolicyFactories", "newRequestPolicyFactories", "httpPipeline", "operationArguments", "baseUri", "urlParameter", "urlParameterValue", "queryParameter", "index", "headerParameter", "_g", "customHeaderName", "rawResponse", "sendRequestError", "error_2", "_h", "getOperationArgumentValueFromParameter", "serializeRequestBody", "flattenResponse", "bodyMapper", "requestBodyParameterPathString", "isStream", "formDataParameter", "formDataParameterValue", "formDataParameterPropertyName", "getValueOrFunctionResult", "defaultValueCreator", "factories", "userAgentHeaderName", "userAgentHeaderValue", "createPipelineFromOptions", "pipelineOptions", "userAgentValue", "userAgentInfo", "defaultUserAgentInfo", "redirectOptions", "deserializationOptions", "getOperationArgumentValueFromParameterPath", "parameterMapper", "propertySearchResult", "getPropertyFromParameterPath", "useDefaultValue", "parameterPathString", "propertyPath", "propertyValue", "propertyPathString", "parent", "parameterPathPart", "parsedHeaders", "addOperationResponse", "modelProperties_1", "isPageableResponse", "arrayResponse", "HeaderConstants", "DEFAULT_AUTHORIZATION_SCHEME", "BasicAuthenticationCredentials", "userName", "authorizationScheme", "encodedCredentials", "ApiKeyCredentials", "TopicCredentials", "topicKey", "require_getter", "__commonJSMin", "exports", "defaultGetter", "carrier", "key", "require_NoopHttpTextPropagator", "__commonJSMin", "exports", "NoopHttpTextPropagator", "context", "carrier", "setter", "getter", "require_setter", "__commonJSMin", "exports", "defaultSetter", "carrier", "key", "value", "require_EntryValue", "__commonJSMin", "exports", "EntryTtl", "require_Metric", "__commonJSMin", "exports", "ValueType", "require_NoopMeter", "__commonJSMin", "exports", "NoopMeter", "name", "options", "NoopMetric", "instrument", "labels", "NoopCounterMetric", "value", "NoopMeasureMetric", "correlationContext", "spanContext", "NoopObserverMetric", "callback", "NoopBoundCounter", "NoopBoundMeasure", "NoopBoundObserver", "require_NoopMeterProvider", "__commonJSMin", "exports", "NoopMeter_1", "NoopMeterProvider", "_name", "_version", "require_trace_flags", "__commonJSMin", "exports", "TraceFlags", "require_NoopSpan", "__commonJSMin", "exports", "trace_flags_1", "INVALID_SPAN_CONTEXT", "NoopSpan", "_spanContext", "key", "value", "attributes", "name", "status", "endTime", "require_NoopTracer", "__commonJSMin", "exports", "NoopSpan_1", "NoopTracer", "name", "options", "span", "fn", "target", "require_NoopTracerProvider", "__commonJSMin", "exports", "NoopTracer_1", "NoopTracerProvider", "_name", "_version", "require_span_kind", "__commonJSMin", "exports", "SpanKind", "require_status", "__commonJSMin", "exports", "CanonicalCode", "require_context", "__commonJSMin", "exports", "Context", "parentContext", "description", "key", "value", "context", "require_NoopContextManager", "__commonJSMin", "exports", "context_1", "NoopContextManager", "context", "fn", "target", "require_src", "__commonJSMin", "exports", "__export", "m", "p", "require_context", "__commonJSMin", "exports", "context_base_1", "ContextAPI", "contextManager", "context", "fn", "target", "require_trace", "__commonJSMin", "exports", "NoopTracerProvider_1", "TraceAPI", "provider", "name", "version", "require_metrics", "__commonJSMin", "exports", "NoopMeterProvider_1", "MetricsAPI", "provider", "name", "version", "require_propagation", "__commonJSMin", "exports", "getter_1", "NoopHttpTextPropagator_1", "setter_1", "context_1", "contextApi", "PropagationAPI", "propagator", "carrier", "setter", "context", "getter", "require_src", "__commonJSMin", "exports", "__export", "m", "p", "context_base_1", "context_1", "trace_1", "metrics_1", "propagation_1", "NoOpSpan", "TraceFlags", "_endTime", "_key", "_value", "_attributes", "_name", "_status", "NoOpTracer", "_options", "_span", "fn", "target", "getGlobalObject", "GLOBAL_TRACER_VERSION", "GLOBAL_TRACER_SYMBOL", "cache", "loadTracerCache", "globalObj", "existingCache", "setGlobalCache", "getCache", "defaultTracer", "getDefaultTracer", "setTracer", "tracer", "getTracer", "OpenCensusTraceStateWrapper", "state", "isWrappedSpan", "span", "isTracer", "tracerOrSpan", "OpenCensusSpanWrapper", "name", "options", "parent", "_i", "_a", "link", "openCensusSpanContext", "key", "value", "attributes", "status", "OpenCensusTracerWrapper", "_fn", "_target", "TestSpan", "_super", "__extends", "parentTracer", "context", "kind", "parentSpanId", "startTime", "_this", "CanonicalCode", "TestTracer", "traceId", "traceSpans", "roots", "nodeMap", "traceSpans_1", "spanId", "node", "parentContext", "isRootSpan", "SpanKind", "result", "VERSION", "extractSpanContextFromTraceParentHeader", "traceParentHeader", "parts", "version", "traceOptions", "traceFlags", "spanContext", "getTraceParentHeader", "missingFields", "flags", "hexFlags", "__extends", "PollerStoppedError", "message", "_this", "_super", "PollerCancelledError", "Poller", "operation", "resolve", "reject", "_a", "options", "state", "_b", "e_1", "_i", "callback", "clearPollOncePromise", "c", "require_dist_esm", "__commonJSMin", "require_dist_esm", "__commonJSMin", "exports", "KeyInfo", "UserDelegationKey", "StorageError", "DataLakeStorageErrorError", "DataLakeStorageError", "AccessPolicy", "BlobProperties", "BlobItem", "BlobFlatListSegment", "ListBlobsFlatSegmentResponse", "BlobPrefix", "BlobHierarchyListSegment", "ListBlobsHierarchySegmentResponse", "Block", "BlockList", "BlockLookupList", "ContainerProperties", "ContainerItem", "ListContainersSegmentResponse", "CorsRule", "GeoReplication", "RetentionPolicy", "Logging", "Metrics", "PageRange", "ClearRange", "PageList", "SignedIdentifier", "StaticWebsite", "BlobServiceProperties", "BlobServiceStatistics", "ServiceSetPropertiesHeaders", "ServiceGetPropertiesHeaders", "ServiceGetStatisticsHeaders", "ServiceListContainersSegmentHeaders", "ServiceGetUserDelegationKeyHeaders", "ServiceGetAccountInfoHeaders", "ServiceSubmitBatchHeaders", "ContainerCreateHeaders", "ContainerGetPropertiesHeaders", "ContainerDeleteHeaders", "ContainerSetMetadataHeaders", "ContainerGetAccessPolicyHeaders", "ContainerSetAccessPolicyHeaders", "ContainerAcquireLeaseHeaders", "ContainerReleaseLeaseHeaders", "ContainerRenewLeaseHeaders", "ContainerBreakLeaseHeaders", "ContainerChangeLeaseHeaders", "ContainerListBlobFlatSegmentHeaders", "ContainerListBlobHierarchySegmentHeaders", "ContainerGetAccountInfoHeaders", "BlobDownloadHeaders", "BlobGetPropertiesHeaders", "BlobDeleteHeaders", "BlobSetAccessControlHeaders", "BlobGetAccessControlHeaders", "BlobRenameHeaders", "PageBlobCreateHeaders", "AppendBlobCreateHeaders", "BlockBlobUploadHeaders", "BlobUndeleteHeaders", "BlobSetHTTPHeadersHeaders", "BlobSetMetadataHeaders", "BlobAcquireLeaseHeaders", "BlobReleaseLeaseHeaders", "BlobRenewLeaseHeaders", "BlobChangeLeaseHeaders", "BlobBreakLeaseHeaders", "BlobCreateSnapshotHeaders", "BlobStartCopyFromURLHeaders", "BlobCopyFromURLHeaders", "BlobAbortCopyFromURLHeaders", "BlobSetTierHeaders", "BlobGetAccountInfoHeaders", "BlockBlobStageBlockHeaders", "BlockBlobStageBlockFromURLHeaders", "BlockBlobCommitBlockListHeaders", "BlockBlobGetBlockListHeaders", "PageBlobUploadPagesHeaders", "PageBlobClearPagesHeaders", "PageBlobUploadPagesFromURLHeaders", "PageBlobGetPageRangesHeaders", "PageBlobGetPageRangesDiffHeaders", "PageBlobResizeHeaders", "PageBlobUpdateSequenceNumberHeaders", "PageBlobCopyIncrementalHeaders", "AppendBlobAppendBlockHeaders", "AppendBlobAppendBlockFromUrlHeaders", "access", "action0", "action1", "action2", "action3", "action4", "action5", "action6", "appendPosition", "blobCacheControl", "blobContentDisposition", "blobContentEncoding", "blobContentLanguage", "blobContentLength", "blobContentMD5", "blobContentType", "blobSequenceNumber", "blobType0", "blobType1", "blobType2", "blockId", "breakPeriod", "cacheControl", "comp0", "comp1", "comp10", "comp11", "comp12", "comp13", "comp14", "comp15", "comp16", "comp17", "comp2", "comp3", "comp4", "comp5", "comp6", "comp7", "comp8", "comp9", "contentDisposition", "contentEncoding", "contentLanguage", "contentLength", "contentType", "copyActionAbortConstant", "copyId", "copySource", "defaultEncryptionScope", "deleteSnapshots", "delimiter", "directoryProperties", "duration", "encryptionAlgorithm", "encryptionKey", "encryptionKeySha256", "encryptionScope", "group", "ifMatch", "ifModifiedSince", "ifNoneMatch", "ifSequenceNumberEqualTo", "ifSequenceNumberLessThan", "ifSequenceNumberLessThanOrEqualTo", "ifUnmodifiedSince", "include0", "include1", "coreHttp.QueryCollectionFormat", "leaseId0", "leaseId1", "listType", "marker0", "maxPageSize", "maxSize", "metadata", "multipartContentType", "owner", "pageWrite0", "pageWrite1", "pathRenameMode", "posixAcl", "posixPermissions", "posixUmask", "prefix", "preventEncryptionScopeOverride", "prevsnapshot", "prevSnapshotUrl", "proposedLeaseId0", "proposedLeaseId1", "range0", "range1", "rangeGetContentCRC64", "rangeGetContentMD5", "rehydratePriority", "renameSource", "requestId", "restype0", "restype1", "restype2", "sequenceNumberAction", "snapshot", "sourceContentCrc64", "sourceContentMD5", "sourceIfMatch", "sourceIfModifiedSince", "sourceIfNoneMatch", "sourceIfUnmodifiedSince", "sourceLeaseId", "sourceRange0", "sourceRange1", "sourceUrl", "tier0", "tier1", "timeoutInSeconds", "transactionalContentCrc64", "transactionalContentMD5", "upn", "url", "version", "xMsRequiresSync", "Service", "client", "blobServiceProperties", "options", "callback", "setPropertiesOperationSpec", "getPropertiesOperationSpec", "getStatisticsOperationSpec", "listContainersSegmentOperationSpec", "keyInfo", "getUserDelegationKeyOperationSpec", "getAccountInfoOperationSpec", "body", "submitBatchOperationSpec", "serializer", "coreHttp.Serializer", "Mappers", "Parameters.url", "Parameters.timeoutInSeconds", "Parameters.restype0", "Parameters.comp0", "Parameters.version", "Parameters.requestId", "tslib", "Mappers.BlobServiceProperties", "Mappers.ServiceSetPropertiesHeaders", "Mappers.StorageError", "Mappers.ServiceGetPropertiesHeaders", "Parameters.comp1", "Mappers.BlobServiceStatistics", "Mappers.ServiceGetStatisticsHeaders", "Parameters.prefix", "Parameters.marker0", "Parameters.maxPageSize", "Parameters.include0", "Parameters.comp2", "Mappers.ListContainersSegmentResponse", "Mappers.ServiceListContainersSegmentHeaders", "Parameters.comp3", "Mappers.KeyInfo", "Mappers.UserDelegationKey", "Mappers.ServiceGetUserDelegationKeyHeaders", "Parameters.restype1", "Mappers.ServiceGetAccountInfoHeaders", "Parameters.comp4", "Parameters.contentLength", "Parameters.multipartContentType", "Mappers.ServiceSubmitBatchHeaders", "Container", "createOperationSpec", "deleteMethodOperationSpec", "setMetadataOperationSpec", "getAccessPolicyOperationSpec", "setAccessPolicyOperationSpec", "acquireLeaseOperationSpec", "leaseId", "releaseLeaseOperationSpec", "renewLeaseOperationSpec", "breakLeaseOperationSpec", "proposedLeaseId", "changeLeaseOperationSpec", "listBlobFlatSegmentOperationSpec", "listBlobHierarchySegmentOperationSpec", "Parameters.restype2", "Parameters.metadata", "Parameters.access", "Parameters.defaultEncryptionScope", "Parameters.preventEncryptionScopeOverride", "Mappers.ContainerCreateHeaders", "serializer$1", "Parameters.leaseId0", "Mappers.ContainerGetPropertiesHeaders", "Parameters.ifModifiedSince", "Parameters.ifUnmodifiedSince", "Mappers.ContainerDeleteHeaders", "Parameters.comp5", "Mappers.ContainerSetMetadataHeaders", "Parameters.comp6", "Mappers.ContainerGetAccessPolicyHeaders", "Mappers.ContainerSetAccessPolicyHeaders", "Parameters.comp7", "Parameters.duration", "Parameters.proposedLeaseId0", "Parameters.action0", "Mappers.ContainerAcquireLeaseHeaders", "Parameters.leaseId1", "Parameters.action1", "Mappers.ContainerReleaseLeaseHeaders", "Parameters.action2", "Mappers.ContainerRenewLeaseHeaders", "Parameters.breakPeriod", "Parameters.action3", "Mappers.ContainerBreakLeaseHeaders", "Parameters.proposedLeaseId1", "Parameters.action4", "Mappers.ContainerChangeLeaseHeaders", "Parameters.include1", "Mappers.ListBlobsFlatSegmentResponse", "Mappers.ContainerListBlobFlatSegmentHeaders", "Parameters.delimiter", "Mappers.ListBlobsHierarchySegmentResponse", "Mappers.ContainerListBlobHierarchySegmentHeaders", "Mappers.ContainerGetAccountInfoHeaders", "Blob$1", "Blob", "downloadOperationSpec", "setAccessControlOperationSpec", "getAccessControlOperationSpec", "renameOperationSpec", "undeleteOperationSpec", "setHTTPHeadersOperationSpec", "createSnapshotOperationSpec", "startCopyFromURLOperationSpec", "copyFromURLOperationSpec", "abortCopyFromURLOperationSpec", "tier", "setTierOperationSpec", "Parameters.snapshot", "Parameters.range0", "Parameters.rangeGetContentMD5", "Parameters.rangeGetContentCRC64", "Parameters.encryptionKey", "Parameters.encryptionKeySha256", "Parameters.encryptionAlgorithm", "Parameters.ifMatch", "Parameters.ifNoneMatch", "Mappers.BlobDownloadHeaders", "serializer$2", "Mappers.BlobGetPropertiesHeaders", "Parameters.deleteSnapshots", "Mappers.BlobDeleteHeaders", "Parameters.action5", "Parameters.owner", "Parameters.group", "Parameters.posixPermissions", "Parameters.posixAcl", "Mappers.BlobSetAccessControlHeaders", "Mappers.DataLakeStorageError", "Parameters.upn", "Parameters.action6", "Mappers.BlobGetAccessControlHeaders", "Parameters.pathRenameMode", "Parameters.renameSource", "Parameters.directoryProperties", "Parameters.posixUmask", "Parameters.sourceLeaseId", "Parameters.cacheControl", "Parameters.contentType", "Parameters.contentEncoding", "Parameters.contentLanguage", "Parameters.contentDisposition", "Parameters.sourceIfModifiedSince", "Parameters.sourceIfUnmodifiedSince", "Parameters.sourceIfMatch", "Parameters.sourceIfNoneMatch", "Mappers.BlobRenameHeaders", "Parameters.comp8", "Mappers.BlobUndeleteHeaders", "Parameters.blobCacheControl", "Parameters.blobContentType", "Parameters.blobContentMD5", "Parameters.blobContentEncoding", "Parameters.blobContentLanguage", "Parameters.blobContentDisposition", "Mappers.BlobSetHTTPHeadersHeaders", "Parameters.encryptionScope", "Mappers.BlobSetMetadataHeaders", "Mappers.BlobAcquireLeaseHeaders", "Mappers.BlobReleaseLeaseHeaders", "Mappers.BlobRenewLeaseHeaders", "Mappers.BlobChangeLeaseHeaders", "Mappers.BlobBreakLeaseHeaders", "Parameters.comp9", "Mappers.BlobCreateSnapshotHeaders", "Parameters.tier0", "Parameters.rehydratePriority", "Parameters.copySource", "Mappers.BlobStartCopyFromURLHeaders", "Parameters.sourceContentMD5", "Parameters.xMsRequiresSync", "Mappers.BlobCopyFromURLHeaders", "Parameters.copyId", "Parameters.comp10", "Parameters.copyActionAbortConstant", "Mappers.BlobAbortCopyFromURLHeaders", "Parameters.comp11", "Parameters.tier1", "Mappers.BlobSetTierHeaders", "Mappers.BlobGetAccountInfoHeaders", "PageBlob", "uploadPagesOperationSpec", "clearPagesOperationSpec", "sourceRange", "range", "uploadPagesFromURLOperationSpec", "getPageRangesOperationSpec", "getPageRangesDiffOperationSpec", "resizeOperationSpec", "updateSequenceNumberOperationSpec", "copyIncrementalOperationSpec", "Parameters.blobContentLength", "Parameters.blobSequenceNumber", "Parameters.blobType0", "Mappers.PageBlobCreateHeaders", "serializer$3", "Parameters.comp12", "Parameters.transactionalContentMD5", "Parameters.transactionalContentCrc64", "Parameters.pageWrite0", "Parameters.ifSequenceNumberLessThanOrEqualTo", "Parameters.ifSequenceNumberLessThan", "Parameters.ifSequenceNumberEqualTo", "Mappers.PageBlobUploadPagesHeaders", "Parameters.pageWrite1", "Mappers.PageBlobClearPagesHeaders", "Parameters.sourceUrl", "Parameters.sourceRange0", "Parameters.sourceContentCrc64", "Parameters.range1", "Mappers.PageBlobUploadPagesFromURLHeaders", "Parameters.comp13", "Mappers.PageList", "Mappers.PageBlobGetPageRangesHeaders", "Parameters.prevsnapshot", "Parameters.prevSnapshotUrl", "Mappers.PageBlobGetPageRangesDiffHeaders", "Mappers.PageBlobResizeHeaders", "Parameters.sequenceNumberAction", "Mappers.PageBlobUpdateSequenceNumberHeaders", "Parameters.comp14", "Mappers.PageBlobCopyIncrementalHeaders", "AppendBlob", "appendBlockOperationSpec", "appendBlockFromUrlOperationSpec", "Parameters.blobType1", "Mappers.AppendBlobCreateHeaders", "serializer$4", "Parameters.comp15", "Parameters.maxSize", "Parameters.appendPosition", "Mappers.AppendBlobAppendBlockHeaders", "Parameters.sourceRange1", "Mappers.AppendBlobAppendBlockFromUrlHeaders", "BlockBlob", "uploadOperationSpec", "stageBlockOperationSpec", "stageBlockFromURLOperationSpec", "blocks", "commitBlockListOperationSpec", "getBlockListOperationSpec", "Parameters.blobType2", "Mappers.BlockBlobUploadHeaders", "serializer$5", "Parameters.blockId", "Parameters.comp16", "Mappers.BlockBlobStageBlockHeaders", "Mappers.BlockBlobStageBlockFromURLHeaders", "Parameters.comp17", "Mappers.BlockLookupList", "Mappers.BlockBlobCommitBlockListHeaders", "Parameters.listType", "Mappers.BlockList", "Mappers.BlockBlobGetBlockListHeaders", "logger", "createClientLogger", "SDK_VERSION", "SERVICE_VERSION", "BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES", "BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES", "BLOCK_BLOB_MAX_BLOCKS", "DEFAULT_BLOCK_BUFFER_SIZE_BYTES", "DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES", "DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS", "StorageOAuthScopes", "URLConstants", "HTTPURLConnection", "HeaderConstants", "ETagNone", "SIZE_1_MB", "BATCH_MAX_REQUEST", "BATCH_MAX_PAYLOAD_IN_BYTES", "HTTP_LINE_ENDING", "HTTP_VERSION_1_1", "EncryptionAlgorithmAES25", "DevelopmentConnectionString", "StorageBlobLoggingAllowedHeaderNames", "StorageBlobLoggingAllowedQueryParameters", "escapeURLPath", "urlParsed", "URLBuilder", "path", "escape", "getProxyUriFromDevConnString", "connectionString", "proxyUri", "matchCredentials", "_i", "matchCredentials_1", "element", "getValueInConnString", "argument", "elements", "elements_1", "extractConnectionStringParts", "blobEndpoint", "defaultEndpointsProtocol", "accountName", "accountKey", "endpointSuffix", "protocol", "accountSas", "getAccountNameFromUrl", "text", "appendToURLPath", "name", "setURLParameter", "value", "setURLHost", "host", "getURLPath", "getURLScheme", "getURLPathAndQuery", "pathString", "queryString", "getURLQueries", "querySubStrings", "indexOfEqual", "lastIndexOfEqual", "queries", "querySubStrings_1", "querySubString", "splitResults", "key", "truncatedISO8061Date", "date", "withMilliseconds", "dateString", "base64encode", "content", "isNode", "generateBlockID", "blockIDPrefix", "blockIndex", "maxSourceStringLength", "maxBlockIndexLength", "maxAllowedBlockIDPrefixLength", "res", "padStart", "delay", "timeInMs", "aborter", "abortError", "resolve", "reject", "timeout", "abortHandler", "resolveHandler", "currentString", "targetLength", "padString", "iEqual", "str1", "str2", "parsedUrl", "StorageBrowserPolicy", "_super", "__extends", "nextPolicy", "request", "BaseRequestPolicy", "StorageBrowserPolicyFactory", "StorageRetryPolicyType", "DEFAULT_RETRY_OPTIONS", "RETRY_ABORT_ERROR", "AbortError", "StorageRetryPolicy", "retryOptions", "_this", "secondaryHas404", "attempt", "newRequest", "isPrimaryRetry", "response", "_a", "err_1", "err", "retriableErrors", "retriableErrors_1", "retriableError", "statusCode", "abortSignal", "delayTimeInMs", "StorageRetryPolicyFactory", "TelemetryPolicy", "telemetry", "HttpHeaders", "TelemetryPolicyFactory", "userAgentInfo", "telemetryString", "libInfo", "runtimeInfo", "os.type", "os.release", "_defaultHttpClient", "DefaultHttpClient", "getCachedDefaultHttpClient", "Pipeline", "factories", "newPipeline", "credential", "pipelineOptions", "telemetryPolicy", "tracingPolicy", "keepAlivePolicy", "generateClientRequestIdPolicy", "deserializationPolicy", "logPolicy", "proxyPolicy", "disableResponseDecompressionPolicy", "isTokenCredential", "bearerTokenAuthenticationPolicy", "ABORT_ERROR", "RetriableReadableStream", "source", "getter", "offset", "count", "AbortSignal", "data", "newSource", "error", "Readable", "BlobDownloadResponse", "originalResponse", "rangeToString", "iRange", "BlockBlobTier", "PremiumPageBlobTier", "toAccessTier", "ensureCpkIfSpecified", "cpk", "isHttps", "streamToBuffer", "stream", "buffer", "end", "encoding", "pos", "chunk", "chunkLength", "streamToBuffer2", "bufferSize", "readStreamToLocalFile", "rs", "file", "ws", "fs.createWriteStream", "fsStat", "util.promisify", "fs.stat", "CredentialPolicy", "StorageSharedKeyCredentialPolicy", "factory", "stringToSign", "signature", "headerName", "headersArray", "a", "b", "index", "array", "canonicalizedHeadersStringToSign", "header", "canonicalizedResourceString", "lowercaseQueries", "queryKeys", "lowercaseKey", "queryKeys_1", "Credential", "_nextPolicy", "_options", "StorageSharedKeyCredential", "createHmac", "AnonymousCredentialPolicy", "AnonymousCredential", "BatchStates", "Batch", "concurrency", "EventEmitter", "operation", "error_1", "createSpan", "operationName", "tracingOptions", "tracer", "getTracer", "spanOptions", "SpanKind", "span", "newOptions", "packageName", "packageVersion", "StorageClientContext", "defaultUserAgent", "coreHttp.getDefaultUserAgentValue", "coreHttp.ServiceClient", "StorageClient", "pipeline", "storageClientContext", "BufferScheduler", "readable", "maxBuffers", "outgoingHandler", "merged", "bufferLength", "rangeResponseFromModel", "pageRange", "x", "clearRange", "BlobBeginCopyFromUrlPoller", "blobClient", "intervalInMs", "onProgress", "resumeFrom", "startCopyFromURLOptions", "state", "makeBlobBeginCopyFromURLPollOperation", "Poller", "cancel", "update", "result", "copyStatus", "copyProgress", "prevCopyProgress", "toString", "BlobClient", "urlOrConnectionString", "credentialOrPipelineOrContainerName", "blobNameOrOptions", "containerName", "blobName", "extractedCreds", "sharedKeyCredential", "getDefaultProxySettings", "StorageBlob", "AppendBlobClient", "BlockBlobClient", "PageBlobClient", "res_1", "_b", "start", "updatedOptions", "CanonicalCode", "e_1", "e_2", "e_3", "e_4", "e_5", "blobHTTPHeaders", "e_6", "e_7", "proposeLeaseId", "BlobLeaseClient", "e_8", "args", "poller", "e_9", "e_10", "e_11", "param1", "param2", "param3", "param4", "transferProgress_1", "batch", "off", "chunkEnd", "e_12", "filePath", "e_13", "pathComponents", "e_14", "e_15", "e_16", "sourceURL", "sourceOffset", "e_17", "e_18", "e_19", "e_20", "e_21", "e_22", "browserData", "browserBlob_1", "size", "e_23", "blobFactory", "numBlocks_1", "blockList_1", "blockIDPrefix_1", "generateUuid", "transferProgress_2", "i", "blockID", "e_24", "fs.createReadStream", "e_25", "maxConcurrency", "blockNum_1", "blockIDPrefix_2", "transferProgress_3", "blockList_2", "scheduler", "e_26", "streamFactory", "numBlocks_2", "blockList_3", "blockIDPrefix_3", "transferProgress_4", "e_27", "e_28", "e_29", "destOffset", "e_30", "e_31", "e_32", "prevSnapshot", "e_33", "e_34", "e_35", "sequenceNumber", "e_36", "e_37", "clientContext", "ContainerClient", "e_38", "e_39", "e_40", "e_41", "operationOptions", "e_42", "e_43", "e_44", "e_45", "e_46", "e_47", "response_1", "identifier", "accessPolicy", "e_48", "containerAcl", "acl", "_c", "e_49", "blockBlobClient", "e_50", "e_51", "marker", "e_52", "e_53", "listBlobsFlatSegmentResponse", "__asyncValues", "__values", "__asyncDelegator", "_d", "include", "iter", "settings", "listBlobsHierarchySegmentResponse", "segment", "_g", "_e", "blob", "getBodyAsText", "batchResponse", "responseLength", "utf8ByteLength", "str", "HTTP_HEADER_DELIMITER", "SPACE_DELIMITER", "NOT_FOUND", "BatchResponseParser", "subRequests", "responseBodyAsText", "subResponses", "subResponseCount", "deserializedSubResponses", "subResponsesSucceededCount", "subResponsesFailedCount", "subResponse", "deserializedSubResponse", "responseLines", "subRespHeaderStartFound", "subRespHeaderEndFound", "subRespFailed", "contentId", "responseLines_1", "responseLine", "tokens", "MutexLockStatus", "Mutex", "handler", "handler_1", "BlobBatch", "InnerBatchRequest", "subRequest", "assembleSubRequestFunc", "batchType", "urlOrBlobClient", "credentialOrOptions", "credentialOrTier", "tierOrOptions", "tempGuid", "isAnonymousCreds", "policyFactoryLength", "BatchHeaderFilterPolicyFactory", "BatchRequestAssemblePolicyFactory", "BatchRequestAssemblePolicy", "batchRequest", "WebResource", "BatchHeaderFilterPolicy", "xMsHeaderName", "BlobBatchClient", "credentialOrPipeline", "urlsOrBlobClients", "urlsOrBlobClients_1", "urlsOrBlobClients_2", "batchRequestBody", "rawBatchResponse", "batchResponseParser", "responseSummary", "BlobServiceClient", "containerClient", "containerCreateResponse", "properties", "listContainersSegmentResponse", "listSegmentOptions", "startsOn", "expiresOn", "userDelegationKey", "AccountSASPermissions", "permissions", "accountSASPermissions", "permissions_1", "c", "AccountSASResourceTypes", "resourceTypes", "accountSASResourceTypes", "resourceTypes_1", "AccountSASServices", "services", "accountSASServices", "services_1", "ipRangeToString", "ipRange", "SASProtocol", "SASQueryParameters", "resource", "params", "params_1", "param", "generateAccountSASQueryParameters", "accountSASSignatureValues", "parsedPermissions", "parsedServices", "parsedResourceTypes", "BlobSASPermissions", "blobSASPermissions", "char", "ContainerSASPermissions", "containerSASPermissions", "UserDelegationKeyCredential", "generateBlobSASQueryParameters", "blobSASSignatureValues", "sharedKeyCredentialOrUserDelegationKey", "userDelegationKeyCredential", "generateBlobSASQueryParameters20181109", "generateBlobSASQueryParametersUDK20181109", "generateBlobSASQueryParameters20150405", "verifiedPermissions", "getCanonicalName", "core", "__importStar", "http_client_1", "constants_1", "isSuccessStatusCode", "statusCode", "exports", "isServerErrorStatusCode", "isRetryableStatusCode", "sleep", "milliseconds", "resolve", "retry", "name", "method", "getStatusCode", "maxAttempts", "delay", "onError", "errorMessage", "attempt", "response", "isRetryable", "error", "retryTypedResponse", "retryHttpClientResponse", "core", "__importStar", "http_client_1", "storage_blob_1", "buffer", "fs", "stream", "util", "utils", "constants_1", "requestUtils_1", "pipeResponseToStream", "response", "output", "DownloadProgress", "contentLength", "segmentSize", "receivedBytes", "transferredBytes", "percentage", "elapsedTime", "downloadSpeed", "progress", "delayInMs", "displayCallback", "exports", "downloadCacheHttpClient", "archiveLocation", "archivePath", "writeStream", "httpClient", "downloadResponse", "__awaiter", "contentLengthHeader", "expectedLength", "actualLength", "downloadCacheStorageSDK", "options", "client", "_a", "maxSegmentSize", "downloadProgress", "fd", "segmentStart", "result", "core", "__importStar", "getUploadOptions", "copy", "result", "exports", "getDownloadOptions", "core", "__importStar", "http_client_1", "auth_1", "crypto", "fs", "url_1", "utils", "constants_1", "downloadUtils_1", "options_1", "requestUtils_1", "versionSalt", "getCacheApiUrl", "resource", "baseUrl", "url", "createAcceptHeader", "type", "apiVersion", "getRequestOptions", "createHttpClient", "token", "bearerCredentialHandler", "getCacheVersion", "paths", "compressionMethod", "components", "exports", "getCacheEntry", "keys", "options", "httpClient", "version", "response", "__awaiter", "cacheResult", "cacheDownloadUrl", "downloadCache", "archiveLocation", "archivePath", "archiveUrl", "downloadOptions", "reserveCache", "key", "reserveCacheRequest", "_b", "_a", "getContentRange", "start", "end", "uploadChunk", "resourceUrl", "openStream", "additionalHeaders", "uploadChunkResponse", "uploadFile", "cacheId", "fileSize", "fd", "uploadOptions", "concurrency", "maxChunkSize", "parallelUploads", "offset", "chunkSize", "error", "commitCache", "filesize", "commitCacheRequest", "saveCache", "cacheSize", "commitCacheResponse", "exec_1", "io", "__importStar", "fs_1", "path", "utils", "constants_1", "getTarPath", "args", "compressionMethod", "systemTar", "gnuTar", "execTar", "cwd", "error", "getWorkingDirectory", "_a", "extractTar", "archivePath", "workingDirectory", "getCompressionProgram", "exports", "createTar", "archiveFolder", "sourceDirectories", "manifestFilename", "cacheFileName", "listTar", "core", "__importStar", "path", "utils", "cacheHttpClient", "tar_1", "ValidationError", "message", "exports", "ReserveCacheError", "checkPaths", "paths", "checkKey", "key", "restoreCache", "primaryKey", "restoreKeys", "options", "keys", "compressionMethod", "cacheEntry", "archivePath", "archiveFileSize", "error", "saveCache", "cacheId", "cachePaths", "archiveFolder", "fileSizeLimit", "cache", "core", "exec", "fs", "path", "keyPrefix", "key", "restoreKeys", "s", "x", "run", "script", "args", "env", "value", "posixName", "srcDir", "stdout", "data", "paths", "instantiateKey", "instantiateRestoreKeys", "keyParts", "keys", "i", "restoreCache", "cacheKey", "saveCache", "installWithNix", "main", "stateKey", "stateVal", "post"]
}
